{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19","program":"/Users/Seb/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","futures_util","--edition=2018","/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=751716327be7e36a","-C","extra-filename=-751716327be7e36a","--out-dir","/Users/Seb/Documents/GitHub/new_website/rs/target/rls/debug/deps","-L","dependency=/Users/Seb/Documents/GitHub/new_website/rs/target/rls/debug/deps","--extern","futures_core=/Users/Seb/Documents/GitHub/new_website/rs/target/rls/debug/deps/libfutures_core-05459568a49ffb3f.rmeta","--extern","futures_task=/Users/Seb/Documents/GitHub/new_website/rs/target/rls/debug/deps/libfutures_task-9f2eec8e19b7010b.rmeta","--extern","pin_project_lite=/Users/Seb/Documents/GitHub/new_website/rs/target/rls/debug/deps/libpin_project_lite-b399052bc0895de7.rmeta","--extern","pin_utils=/Users/Seb/Documents/GitHub/new_website/rs/target/rls/debug/deps/libpin_utils-6b2f1ec8c257d447.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/Seb/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/Seb/Documents/GitHub/new_website/rs/target/rls/debug/deps/libfutures_util-751716327be7e36a.rmeta"},"prelude":{"crate_id":{"name":"futures_util","disambiguator":[11219716307821306542,0]},"crate_root":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src","external_crates":[{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[5950131627965951498,0]}},{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[2741719692070475021,0]}},{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[2794630430347630357,0]}},{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":4,"id":{"name":"futures_core","disambiguator":[144101439101305030,0]}},{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":5,"id":{"name":"std","disambiguator":[18005471550560613154,0]}},{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":6,"id":{"name":"alloc","disambiguator":[11571400143354356751,0]}},{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":7,"id":{"name":"libc","disambiguator":[7193487377502419209,0]}},{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":8,"id":{"name":"unwind","disambiguator":[3984647143510438201,0]}},{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":9,"id":{"name":"cfg_if","disambiguator":[12184698882915890589,0]}},{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":10,"id":{"name":"miniz_oxide","disambiguator":[11618273138748747847,0]}},{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":11,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10066305145840536466,0]}},{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":12,"id":{"name":"adler","disambiguator":[6325594472561512306,0]}},{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":13,"id":{"name":"hashbrown","disambiguator":[17413800936977720645,0]}},{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":14,"id":{"name":"std_detect","disambiguator":[13105407555381832082,0]}},{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":15,"id":{"name":"rustc_demangle","disambiguator":[2532692864303013170,0]}},{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":16,"id":{"name":"addr2line","disambiguator":[3831727617617568246,0]}},{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":17,"id":{"name":"gimli","disambiguator":[14168850698196268560,0]}},{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":18,"id":{"name":"object","disambiguator":[14481778817480203751,0]}},{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":19,"id":{"name":"memchr","disambiguator":[3413086096283251618,0]}},{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":20,"id":{"name":"panic_unwind","disambiguator":[5901939098322418461,0]}},{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":21,"id":{"name":"pin_utils","disambiguator":[7560512486180147481,0]}},{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","num":22,"id":{"name":"futures_task","disambiguator":[12220524439417764512,0]}},{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/flatten.rs","num":23,"id":{"name":"pin_project_lite","disambiguator":[2347893361755076400,0]}}],"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":0,"byte_end":11572,"line_start":1,"line_end":337,"column_start":1,"column_end":18}},"imports":[{"kind":"Use","ref_id":{"krate":4,"index":169},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":861,"byte_end":866,"line_start":29,"line_end":29,"column_start":23,"column_end":28},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":7},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":887,"byte_end":894,"line_start":30,"line_end":30,"column_start":20,"column_end":27},"alias_span":null,"name":"pin_mut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":13093},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":12041,"byte_end":12047,"line_start":13,"line_end":13,"column_start":23,"column_end":29},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":4,"index":27},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":12166,"byte_end":12177,"line_start":17,"line_end":17,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedFuture","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":4,"index":44},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":12179,"byte_end":12188,"line_start":17,"line_end":17,"column_start":45,"column_end":54},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":22,"index":114},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":12214,"byte_end":12223,"line_start":18,"line_end":18,"column_start":24,"column_end":33},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":22,"index":80},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":12225,"byte_end":12239,"line_start":18,"line_end":18,"column_start":35,"column_end":49},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":22,"index":135},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":12241,"byte_end":12256,"line_start":18,"line_end":18,"column_start":51,"column_end":66},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":4777},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":16330,"byte_end":16334,"line_start":46,"line_end":46,"column_start":15,"column_end":19},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":35}},{"kind":"Use","ref_id":{"krate":0,"index":4868},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":12371,"byte_end":12378,"line_start":24,"line_end":24,"column_start":5,"column_end":12},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":4777},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":12380,"byte_end":12384,"line_start":24,"line_end":24,"column_start":14,"column_end":18},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":221},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":12386,"byte_end":12395,"line_start":24,"line_end":24,"column_start":20,"column_end":29},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":5211},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":12397,"byte_end":12404,"line_start":24,"line_end":24,"column_start":31,"column_end":38},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":5026},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":12406,"byte_end":12416,"line_start":24,"line_end":24,"column_start":40,"column_end":50},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":4966},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":12418,"byte_end":12421,"line_start":24,"line_end":24,"column_start":52,"column_end":55},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":5076},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":12423,"byte_end":12430,"line_start":24,"line_end":24,"column_start":57,"column_end":64},"alias_span":null,"name":"MapInto","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":5271},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":12432,"byte_end":12442,"line_start":24,"line_end":24,"column_start":66,"column_end":76},"alias_span":null,"name":"NeverError","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":5138},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":12444,"byte_end":12448,"line_start":24,"line_end":24,"column_start":78,"column_end":82},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":5319},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":12450,"byte_end":12459,"line_start":24,"line_end":24,"column_start":84,"column_end":93},"alias_span":null,"name":"UnitError","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":4916},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":12555,"byte_end":12568,"line_start":28,"line_end":28,"column_start":23,"column_end":36},"alias_span":null,"name":"FlattenStream","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":5365},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":47492,"byte_end":47502,"line_start":104,"line_end":104,"column_start":28,"column_end":38},"alias_span":null,"name":"IntoFuture","value":"","parent":{"krate":0,"index":278}},{"kind":"Use","ref_id":{"krate":0,"index":5670},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":12898,"byte_end":12905,"line_start":43,"line_end":43,"column_start":5,"column_end":12},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":5817},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":12907,"byte_end":12914,"line_start":43,"line_end":43,"column_start":14,"column_end":21},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":6000},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":12916,"byte_end":12926,"line_start":43,"line_end":43,"column_start":23,"column_end":33},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":5939},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":12928,"byte_end":12937,"line_start":43,"line_end":43,"column_start":35,"column_end":44},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":5365},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":12939,"byte_end":12949,"line_start":43,"line_end":43,"column_start":46,"column_end":56},"alias_span":null,"name":"IntoFuture","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":6122},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":12951,"byte_end":12957,"line_start":43,"line_end":43,"column_start":58,"column_end":64},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":6061},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":12959,"byte_end":12964,"line_start":43,"line_end":43,"column_start":66,"column_end":71},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":6184},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":12966,"byte_end":12977,"line_start":43,"line_end":43,"column_start":73,"column_end":84},"alias_span":null,"name":"MapOkOrElse","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":5878},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":12979,"byte_end":12985,"line_start":43,"line_end":43,"column_start":86,"column_end":92},"alias_span":null,"name":"OkInto","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":5744},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":12991,"byte_end":12997,"line_start":44,"line_end":44,"column_start":5,"column_end":11},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":5498},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":12999,"byte_end":13009,"line_start":44,"line_end":44,"column_start":13,"column_end":23},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":5619},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":13011,"byte_end":13027,"line_start":44,"line_end":44,"column_start":25,"column_end":41},"alias_span":null,"name":"TryFlattenStream","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":484},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":13029,"byte_end":13041,"line_start":44,"line_end":44,"column_start":43,"column_end":55},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":6257},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":13043,"byte_end":13055,"line_start":44,"line_end":44,"column_start":57,"column_end":69},"alias_span":null,"name":"UnwrapOrElse","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":581},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":13227,"byte_end":13231,"line_start":54,"line_end":54,"column_start":22,"column_end":26},"alias_span":null,"name":"lazy","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":6315},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":13233,"byte_end":13237,"line_start":54,"line_end":54,"column_start":28,"column_end":32},"alias_span":null,"name":"Lazy","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":627},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":13278,"byte_end":13285,"line_start":57,"line_end":57,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":6321},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":13287,"byte_end":13294,"line_start":57,"line_end":57,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":674},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":13341,"byte_end":13351,"line_start":60,"line_end":60,"column_start":28,"column_end":38},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":6327},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":13353,"byte_end":13362,"line_start":60,"line_end":60,"column_start":40,"column_end":49},"alias_span":null,"name":"MaybeDone","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":726},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":13417,"byte_end":13431,"line_start":63,"line_end":63,"column_start":32,"column_end":46},"alias_span":null,"name":"try_maybe_done","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":6340},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":13433,"byte_end":13445,"line_start":63,"line_end":63,"column_start":48,"column_end":60},"alias_span":null,"name":"TryMaybeDone","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":6353},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":13483,"byte_end":13495,"line_start":66,"line_end":66,"column_start":23,"column_end":35},"alias_span":null,"name":"OptionFuture","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":808},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":13535,"byte_end":13542,"line_start":69,"line_end":69,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":803},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":13544,"byte_end":13550,"line_start":69,"line_end":69,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":867},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":13605,"byte_end":13619,"line_start":72,"line_end":72,"column_start":32,"column_end":46},"alias_span":null,"name":"poll_immediate","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":6392},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":13621,"byte_end":13634,"line_start":72,"line_end":72,"column_start":48,"column_end":61},"alias_span":null,"name":"PollImmediate","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":914},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":13671,"byte_end":13674,"line_start":75,"line_end":75,"column_start":23,"column_end":26},"alias_span":null,"name":"err","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":911},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":13676,"byte_end":13678,"line_start":75,"line_end":75,"column_start":28,"column_end":30},"alias_span":null,"name":"ok","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":909},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":13680,"byte_end":13685,"line_start":75,"line_end":75,"column_start":32,"column_end":37},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":6431},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":13687,"byte_end":13692,"line_start":75,"line_end":75,"column_start":39,"column_end":44},"alias_span":null,"name":"Ready","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":965},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":13727,"byte_end":13731,"line_start":78,"line_end":78,"column_start":22,"column_end":26},"alias_span":null,"name":"join","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":968},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":13733,"byte_end":13738,"line_start":78,"line_end":78,"column_start":28,"column_end":33},"alias_span":null,"name":"join3","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":972},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":13740,"byte_end":13745,"line_start":78,"line_end":78,"column_start":35,"column_end":40},"alias_span":null,"name":"join4","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":977},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":13747,"byte_end":13752,"line_start":78,"line_end":78,"column_start":42,"column_end":47},"alias_span":null,"name":"join5","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":6533},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":13754,"byte_end":13758,"line_start":78,"line_end":78,"column_start":49,"column_end":53},"alias_span":null,"name":"Join","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":6578},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":13760,"byte_end":13765,"line_start":78,"line_end":78,"column_start":55,"column_end":60},"alias_span":null,"name":"Join3","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":6635},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":13767,"byte_end":13772,"line_start":78,"line_end":78,"column_start":62,"column_end":67},"alias_span":null,"name":"Join4","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":6704},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":13774,"byte_end":13779,"line_start":78,"line_end":78,"column_start":69,"column_end":74},"alias_span":null,"name":"Join5","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1039},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":13930,"byte_end":13936,"line_start":86,"line_end":86,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":6785},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":13938,"byte_end":13944,"line_start":86,"line_end":86,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1093},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":14112,"byte_end":14120,"line_start":95,"line_end":95,"column_start":5,"column_end":13},"alias_span":null,"name":"try_join","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1096},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":14122,"byte_end":14131,"line_start":95,"line_end":95,"column_start":15,"column_end":24},"alias_span":null,"name":"try_join3","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1100},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":14133,"byte_end":14142,"line_start":95,"line_end":95,"column_start":26,"column_end":35},"alias_span":null,"name":"try_join4","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1105},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":14144,"byte_end":14153,"line_start":95,"line_end":95,"column_start":37,"column_end":46},"alias_span":null,"name":"try_join5","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":6863},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":14155,"byte_end":14162,"line_start":95,"line_end":95,"column_start":48,"column_end":55},"alias_span":null,"name":"TryJoin","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":6908},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":14164,"byte_end":14172,"line_start":95,"line_end":95,"column_start":57,"column_end":65},"alias_span":null,"name":"TryJoin3","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":6965},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":14174,"byte_end":14182,"line_start":95,"line_end":95,"column_start":67,"column_end":75},"alias_span":null,"name":"TryJoin4","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":7034},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":14184,"byte_end":14192,"line_start":95,"line_end":95,"column_start":77,"column_end":85},"alias_span":null,"name":"TryJoin5","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1164},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":14368,"byte_end":14378,"line_start":104,"line_end":104,"column_start":28,"column_end":38},"alias_span":null,"name":"try_select","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":7115},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":14380,"byte_end":14389,"line_start":104,"line_end":104,"column_start":40,"column_end":49},"alias_span":null,"name":"TrySelect","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":7123},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":14543,"byte_end":14549,"line_start":112,"line_end":112,"column_start":23,"column_end":29},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":1,"index":13093},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":10673,"byte_end":10679,"line_start":296,"line_end":296,"column_start":25,"column_end":31},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":221},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":10681,"byte_end":10690,"line_start":296,"line_end":296,"column_start":33,"column_end":42},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":44},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":10692,"byte_end":10701,"line_start":296,"line_end":296,"column_start":44,"column_end":53},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":484},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":10703,"byte_end":10715,"line_start":296,"line_end":296,"column_start":55,"column_end":67},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":110},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":119607,"byte_end":119618,"line_start":14,"line_end":14,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedStream","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":4,"index":96},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":119620,"byte_end":119626,"line_start":14,"line_end":14,"column_start":45,"column_end":51},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":4,"index":127},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":119628,"byte_end":119637,"line_start":14,"line_end":14,"column_start":53,"column_end":62},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":7140},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":123943,"byte_end":123948,"line_start":29,"line_end":29,"column_start":22,"column_end":27},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":1270}},{"kind":"Use","ref_id":{"krate":0,"index":7189},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":124063,"byte_end":124070,"line_start":33,"line_end":33,"column_start":24,"column_end":31},"alias_span":null,"name":"Collect","value":"","parent":{"krate":0,"index":1270}},{"kind":"Use","ref_id":{"krate":0,"index":7238},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":124181,"byte_end":124186,"line_start":37,"line_end":37,"column_start":22,"column_end":27},"alias_span":null,"name":"Unzip","value":"","parent":{"krate":0,"index":1270}},{"kind":"Use","ref_id":{"krate":0,"index":7300},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":124299,"byte_end":124305,"line_start":41,"line_end":41,"column_start":23,"column_end":29},"alias_span":null,"name":"Concat","value":"","parent":{"krate":0,"index":1270}},{"kind":"Use","ref_id":{"krate":0,"index":7377},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":124532,"byte_end":124537,"line_start":49,"line_end":49,"column_start":22,"column_end":27},"alias_span":null,"name":"Cycle","value":"","parent":{"krate":0,"index":1270}},{"kind":"Use","ref_id":{"krate":0,"index":7417},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":124656,"byte_end":124665,"line_start":53,"line_end":53,"column_start":26,"column_end":35},"alias_span":null,"name":"Enumerate","value":"","parent":{"krate":0,"index":1270}},{"kind":"Use","ref_id":{"krate":0,"index":7461},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":124778,"byte_end":124784,"line_start":57,"line_end":57,"column_start":23,"column_end":29},"alias_span":null,"name":"Filter","value":"","parent":{"krate":0,"index":1270}},{"kind":"Use","ref_id":{"krate":0,"index":7526},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":124905,"byte_end":124914,"line_start":61,"line_end":61,"column_start":27,"column_end":36},"alias_span":null,"name":"FilterMap","value":"","parent":{"krate":0,"index":1270}},{"kind":"Use","ref_id":{"krate":0,"index":7695},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":125302,"byte_end":125306,"line_start":75,"line_end":75,"column_start":21,"column_end":25},"alias_span":null,"name":"Fold","value":"","parent":{"krate":0,"index":1270}},{"kind":"Use","ref_id":{"krate":0,"index":7886},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":126020,"byte_end":126027,"line_start":100,"line_end":100,"column_start":25,"column_end":32},"alias_span":null,"name":"ForEach","value":"","parent":{"krate":0,"index":1270}},{"kind":"Use","ref_id":{"krate":0,"index":7943},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":126136,"byte_end":126140,"line_start":104,"line_end":104,"column_start":21,"column_end":25},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":1270}},{"kind":"Use","ref_id":{"krate":0,"index":7987},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":126263,"byte_end":126275,"line_start":108,"line_end":108,"column_start":28,"column_end":40},"alias_span":null,"name":"StreamFuture","value":"","parent":{"krate":0,"index":1270}},{"kind":"Use","ref_id":{"krate":0,"index":8062},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":126638,"byte_end":126641,"line_start":119,"line_end":119,"column_start":20,"column_end":23},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":1270}},{"kind":"Use","ref_id":{"krate":0,"index":8194},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":127024,"byte_end":127028,"line_start":130,"line_end":130,"column_start":21,"column_end":25},"alias_span":null,"name":"Next","value":"","parent":{"krate":0,"index":1270}},{"kind":"Use","ref_id":{"krate":0,"index":8202},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":127161,"byte_end":127175,"line_start":134,"line_end":134,"column_start":33,"column_end":47},"alias_span":null,"name":"SelectNextSome","value":"","parent":{"krate":0,"index":1270}},{"kind":"Use","ref_id":{"krate":0,"index":8336},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":127285,"byte_end":127291,"line_start":138,"line_end":138,"column_start":22,"column_end":28},"alias_span":null,"name":"NextIf","value":"","parent":{"krate":0,"index":1270}},{"kind":"Use","ref_id":{"krate":0,"index":8385},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":127293,"byte_end":127301,"line_start":138,"line_end":138,"column_start":30,"column_end":38},"alias_span":null,"name":"NextIfEq","value":"","parent":{"krate":0,"index":1270}},{"kind":"Use","ref_id":{"krate":0,"index":8254},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":127303,"byte_end":127307,"line_start":138,"line_end":138,"column_start":40,"column_end":44},"alias_span":null,"name":"Peek","value":"","parent":{"krate":0,"index":1270}},{"kind":"Use","ref_id":{"krate":0,"index":8295},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":127309,"byte_end":127316,"line_start":138,"line_end":138,"column_start":46,"column_end":53},"alias_span":null,"name":"PeekMut","value":"","parent":{"krate":0,"index":1270}},{"kind":"Use","ref_id":{"krate":0,"index":8210},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":127318,"byte_end":127326,"line_start":138,"line_end":138,"column_start":55,"column_end":63},"alias_span":null,"name":"Peekable","value":"","parent":{"krate":0,"index":1270}},{"kind":"Use","ref_id":{"krate":0,"index":8434},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":127436,"byte_end":127440,"line_start":142,"line_end":142,"column_start":21,"column_end":25},"alias_span":null,"name":"Skip","value":"","parent":{"krate":0,"index":1270}},{"kind":"Use","ref_id":{"krate":0,"index":8478},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":127561,"byte_end":127570,"line_start":146,"line_end":146,"column_start":27,"column_end":36},"alias_span":null,"name":"SkipWhile","value":"","parent":{"krate":0,"index":1270}},{"kind":"Use","ref_id":{"krate":0,"index":8547},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":127679,"byte_end":127683,"line_start":150,"line_end":150,"column_start":21,"column_end":25},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":1270}},{"kind":"Use","ref_id":{"krate":0,"index":8591},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":127804,"byte_end":127813,"line_start":154,"line_end":154,"column_start":27,"column_end":36},"alias_span":null,"name":"TakeWhile","value":"","parent":{"krate":0,"index":1270}},{"kind":"Use","ref_id":{"krate":0,"index":8660},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":127934,"byte_end":127943,"line_start":158,"line_end":158,"column_start":27,"column_end":36},"alias_span":null,"name":"TakeUntil","value":"","parent":{"krate":0,"index":1270}},{"kind":"Use","ref_id":{"krate":0,"index":8717},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":128052,"byte_end":128056,"line_start":162,"line_end":162,"column_start":21,"column_end":25},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":1270}},{"kind":"Use","ref_id":{"krate":0,"index":8778},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":128163,"byte_end":128166,"line_start":166,"line_end":166,"column_start":20,"column_end":23},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":1270}},{"kind":"Use","ref_id":{"krate":0,"index":8835},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":128634,"byte_end":128638,"line_start":182,"line_end":182,"column_start":21,"column_end":25},"alias_span":null,"name":"Scan","value":"","parent":{"krate":0,"index":1270}},{"kind":"Use","ref_id":{"krate":0,"index":7140},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":119753,"byte_end":119758,"line_start":21,"line_end":21,"column_start":5,"column_end":10},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":7189},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":119760,"byte_end":119767,"line_start":21,"line_end":21,"column_start":12,"column_end":19},"alias_span":null,"name":"Collect","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":7300},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":119769,"byte_end":119775,"line_start":21,"line_end":21,"column_start":21,"column_end":27},"alias_span":null,"name":"Concat","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":7377},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":119777,"byte_end":119782,"line_start":21,"line_end":21,"column_start":29,"column_end":34},"alias_span":null,"name":"Cycle","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":7417},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":119784,"byte_end":119793,"line_start":21,"line_end":21,"column_start":36,"column_end":45},"alias_span":null,"name":"Enumerate","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":7461},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":119795,"byte_end":119801,"line_start":21,"line_end":21,"column_start":47,"column_end":53},"alias_span":null,"name":"Filter","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":7526},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":119803,"byte_end":119812,"line_start":21,"line_end":21,"column_start":55,"column_end":64},"alias_span":null,"name":"FilterMap","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":8115},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":119814,"byte_end":119821,"line_start":21,"line_end":21,"column_start":66,"column_end":73},"alias_span":null,"name":"FlatMap","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":7642},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":119823,"byte_end":119830,"line_start":21,"line_end":21,"column_start":75,"column_end":82},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":7695},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":119832,"byte_end":119836,"line_start":21,"line_end":21,"column_start":84,"column_end":88},"alias_span":null,"name":"Fold","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":7886},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":119838,"byte_end":119845,"line_start":21,"line_end":21,"column_start":90,"column_end":97},"alias_span":null,"name":"ForEach","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":7943},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":119851,"byte_end":119855,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":7996},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":119857,"byte_end":119864,"line_start":22,"line_end":22,"column_start":11,"column_end":18},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":8062},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":119866,"byte_end":119869,"line_start":22,"line_end":22,"column_start":20,"column_end":23},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":8194},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":119871,"byte_end":119875,"line_start":22,"line_end":22,"column_start":25,"column_end":29},"alias_span":null,"name":"Next","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":8336},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":119877,"byte_end":119883,"line_start":22,"line_end":22,"column_start":31,"column_end":37},"alias_span":null,"name":"NextIf","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":8385},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":119885,"byte_end":119893,"line_start":22,"line_end":22,"column_start":39,"column_end":47},"alias_span":null,"name":"NextIfEq","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":8254},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":119895,"byte_end":119899,"line_start":22,"line_end":22,"column_start":49,"column_end":53},"alias_span":null,"name":"Peek","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":8295},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":119901,"byte_end":119908,"line_start":22,"line_end":22,"column_start":55,"column_end":62},"alias_span":null,"name":"PeekMut","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":8210},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":119910,"byte_end":119918,"line_start":22,"line_end":22,"column_start":64,"column_end":72},"alias_span":null,"name":"Peekable","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":8835},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":119920,"byte_end":119924,"line_start":22,"line_end":22,"column_start":74,"column_end":78},"alias_span":null,"name":"Scan","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":8202},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":119926,"byte_end":119940,"line_start":22,"line_end":22,"column_start":80,"column_end":94},"alias_span":null,"name":"SelectNextSome","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":8434},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":119946,"byte_end":119950,"line_start":23,"line_end":23,"column_start":5,"column_end":9},"alias_span":null,"name":"Skip","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":8478},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":119952,"byte_end":119961,"line_start":23,"line_end":23,"column_start":11,"column_end":20},"alias_span":null,"name":"SkipWhile","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":2804},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":119963,"byte_end":119972,"line_start":23,"line_end":23,"column_start":22,"column_end":31},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":7987},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":119974,"byte_end":119986,"line_start":23,"line_end":23,"column_start":33,"column_end":45},"alias_span":null,"name":"StreamFuture","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":8547},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":119988,"byte_end":119992,"line_start":23,"line_end":23,"column_start":47,"column_end":51},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":8660},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":119994,"byte_end":120003,"line_start":23,"line_end":23,"column_start":53,"column_end":62},"alias_span":null,"name":"TakeUntil","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":8591},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":120005,"byte_end":120014,"line_start":23,"line_end":23,"column_start":64,"column_end":73},"alias_span":null,"name":"TakeWhile","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":8717},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":120016,"byte_end":120020,"line_start":23,"line_end":23,"column_start":75,"column_end":79},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":7238},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":120022,"byte_end":120027,"line_start":23,"line_end":23,"column_start":81,"column_end":86},"alias_span":null,"name":"Unzip","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":8778},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":120029,"byte_end":120032,"line_start":23,"line_end":23,"column_start":88,"column_end":91},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":8904},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":254899,"byte_end":254906,"line_start":26,"line_end":26,"column_start":25,"column_end":32},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":2975}},{"kind":"Use","ref_id":{"krate":0,"index":9172},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":255901,"byte_end":255911,"line_start":51,"line_end":51,"column_start":28,"column_end":38},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":2975}},{"kind":"Use","ref_id":{"krate":0,"index":9350},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":256591,"byte_end":256597,"line_start":69,"line_end":69,"column_start":24,"column_end":30},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":2975}},{"kind":"Use","ref_id":{"krate":0,"index":9411},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":256714,"byte_end":256721,"line_start":73,"line_end":73,"column_start":25,"column_end":32},"alias_span":null,"name":"TryNext","value":"","parent":{"krate":0,"index":2975}},{"kind":"Use","ref_id":{"krate":0,"index":9419},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":256846,"byte_end":256856,"line_start":77,"line_end":77,"column_start":29,"column_end":39},"alias_span":null,"name":"TryForEach","value":"","parent":{"krate":0,"index":2975}},{"kind":"Use","ref_id":{"krate":0,"index":9476},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":256977,"byte_end":256986,"line_start":81,"line_end":81,"column_start":27,"column_end":36},"alias_span":null,"name":"TryFilter","value":"","parent":{"krate":0,"index":2975}},{"kind":"Use","ref_id":{"krate":0,"index":9541},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":257115,"byte_end":257127,"line_start":85,"line_end":85,"column_start":31,"column_end":43},"alias_span":null,"name":"TryFilterMap","value":"","parent":{"krate":0,"index":2975}},{"kind":"Use","ref_id":{"krate":0,"index":9602},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":257250,"byte_end":257260,"line_start":89,"line_end":89,"column_start":28,"column_end":38},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":2975}},{"kind":"Use","ref_id":{"krate":0,"index":9646},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":257383,"byte_end":257393,"line_start":93,"line_end":93,"column_start":28,"column_end":38},"alias_span":null,"name":"TryCollect","value":"","parent":{"krate":0,"index":2975}},{"kind":"Use","ref_id":{"krate":0,"index":9695},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":257514,"byte_end":257523,"line_start":97,"line_end":97,"column_start":27,"column_end":36},"alias_span":null,"name":"TryConcat","value":"","parent":{"krate":0,"index":2975}},{"kind":"Use","ref_id":{"krate":0,"index":9735},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":257840,"byte_end":257847,"line_start":107,"line_end":107,"column_start":25,"column_end":32},"alias_span":null,"name":"TryFold","value":"","parent":{"krate":0,"index":2975}},{"kind":"Use","ref_id":{"krate":0,"index":3619},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":257969,"byte_end":257979,"line_start":111,"line_end":111,"column_start":28,"column_end":38},"alias_span":null,"name":"try_unfold","value":"","parent":{"krate":0,"index":2975}},{"kind":"Use","ref_id":{"krate":0,"index":9804},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":257981,"byte_end":257990,"line_start":111,"line_end":111,"column_start":40,"column_end":49},"alias_span":null,"name":"TryUnfold","value":"","parent":{"krate":0,"index":2975}},{"kind":"Use","ref_id":{"krate":0,"index":9861},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":258120,"byte_end":258132,"line_start":115,"line_end":115,"column_start":31,"column_end":43},"alias_span":null,"name":"TrySkipWhile","value":"","parent":{"krate":0,"index":2975}},{"kind":"Use","ref_id":{"krate":0,"index":9930},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":258261,"byte_end":258273,"line_start":119,"line_end":119,"column_start":31,"column_end":43},"alias_span":null,"name":"TryTakeWhile","value":"","parent":{"krate":0,"index":2975}},{"kind":"Use","ref_id":{"krate":0,"index":3619},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":120699,"byte_end":120709,"line_start":51,"line_end":51,"column_start":5,"column_end":15},"alias_span":null,"name":"try_unfold","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":8904},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":120711,"byte_end":120718,"line_start":51,"line_end":51,"column_start":17,"column_end":24},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":8968},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":120720,"byte_end":120727,"line_start":51,"line_end":51,"column_start":26,"column_end":33},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":9106},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":120729,"byte_end":120739,"line_start":51,"line_end":51,"column_start":35,"column_end":45},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":9037},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":120741,"byte_end":120750,"line_start":51,"line_end":51,"column_start":47,"column_end":56},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":9172},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":120752,"byte_end":120762,"line_start":51,"line_end":51,"column_start":58,"column_end":68},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":9284},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":120764,"byte_end":120770,"line_start":51,"line_end":51,"column_start":70,"column_end":76},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":9215},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":120772,"byte_end":120777,"line_start":51,"line_end":51,"column_start":78,"column_end":83},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":9350},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":120779,"byte_end":120785,"line_start":51,"line_end":51,"column_start":85,"column_end":91},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":9646},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":120791,"byte_end":120801,"line_start":52,"line_end":52,"column_start":5,"column_end":15},"alias_span":null,"name":"TryCollect","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":9695},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":120803,"byte_end":120812,"line_start":52,"line_end":52,"column_start":17,"column_end":26},"alias_span":null,"name":"TryConcat","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":9476},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":120814,"byte_end":120823,"line_start":52,"line_end":52,"column_start":28,"column_end":37},"alias_span":null,"name":"TryFilter","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":9541},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":120825,"byte_end":120837,"line_start":52,"line_end":52,"column_start":39,"column_end":51},"alias_span":null,"name":"TryFilterMap","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":9602},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":120839,"byte_end":120849,"line_start":52,"line_end":52,"column_start":53,"column_end":63},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":9735},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":120851,"byte_end":120858,"line_start":52,"line_end":52,"column_start":65,"column_end":72},"alias_span":null,"name":"TryFold","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":9419},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":120860,"byte_end":120870,"line_start":52,"line_end":52,"column_start":74,"column_end":84},"alias_span":null,"name":"TryForEach","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":9411},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":120872,"byte_end":120879,"line_start":52,"line_end":52,"column_start":86,"column_end":93},"alias_span":null,"name":"TryNext","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":9861},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":120885,"byte_end":120897,"line_start":53,"line_end":53,"column_start":5,"column_end":17},"alias_span":null,"name":"TrySkipWhile","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":3761},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":120899,"byte_end":120911,"line_start":53,"line_end":53,"column_start":19,"column_end":31},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":9930},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":120913,"byte_end":120925,"line_start":53,"line_end":53,"column_start":33,"column_end":45},"alias_span":null,"name":"TryTakeWhile","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":9804},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":120927,"byte_end":120936,"line_start":53,"line_end":53,"column_start":47,"column_end":56},"alias_span":null,"name":"TryUnfold","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":3890},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":121357,"byte_end":121361,"line_start":71,"line_end":71,"column_start":22,"column_end":26},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":9999},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":121363,"byte_end":121367,"line_start":71,"line_end":71,"column_start":28,"column_end":32},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":3925},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":121406,"byte_end":121412,"line_start":74,"line_end":74,"column_start":24,"column_end":30},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":10008},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":121414,"byte_end":121420,"line_start":74,"line_end":74,"column_start":32,"column_end":38},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":3978},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":121469,"byte_end":121480,"line_start":77,"line_end":77,"column_start":29,"column_end":40},"alias_span":null,"name":"repeat_with","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":10017},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":121482,"byte_end":121492,"line_start":77,"line_end":77,"column_start":42,"column_end":52},"alias_span":null,"name":"RepeatWith","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":4012},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":121529,"byte_end":121534,"line_start":80,"line_end":80,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":10026},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":121536,"byte_end":121541,"line_start":80,"line_end":80,"column_start":30,"column_end":35},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":4064},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":121576,"byte_end":121580,"line_start":83,"line_end":83,"column_start":22,"column_end":26},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":10032},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":121582,"byte_end":121586,"line_start":83,"line_end":83,"column_start":28,"column_end":32},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":4108},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":121627,"byte_end":121634,"line_start":86,"line_end":86,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":10068},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":121636,"byte_end":121643,"line_start":86,"line_end":86,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":4158},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":121684,"byte_end":121691,"line_start":89,"line_end":89,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":4150},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":121693,"byte_end":121699,"line_start":89,"line_end":89,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":4199},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":121754,"byte_end":121768,"line_start":92,"line_end":92,"column_start":32,"column_end":46},"alias_span":null,"name":"poll_immediate","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":10074},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":121770,"byte_end":121783,"line_start":92,"line_end":92,"column_start":48,"column_end":61},"alias_span":null,"name":"PollImmediate","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":4242},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":121822,"byte_end":121828,"line_start":95,"line_end":95,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":10113},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":121830,"byte_end":121836,"line_start":95,"line_end":95,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":4308},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":121903,"byte_end":121923,"line_start":98,"line_end":98,"column_start":38,"column_end":58},"alias_span":null,"name":"select_with_strategy","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":10158},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":121925,"byte_end":121933,"line_start":98,"line_end":98,"column_start":60,"column_end":68},"alias_span":null,"name":"PollNext","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":10177},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":121935,"byte_end":121953,"line_start":98,"line_end":98,"column_start":70,"column_end":88},"alias_span":null,"name":"SelectWithStrategy","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":4390},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":121992,"byte_end":121998,"line_start":101,"line_end":101,"column_start":24,"column_end":30},"alias_span":null,"name":"unfold","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":10246},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":122000,"byte_end":122006,"line_start":101,"line_end":101,"column_start":32,"column_end":38},"alias_span":null,"name":"Unfold","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":4,"index":96},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":10777,"byte_end":10783,"line_start":300,"line_end":300,"column_start":25,"column_end":31},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2804},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":10785,"byte_end":10794,"line_start":300,"line_end":300,"column_start":33,"column_end":42},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":127},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":10796,"byte_end":10805,"line_start":300,"line_end":300,"column_start":44,"column_end":53},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3761},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":10807,"byte_end":10819,"line_start":300,"line_end":300,"column_start":55,"column_end":67},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":13395},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":355323,"byte_end":355330,"line_start":14,"line_end":14,"column_start":22,"column_end":29},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":4436}},{"kind":"Use","ref_id":{"krate":1,"index":49201},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":355332,"byte_end":355336,"line_start":14,"line_end":14,"column_start":31,"column_end":35},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":4436}},{"kind":"Use","ref_id":{"krate":1,"index":49237},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":355338,"byte_end":355346,"line_start":14,"line_end":14,"column_start":37,"column_end":45},"alias_span":null,"name":"RawWaker","value":"","parent":{"krate":0,"index":4436}},{"kind":"Use","ref_id":{"krate":1,"index":49246},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":355348,"byte_end":355362,"line_start":14,"line_end":14,"column_start":47,"column_end":61},"alias_span":null,"name":"RawWakerVTable","value":"","parent":{"krate":0,"index":4436}},{"kind":"Use","ref_id":{"krate":1,"index":13405},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":355364,"byte_end":355369,"line_start":14,"line_end":14,"column_start":63,"column_end":68},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":4436}},{"kind":"Use","ref_id":{"krate":22,"index":114},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":355396,"byte_end":355405,"line_start":16,"line_end":16,"column_start":24,"column_end":33},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":4436}},{"kind":"Use","ref_id":{"krate":22,"index":80},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":355407,"byte_end":355421,"line_start":16,"line_end":16,"column_start":35,"column_end":49},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":4436}},{"kind":"Use","ref_id":{"krate":22,"index":18},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":355423,"byte_end":355433,"line_start":16,"line_end":16,"column_start":51,"column_end":61},"alias_span":null,"name":"LocalSpawn","value":"","parent":{"krate":0,"index":4436}},{"kind":"Use","ref_id":{"krate":22,"index":15},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":355435,"byte_end":355440,"line_start":16,"line_end":16,"column_start":63,"column_end":68},"alias_span":null,"name":"Spawn","value":"","parent":{"krate":0,"index":4436}},{"kind":"Use","ref_id":{"krate":22,"index":21},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":355442,"byte_end":355452,"line_start":16,"line_end":16,"column_start":70,"column_end":80},"alias_span":null,"name":"SpawnError","value":"","parent":{"krate":0,"index":4436}},{"kind":"Use","ref_id":{"krate":22,"index":135},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":355454,"byte_end":355469,"line_start":16,"line_end":16,"column_start":82,"column_end":97},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":4436}},{"kind":"Use","ref_id":{"krate":22,"index":190},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":355495,"byte_end":355505,"line_start":18,"line_end":18,"column_start":23,"column_end":33},"alias_span":null,"name":"noop_waker","value":"","parent":{"krate":0,"index":4436}},{"kind":"Use","ref_id":{"krate":22,"index":191},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":355529,"byte_end":355543,"line_start":19,"line_end":19,"column_start":23,"column_end":37},"alias_span":null,"name":"noop_waker_ref","value":"","parent":{"krate":0,"index":4436}},{"kind":"Use","ref_id":{"krate":4,"index":194},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":355912,"byte_end":355923,"line_start":34,"line_end":34,"column_start":41,"column_end":52},"alias_span":null,"name":"AtomicWaker","value":"","parent":{"krate":0,"index":4436}},{"kind":"Use","ref_id":{"krate":0,"index":4494},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":355959,"byte_end":355972,"line_start":37,"line_end":37,"column_start":23,"column_end":36},"alias_span":null,"name":"LocalSpawnExt","value":"","parent":{"krate":0,"index":4436}},{"kind":"Use","ref_id":{"krate":0,"index":4493},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":355974,"byte_end":355982,"line_start":37,"line_end":37,"column_start":38,"column_end":46},"alias_span":null,"name":"SpawnExt","value":"","parent":{"krate":0,"index":4436}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":0,"byte_end":11572,"line_start":1,"line_end":337,"column_start":1,"column_end":18},"name":"","qualname":"::","value":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":1246},{"krate":0,"index":1247},{"krate":0,"index":1250},{"krate":0,"index":1253},{"krate":0,"index":1256},{"krate":0,"index":1259},{"krate":0,"index":4423},{"krate":0,"index":4424},{"krate":0,"index":4427},{"krate":0,"index":4430},{"krate":0,"index":4433},{"krate":0,"index":4436},{"krate":0,"index":4502},{"krate":0,"index":4504},{"krate":0,"index":4718}],"decl_id":null,"docs":" Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,\n and the `AsyncRead` and `AsyncWrite` traits.\n","sig":null,"attributes":[{"value":"/ Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":0,"byte_end":77,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/ and the `AsyncRead` and `AsyncWrite` traits.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":78,"byte_end":126,"line_start":2,"line_end":2,"column_start":1,"column_end":49}},{"value":"no_std","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":234,"byte_end":240,"line_start":5,"line_end":5,"column_start":35,"column_end":41}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\nsingle_use_lifetimes, unreachable_pub)","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":243,"byte_end":375,"line_start":6,"line_end":12,"column_start":1,"column_end":3}}]},{"kind":"Mod","id":{"krate":0,"index":14},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":248},{"krate":0,"index":251},{"krate":0,"index":254},{"krate":0,"index":257},{"krate":0,"index":260},{"krate":0,"index":263},{"krate":0,"index":266},{"krate":0,"index":269},{"krate":0,"index":272},{"krate":0,"index":275},{"krate":0,"index":278},{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":519},{"krate":0,"index":522},{"krate":0,"index":525},{"krate":0,"index":528},{"krate":0,"index":531},{"krate":0,"index":534},{"krate":0,"index":537},{"krate":0,"index":540},{"krate":0,"index":543},{"krate":0,"index":546},{"krate":0,"index":549},{"krate":0,"index":552},{"krate":0,"index":555},{"krate":0,"index":558},{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":597},{"krate":0,"index":600},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":642},{"krate":0,"index":645},{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":691},{"krate":0,"index":694},{"krate":0,"index":739},{"krate":0,"index":740},{"krate":0,"index":743},{"krate":0,"index":746},{"krate":0,"index":780},{"krate":0,"index":783},{"krate":0,"index":819},{"krate":0,"index":820},{"krate":0,"index":823},{"krate":0,"index":826},{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":873},{"krate":0,"index":876},{"krate":0,"index":917},{"krate":0,"index":918},{"krate":0,"index":921},{"krate":0,"index":924},{"krate":0,"index":927},{"krate":0,"index":930},{"krate":0,"index":983},{"krate":0,"index":984},{"krate":0,"index":987},{"krate":0,"index":990},{"krate":0,"index":993},{"krate":0,"index":996},{"krate":0,"index":999},{"krate":0,"index":1002},{"krate":0,"index":1005},{"krate":0,"index":1008},{"krate":0,"index":1051},{"krate":0,"index":1052},{"krate":0,"index":1055},{"krate":0,"index":1058},{"krate":0,"index":1111},{"krate":0,"index":1112},{"krate":0,"index":1115},{"krate":0,"index":1118},{"krate":0,"index":1121},{"krate":0,"index":1124},{"krate":0,"index":1127},{"krate":0,"index":1130},{"krate":0,"index":1133},{"krate":0,"index":1136},{"krate":0,"index":1172},{"krate":0,"index":1173},{"krate":0,"index":1176},{"krate":0,"index":1179},{"krate":0,"index":1240},{"krate":0,"index":1243}],"decl_id":null,"docs":" Asynchronous values.","sig":null,"attributes":[{"value":"/ Asynchronous values.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":11574,"byte_end":11598,"line_start":1,"line_end":1,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":11599,"byte_end":11602,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":11603,"byte_end":11628,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":11629,"byte_end":11632,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - The [`Future`] trait.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":11633,"byte_end":11660,"line_start":5,"line_end":5,"column_start":1,"column_end":28}},{"value":"/ - The [`FutureExt`] and [`TryFutureExt`] trait, which provides adapters for","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":11661,"byte_end":11740,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/   chaining and composing futures.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":11741,"byte_end":11778,"line_start":7,"line_end":7,"column_start":1,"column_end":38}},{"value":"/ - Top-level future combinators like [`lazy`](lazy()) which creates a future","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":11779,"byte_end":11858,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"/   from a closure that defines its return value, and [`ready`](ready()),","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":11859,"byte_end":11934,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/   which constructs a future with an immediate defined value.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":11935,"byte_end":11999,"line_start":10,"line_end":10,"column_start":1,"column_end":65}}]},{"kind":"StructVariant","id":{"krate":0,"index":4733},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/flatten.rs","byte_start":35381,"byte_end":35386,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"First","qualname":"::future::future::flatten::Flatten::First","value":"Flatten::First { f }","parent":{"krate":0,"index":4730},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4735},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/flatten.rs","byte_start":35415,"byte_end":35421,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::future::flatten::Flatten::Second","value":"Flatten::Second { f }","parent":{"krate":0,"index":4730},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4737},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/flatten.rs","byte_start":35450,"byte_end":35455,"line_start":16,"line_end":16,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::future::flatten::Flatten::Empty","value":"Flatten::Empty","parent":{"krate":0,"index":4730},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4730},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/flatten.rs","byte_start":35351,"byte_end":35358,"line_start":13,"line_end":13,"column_start":14,"column_end":21},"name":"Flatten","qualname":"::future::future::flatten::Flatten","value":"pub enum Flatten<Fut1, Fut2> {\n    First {\n            f: Fut1,\n        },\n    Second {\n            f: Fut2,\n        },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":4733},{"krate":0,"index":4735},{"krate":0,"index":4737}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4777},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":39812,"byte_end":39816,"line_start":11,"line_end":11,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::future::future::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":4779}],"decl_id":null,"docs":" Future for the [`fuse`](super::FutureExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":41635,"byte_end":41645,"line_start":69,"line_end":69,"column_start":12,"column_end":22},"name":"terminated","qualname":"<Fuse<Fut>>::terminated","value":"pub fn terminated() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Fuse`-wrapped future which is already terminated.","sig":null,"attributes":[{"value":"/ Creates a new `Fuse`-wrapped future which is already terminated.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":40013,"byte_end":40081,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":40086,"byte_end":40089,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ This can be useful in combination with looping and the `select!`","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":40094,"byte_end":40162,"line_start":26,"line_end":26,"column_start":5,"column_end":73}},{"value":"/ macro, which bypasses terminated futures.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":40167,"byte_end":40212,"line_start":27,"line_end":27,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":40217,"byte_end":40220,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":40225,"byte_end":40239,"line_start":29,"line_end":29,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":40244,"byte_end":40247,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":40252,"byte_end":40259,"line_start":31,"line_end":31,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":40264,"byte_end":40305,"line_start":32,"line_end":32,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":40310,"byte_end":40341,"line_start":33,"line_end":33,"column_start":5,"column_end":36}},{"value":"/ use futures::future::{Fuse, FusedFuture, FutureExt};","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":40346,"byte_end":40402,"line_start":34,"line_end":34,"column_start":5,"column_end":61}},{"value":"/ use futures::select;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":40407,"byte_end":40431,"line_start":35,"line_end":35,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":40436,"byte_end":40471,"line_start":36,"line_end":36,"column_start":5,"column_end":40}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":40476,"byte_end":40501,"line_start":37,"line_end":37,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":40506,"byte_end":40509,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let (sender, mut stream) = mpsc::unbounded();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":40514,"byte_end":40563,"line_start":39,"line_end":39,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":40568,"byte_end":40571,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ // Send a few messages into the stream","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":40576,"byte_end":40618,"line_start":41,"line_end":41,"column_start":5,"column_end":47}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":40623,"byte_end":40662,"line_start":42,"line_end":42,"column_start":5,"column_end":44}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":40667,"byte_end":40706,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/ drop(sender);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":40711,"byte_end":40728,"line_start":44,"line_end":44,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":40733,"byte_end":40736,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ // Use `Fuse::terminated()` to create an already-terminated future","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":40741,"byte_end":40811,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ // which may be instantiated later.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":40816,"byte_end":40855,"line_start":47,"line_end":47,"column_start":5,"column_end":44}},{"value":"/ let foo_printer = Fuse::terminated();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":40860,"byte_end":40901,"line_start":48,"line_end":48,"column_start":5,"column_end":46}},{"value":"/ pin_mut!(foo_printer);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":40906,"byte_end":40932,"line_start":49,"line_end":49,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":40937,"byte_end":40940,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ loop {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":40945,"byte_end":40955,"line_start":51,"line_end":51,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":40960,"byte_end":40977,"line_start":52,"line_end":52,"column_start":5,"column_end":22}},{"value":"/         _ = foo_printer => {},","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":40982,"byte_end":41016,"line_start":53,"line_end":53,"column_start":5,"column_end":39}},{"value":"/         () = stream.select_next_some() => {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":41021,"byte_end":41068,"line_start":54,"line_end":54,"column_start":5,"column_end":52}},{"value":"/             if !foo_printer.is_terminated() {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":41073,"byte_end":41122,"line_start":55,"line_end":55,"column_start":5,"column_end":54}},{"value":"/                 println!(\"Foo is already being printed!\");","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":41127,"byte_end":41189,"line_start":56,"line_end":56,"column_start":5,"column_end":67}},{"value":"/             } else {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":41194,"byte_end":41218,"line_start":57,"line_end":57,"column_start":5,"column_end":29}},{"value":"/                 foo_printer.set(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":41223,"byte_end":41266,"line_start":58,"line_end":58,"column_start":5,"column_end":48}},{"value":"/                     // do some other async operations","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":41271,"byte_end":41328,"line_start":59,"line_end":59,"column_start":5,"column_end":62}},{"value":"/                     println!(\"Printing foo from `foo_printer` future\");","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":41333,"byte_end":41408,"line_start":60,"line_end":60,"column_start":5,"column_end":80}},{"value":"/                 }.fuse());","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":41413,"byte_end":41443,"line_start":61,"line_end":61,"column_start":5,"column_end":35}},{"value":"/             }","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":41448,"byte_end":41465,"line_start":62,"line_end":62,"column_start":5,"column_end":22}},{"value":"/         },","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":41470,"byte_end":41484,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/         complete => break, // `foo_printer` is terminated and the stream is done","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":41489,"byte_end":41573,"line_start":64,"line_end":64,"column_start":5,"column_end":89}},{"value":"/     }","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":41578,"byte_end":41587,"line_start":65,"line_end":65,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":41592,"byte_end":41597,"line_start":66,"line_end":66,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":41602,"byte_end":41611,"line_start":67,"line_end":67,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":41616,"byte_end":41623,"line_start":68,"line_end":68,"column_start":5,"column_end":12}}]},{"kind":"StructVariant","id":{"krate":0,"index":4816},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/map.rs","byte_start":42703,"byte_end":42713,"line_start":16,"line_end":16,"column_start":9,"column_end":19},"name":"Incomplete","qualname":"::future::future::map::Map::Incomplete","value":"Map::Incomplete { future, f }","parent":{"krate":0,"index":4813},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4819},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/map.rs","byte_start":42797,"byte_end":42805,"line_start":21,"line_end":21,"column_start":9,"column_end":17},"name":"Complete","qualname":"::future::future::map::Map::Complete","value":"Map::Complete","parent":{"krate":0,"index":4813},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4813},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/map.rs","byte_start":42681,"byte_end":42684,"line_start":15,"line_end":15,"column_start":14,"column_end":17},"name":"Map","qualname":"::future::future::map::Map","value":"pub enum Map<Fut, F> {\n    Incomplete {\n            future: Fut,\n            f: F,\n        },\n    Complete,\n}","parent":null,"children":[{"krate":0,"index":4816},{"krate":0,"index":4819}],"decl_id":null,"docs":" Internal Map future\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13685087,"byte_end":13685096,"line_start":678,"line_end":678,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4868},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":15807,"byte_end":15814,"line_start":31,"line_end":31,"column_start":5,"column_end":12},"name":"Flatten","qualname":"::future::future::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":4870}],"decl_id":null,"docs":" Future for the [`flatten`](super::FutureExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4916},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":16065,"byte_end":16078,"line_start":39,"line_end":39,"column_start":5,"column_end":18},"name":"FlattenStream","qualname":"::future::future::FlattenStream","value":"FlattenStream {  }","parent":null,"children":[{"krate":0,"index":4918}],"decl_id":null,"docs":" Stream for the [`flatten_stream`](FutureExt::flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4966},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":16418,"byte_end":16421,"line_start":50,"line_end":50,"column_start":5,"column_end":8},"name":"Map","qualname":"::future::future::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":4969}],"decl_id":null,"docs":" Future for the [`map`](super::FutureExt::map) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5026},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":16628,"byte_end":16638,"line_start":57,"line_end":57,"column_start":5,"column_end":15},"name":"IntoStream","qualname":"::future::future::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":5028}],"decl_id":null,"docs":" Stream for the [`into_stream`](FutureExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5076},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":16844,"byte_end":16851,"line_start":64,"line_end":64,"column_start":5,"column_end":12},"name":"MapInto","qualname":"::future::future::MapInto","value":"MapInto {  }","parent":null,"children":[{"krate":0,"index":5079}],"decl_id":null,"docs":" Future for the [`map_into`](FutureExt::map_into) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5138},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":17044,"byte_end":17048,"line_start":71,"line_end":71,"column_start":5,"column_end":9},"name":"Then","qualname":"::future::future::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":5142}],"decl_id":null,"docs":" Future for the [`then`](FutureExt::then) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5211},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":17293,"byte_end":17300,"line_start":78,"line_end":78,"column_start":5,"column_end":12},"name":"Inspect","qualname":"::future::future::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":5214}],"decl_id":null,"docs":" Future for the [`inspect`](FutureExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5271},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":17541,"byte_end":17551,"line_start":85,"line_end":85,"column_start":5,"column_end":15},"name":"NeverError","qualname":"::future::future::NeverError","value":"NeverError {  }","parent":null,"children":[{"krate":0,"index":5273}],"decl_id":null,"docs":" Future for the [`never_error`](super::FutureExt::never_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5319},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":17764,"byte_end":17773,"line_start":92,"line_end":92,"column_start":5,"column_end":14},"name":"UnitError","qualname":"::future::future::UnitError","value":"UnitError {  }","parent":null,"children":[{"krate":0,"index":5321}],"decl_id":null,"docs":" Future for the [`unit_error`](super::FutureExt::unit_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":221},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":18755,"byte_end":18764,"line_start":123,"line_end":123,"column_start":11,"column_end":20},"name":"FutureExt","qualname":"::future::future::FutureExt","value":"FutureExt: Future","parent":null,"children":[{"krate":0,"index":222},{"krate":0,"index":225},{"krate":0,"index":227},{"krate":0,"index":230},{"krate":0,"index":232},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243}],"decl_id":null,"docs":" An extension trait for `Future`s that provides a variety of convenient\n adapters.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Future`s that provides a variety of convenient","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":18656,"byte_end":18730,"line_start":121,"line_end":121,"column_start":1,"column_end":75}},{"value":"/ adapters.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":18731,"byte_end":18744,"line_start":122,"line_end":122,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":19596,"byte_end":19599,"line_start":146,"line_end":146,"column_start":8,"column_end":11},"name":"map","qualname":"::future::future::FutureExt::map","value":"pub fn map<U, F>(Self, F) -> Map<Self, F> where F: FnOnce(Self::Output) -> U,\nSelf: Sized","parent":{"krate":0,"index":221},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":18779,"byte_end":18854,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":18859,"byte_end":18882,"line_start":125,"line_end":125,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":18887,"byte_end":18890,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function is similar to the `Option::map` or `Iterator::map` where","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":18895,"byte_end":18969,"line_start":127,"line_end":127,"column_start":5,"column_end":79}},{"value":"/ it will change the type of the underlying future. This is useful to","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":18974,"byte_end":19045,"line_start":128,"line_end":128,"column_start":5,"column_end":76}},{"value":"/ chain along a computation once a future has been resolved.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":19050,"byte_end":19112,"line_start":129,"line_end":129,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":19117,"byte_end":19120,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":19125,"byte_end":19196,"line_start":131,"line_end":131,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":19201,"byte_end":19272,"line_start":132,"line_end":132,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":19277,"byte_end":19298,"line_start":133,"line_end":133,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":19303,"byte_end":19306,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":19311,"byte_end":19325,"line_start":135,"line_end":135,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":19330,"byte_end":19333,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":19338,"byte_end":19345,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":19350,"byte_end":19391,"line_start":138,"line_end":138,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":19396,"byte_end":19431,"line_start":139,"line_end":139,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":19436,"byte_end":19439,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":19444,"byte_end":19473,"line_start":141,"line_end":141,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.map(|x| x + 3);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":19478,"byte_end":19521,"line_start":142,"line_end":142,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(new_future.await, 4);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":19526,"byte_end":19562,"line_start":143,"line_end":143,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":19567,"byte_end":19576,"line_start":144,"line_end":144,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":19581,"byte_end":19588,"line_start":145,"line_end":145,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":19996,"byte_end":20004,"line_start":159,"line_end":159,"column_start":8,"column_end":16},"name":"map_into","qualname":"::future::future::FutureExt::map_into","value":"pub fn map_into<U>(Self) -> MapInto<Self, U> where Self::Output: Into<U>,\nSelf: Sized","parent":{"krate":0,"index":221},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":19769,"byte_end":19844,"line_start":154,"line_end":154,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":19849,"byte_end":19872,"line_start":155,"line_end":155,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":19877,"byte_end":19880,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to calling `map(Into::into)` but allows naming","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":19885,"byte_end":19963,"line_start":157,"line_end":157,"column_start":5,"column_end":83}},{"value":"/ the return type.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":19968,"byte_end":19988,"line_start":158,"line_end":158,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":21016,"byte_end":21020,"line_start":191,"line_end":191,"column_start":8,"column_end":12},"name":"then","qualname":"::future::future::FutureExt::then","value":"pub fn then<Fut, F>(Self, F) -> Then<Self, Fut, F> where\nF: FnOnce(Self::Output) -> Fut, Fut: Future, Self: Sized","parent":{"krate":0,"index":221},"children":[],"decl_id":null,"docs":" Chain on a computation for when a future finished, passing the result of\n the future to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a future finished, passing the result of","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":20163,"byte_end":20239,"line_start":167,"line_end":167,"column_start":5,"column_end":81}},{"value":"/ the future to the provided closure `f`.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":20244,"byte_end":20287,"line_start":168,"line_end":168,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":20292,"byte_end":20295,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `Future` trait","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":20300,"byte_end":20371,"line_start":170,"line_end":170,"column_start":5,"column_end":76}},{"value":"/ and can represent some more work to be done before the composed future","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":20376,"byte_end":20450,"line_start":171,"line_end":171,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":20455,"byte_end":20471,"line_start":172,"line_end":172,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":20476,"byte_end":20479,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The closure `f` is only run *after* successful completion of the `self`","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":20484,"byte_end":20559,"line_start":174,"line_end":174,"column_start":5,"column_end":80}},{"value":"/ future.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":20564,"byte_end":20575,"line_start":175,"line_end":175,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":20580,"byte_end":20583,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":20588,"byte_end":20659,"line_start":177,"line_end":177,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":20664,"byte_end":20690,"line_start":178,"line_end":178,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":20695,"byte_end":20698,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":20703,"byte_end":20717,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":20722,"byte_end":20725,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":20730,"byte_end":20737,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":20742,"byte_end":20783,"line_start":183,"line_end":183,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":20788,"byte_end":20823,"line_start":184,"line_end":184,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":20828,"byte_end":20831,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ let future_of_1 = async { 1 };","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":20836,"byte_end":20870,"line_start":186,"line_end":186,"column_start":5,"column_end":39}},{"value":"/ let future_of_4 = future_of_1.then(|x| async move { x + 3 });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":20875,"byte_end":20940,"line_start":187,"line_end":187,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(future_of_4.await, 4);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":20945,"byte_end":20982,"line_start":188,"line_end":188,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":20987,"byte_end":20996,"line_start":189,"line_end":189,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":21001,"byte_end":21008,"line_start":190,"line_end":190,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":21890,"byte_end":21901,"line_start":222,"line_end":222,"column_start":8,"column_end":19},"name":"left_future","qualname":"::future::future::FutureExt::left_future","value":"pub fn left_future<B>(Self) -> Either<Self, B> where B: Future<Output =\nSelf::Output>, Self: Sized","parent":{"krate":0,"index":221},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the left-hand variant","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":21232,"byte_end":21307,"line_start":200,"line_end":200,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":21312,"byte_end":21333,"line_start":201,"line_end":201,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":21338,"byte_end":21341,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_future` method to write `if`","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":21346,"byte_end":21426,"line_start":203,"line_end":203,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":21431,"byte_end":21503,"line_start":204,"line_end":204,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":21508,"byte_end":21511,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":21516,"byte_end":21530,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":21535,"byte_end":21538,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":21543,"byte_end":21550,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":21555,"byte_end":21596,"line_start":209,"line_end":209,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":21601,"byte_end":21636,"line_start":210,"line_end":210,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":21641,"byte_end":21644,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":21649,"byte_end":21663,"line_start":212,"line_end":212,"column_start":5,"column_end":19}},{"value":"/ let future = if x < 10 {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":21668,"byte_end":21696,"line_start":213,"line_end":213,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":21701,"byte_end":21737,"line_start":214,"line_end":214,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":21742,"byte_end":21754,"line_start":215,"line_end":215,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":21759,"byte_end":21797,"line_start":216,"line_end":216,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":21802,"byte_end":21808,"line_start":217,"line_end":217,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":21813,"byte_end":21816,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, true);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":21821,"byte_end":21856,"line_start":219,"line_end":219,"column_start":5,"column_end":40}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":21861,"byte_end":21870,"line_start":220,"line_end":220,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":21875,"byte_end":21882,"line_start":221,"line_end":221,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":22740,"byte_end":22752,"line_start":252,"line_end":252,"column_start":8,"column_end":20},"name":"right_future","qualname":"::future::future::FutureExt::right_future","value":"pub fn right_future<A>(Self) -> Either<A, Self> where A: Future<Output =\nSelf::Output>, Self: Sized","parent":{"krate":0,"index":221},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the right-hand variant","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":22081,"byte_end":22157,"line_start":230,"line_end":230,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":22162,"byte_end":22183,"line_start":231,"line_end":231,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":22188,"byte_end":22191,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_future` method to write `if`","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":22196,"byte_end":22275,"line_start":233,"line_end":233,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":22280,"byte_end":22352,"line_start":234,"line_end":234,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":22357,"byte_end":22360,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":22365,"byte_end":22379,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":22384,"byte_end":22387,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":22392,"byte_end":22399,"line_start":238,"line_end":238,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":22404,"byte_end":22445,"line_start":239,"line_end":239,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":22450,"byte_end":22485,"line_start":240,"line_end":240,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":22490,"byte_end":22493,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":22498,"byte_end":22512,"line_start":242,"line_end":242,"column_start":5,"column_end":19}},{"value":"/ let future = if x > 10 {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":22517,"byte_end":22545,"line_start":243,"line_end":243,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":22550,"byte_end":22586,"line_start":244,"line_end":244,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":22591,"byte_end":22603,"line_start":245,"line_end":245,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":22608,"byte_end":22646,"line_start":246,"line_end":246,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":22651,"byte_end":22657,"line_start":247,"line_end":247,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":22662,"byte_end":22665,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, false);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":22670,"byte_end":22706,"line_start":249,"line_end":249,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":22711,"byte_end":22720,"line_start":250,"line_end":250,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":22725,"byte_end":22732,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23531,"byte_end":23542,"line_start":278,"line_end":278,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::future::future::FutureExt::into_stream","value":"pub fn into_stream(Self) -> IntoStream<Self> where Self: Sized","parent":{"krate":0,"index":221},"children":[],"decl_id":null,"docs":" Convert this future into a single element stream.","sig":null,"attributes":[{"value":"/ Convert this future into a single element stream.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":22933,"byte_end":22986,"line_start":260,"line_end":260,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":22991,"byte_end":22994,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ The returned stream contains single success if this future resolves to","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":22999,"byte_end":23073,"line_start":262,"line_end":262,"column_start":5,"column_end":79}},{"value":"/ success or single error if this future resolves into error.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23078,"byte_end":23141,"line_start":263,"line_end":263,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23146,"byte_end":23149,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23154,"byte_end":23168,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23173,"byte_end":23176,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23181,"byte_end":23188,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23193,"byte_end":23234,"line_start":268,"line_end":268,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23239,"byte_end":23274,"line_start":269,"line_end":269,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23279,"byte_end":23314,"line_start":270,"line_end":270,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23319,"byte_end":23322,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ let future = async { 17 };","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23327,"byte_end":23357,"line_start":272,"line_end":272,"column_start":5,"column_end":35}},{"value":"/ let stream = future.into_stream();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23362,"byte_end":23400,"line_start":273,"line_end":273,"column_start":5,"column_end":43}},{"value":"/ let collected: Vec<_> = stream.collect().await;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23405,"byte_end":23456,"line_start":274,"line_end":274,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23461,"byte_end":23497,"line_start":275,"line_end":275,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23502,"byte_end":23511,"line_start":276,"line_end":276,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23516,"byte_end":23523,"line_start":277,"line_end":277,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":24407,"byte_end":24414,"line_start":307,"line_end":307,"column_start":8,"column_end":15},"name":"flatten","qualname":"::future::future::FutureExt::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self::Output: Future, Self: Sized","parent":{"krate":0,"index":221},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the output of this\n future is itself another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the output of this","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23681,"byte_end":23745,"line_start":285,"line_end":285,"column_start":5,"column_end":69}},{"value":"/ future is itself another future.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23750,"byte_end":23786,"line_start":286,"line_end":286,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23791,"byte_end":23794,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ This can be useful when combining futures together to flatten the","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23799,"byte_end":23868,"line_start":288,"line_end":288,"column_start":5,"column_end":74}},{"value":"/ computation out the final result.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23873,"byte_end":23910,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23915,"byte_end":23918,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ This method is roughly equivalent to `self.then(|x| x)`.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23923,"byte_end":23983,"line_start":291,"line_end":291,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23988,"byte_end":23991,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23996,"byte_end":24067,"line_start":293,"line_end":293,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":24072,"byte_end":24098,"line_start":294,"line_end":294,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":24103,"byte_end":24106,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":24111,"byte_end":24125,"line_start":296,"line_end":296,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":24130,"byte_end":24133,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":24138,"byte_end":24145,"line_start":298,"line_end":298,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":24150,"byte_end":24191,"line_start":299,"line_end":299,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":24196,"byte_end":24231,"line_start":300,"line_end":300,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":24236,"byte_end":24239,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ let nested_future = async { async { 1 } };","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":24244,"byte_end":24290,"line_start":302,"line_end":302,"column_start":5,"column_end":51}},{"value":"/ let future = nested_future.flatten();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":24295,"byte_end":24336,"line_start":303,"line_end":303,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(future.await, 1);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":24341,"byte_end":24373,"line_start":304,"line_end":304,"column_start":5,"column_end":37}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":24378,"byte_end":24387,"line_start":305,"line_end":305,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":24392,"byte_end":24399,"line_start":306,"line_end":306,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25519,"byte_end":25533,"line_start":341,"line_end":341,"column_start":8,"column_end":22},"name":"flatten_stream","qualname":"::future::future::FutureExt::flatten_stream","value":"pub fn flatten_stream(Self) -> FlattenStream<Self> where Self::Output: Stream,\nSelf: Sized","parent":{"krate":0,"index":221},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":24628,"byte_end":24703,"line_start":316,"line_end":316,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":24708,"byte_end":24731,"line_start":317,"line_end":317,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":24736,"byte_end":24739,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":24744,"byte_end":24816,"line_start":319,"line_end":319,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":24821,"byte_end":24894,"line_start":320,"line_end":320,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":24899,"byte_end":24913,"line_start":321,"line_end":321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":24918,"byte_end":24921,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":24926,"byte_end":24996,"line_start":323,"line_end":323,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25001,"byte_end":25019,"line_start":324,"line_end":324,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25024,"byte_end":25027,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25032,"byte_end":25046,"line_start":326,"line_end":326,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25051,"byte_end":25054,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25059,"byte_end":25066,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25071,"byte_end":25112,"line_start":329,"line_end":329,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25117,"byte_end":25152,"line_start":330,"line_end":330,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25157,"byte_end":25200,"line_start":331,"line_end":331,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25205,"byte_end":25208,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19];","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25213,"byte_end":25253,"line_start":333,"line_end":333,"column_start":5,"column_end":45}},{"value":"/ let future_of_a_stream = async { stream::iter(stream_items) };","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25258,"byte_end":25324,"line_start":334,"line_end":334,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25329,"byte_end":25332,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.flatten_stream();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25337,"byte_end":25390,"line_start":336,"line_end":336,"column_start":5,"column_end":58}},{"value":"/ let list: Vec<_> = stream.collect().await;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25395,"byte_end":25441,"line_start":337,"line_end":337,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(list, vec![17, 18, 19]);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25446,"byte_end":25485,"line_start":338,"line_end":338,"column_start":5,"column_end":44}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25490,"byte_end":25499,"line_start":339,"line_end":339,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25504,"byte_end":25511,"line_start":340,"line_end":340,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":26621,"byte_end":26625,"line_start":365,"line_end":365,"column_start":8,"column_end":12},"name":"fuse","qualname":"::future::future::FutureExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":221},"children":[],"decl_id":null,"docs":" Fuse a future such that `poll` will never again be called once it has\n completed. This method can be used to turn any `Future` into a\n `FusedFuture`.","sig":null,"attributes":[{"value":"/ Fuse a future such that `poll` will never again be called once it has","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25726,"byte_end":25799,"line_start":349,"line_end":349,"column_start":5,"column_end":78}},{"value":"/ completed. This method can be used to turn any `Future` into a","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25804,"byte_end":25870,"line_start":350,"line_end":350,"column_start":5,"column_end":71}},{"value":"/ `FusedFuture`.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25875,"byte_end":25893,"line_start":351,"line_end":351,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25898,"byte_end":25901,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Normally, once a future has returned `Poll::Ready` from `poll`,","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25906,"byte_end":25973,"line_start":353,"line_end":353,"column_start":5,"column_end":72}},{"value":"/ any further calls could exhibit bad behavior such as blocking","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25978,"byte_end":26043,"line_start":354,"line_end":354,"column_start":5,"column_end":70}},{"value":"/ forever, panicking, never returning, etc. If it is known that `poll`","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":26048,"byte_end":26120,"line_start":355,"line_end":355,"column_start":5,"column_end":77}},{"value":"/ may be called too often then this method can be used to ensure that it","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":26125,"byte_end":26199,"line_start":356,"line_end":356,"column_start":5,"column_end":79}},{"value":"/ has defined semantics.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":26204,"byte_end":26230,"line_start":357,"line_end":357,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":26235,"byte_end":26238,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ If a `fuse`d future is `poll`ed after having returned `Poll::Ready`","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":26243,"byte_end":26314,"line_start":359,"line_end":359,"column_start":5,"column_end":76}},{"value":"/ previously, it will return `Poll::Pending`, from `poll` again (and will","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":26319,"byte_end":26394,"line_start":360,"line_end":360,"column_start":5,"column_end":80}},{"value":"/ continue to do so for all future calls to `poll`).","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":26399,"byte_end":26453,"line_start":361,"line_end":361,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":26458,"byte_end":26461,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ This combinator will drop the underlying future as soon as it has been","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":26466,"byte_end":26540,"line_start":363,"line_end":363,"column_start":5,"column_end":79}},{"value":"/ completed to ensure resources are reclaimed as soon as possible.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":26545,"byte_end":26613,"line_start":364,"line_end":364,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":27465,"byte_end":27472,"line_start":391,"line_end":391,"column_start":8,"column_end":15},"name":"inspect","qualname":"::future::future::FutureExt::inspect","value":"pub fn inspect<F>(Self, F) -> Inspect<Self, F> where F: FnOnce(&Self::Output)\n-> (), Self: Sized","parent":{"krate":0,"index":221},"children":[],"decl_id":null,"docs":" Do something with the output of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the output of a future before passing it on.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":26771,"byte_end":26837,"line_start":373,"line_end":373,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":26842,"byte_end":26845,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":26850,"byte_end":26925,"line_start":375,"line_end":375,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":26930,"byte_end":27003,"line_start":376,"line_end":376,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":27008,"byte_end":27077,"line_start":377,"line_end":377,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect`.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":27082,"byte_end":27132,"line_start":378,"line_end":378,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":27137,"byte_end":27140,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":27145,"byte_end":27159,"line_start":380,"line_end":380,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":27164,"byte_end":27167,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":27172,"byte_end":27179,"line_start":382,"line_end":382,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":27184,"byte_end":27225,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":27230,"byte_end":27265,"line_start":384,"line_end":384,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":27270,"byte_end":27273,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":27278,"byte_end":27307,"line_start":386,"line_end":386,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.inspect(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":27312,"byte_end":27390,"line_start":387,"line_end":387,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(new_future.await, 1);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":27395,"byte_end":27431,"line_start":388,"line_end":388,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":27436,"byte_end":27445,"line_start":389,"line_end":389,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":27450,"byte_end":27457,"line_start":390,"line_end":390,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":32708,"byte_end":32718,"line_start":541,"line_end":541,"column_start":8,"column_end":18},"name":"unit_error","qualname":"::future::future::FutureExt::unit_error","value":"pub fn unit_error(Self) -> UnitError<Self> where Self: Sized","parent":{"krate":0,"index":221},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":32575,"byte_end":32624,"line_start":539,"line_end":539,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":32629,"byte_end":32700,"line_start":540,"line_end":540,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":33003,"byte_end":33014,"line_start":550,"line_end":550,"column_start":8,"column_end":19},"name":"never_error","qualname":"::future::future::FutureExt::never_error","value":"pub fn never_error(Self) -> NeverError<Self> where Self: Sized","parent":{"krate":0,"index":221},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":32867,"byte_end":32916,"line_start":548,"line_end":548,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":32921,"byte_end":32995,"line_start":549,"line_end":549,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":33245,"byte_end":33255,"line_start":558,"line_end":558,"column_start":8,"column_end":18},"name":"poll_unpin","qualname":"::future::future::FutureExt::poll_unpin","value":"pub fn poll_unpin(&mut Self, &mut Context) -> Poll<Self::Output> where\nSelf: Unpin","parent":{"krate":0,"index":221},"children":[],"decl_id":null,"docs":" A convenience for calling `Future::poll` on `Unpin` future types.\n","sig":null,"attributes":[{"value":"/ A convenience for calling `Future::poll` on `Unpin` future types.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":33168,"byte_end":33237,"line_start":557,"line_end":557,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":34651,"byte_end":34663,"line_start":596,"line_end":596,"column_start":8,"column_end":20},"name":"now_or_never","qualname":"::future::future::FutureExt::now_or_never","value":"pub fn now_or_never(Self) -> Option<Self::Output> where Self: Sized","parent":{"krate":0,"index":221},"children":[],"decl_id":null,"docs":" Evaluates and consumes the future, returning the resulting output if\n the future is ready after the first call to `Future::poll`.","sig":null,"attributes":[{"value":"/ Evaluates and consumes the future, returning the resulting output if","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":33391,"byte_end":33463,"line_start":565,"line_end":565,"column_start":5,"column_end":77}},{"value":"/ the future is ready after the first call to `Future::poll`.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":33468,"byte_end":33531,"line_start":566,"line_end":566,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":33536,"byte_end":33539,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ If `poll` instead returns `Poll::Pending`, `None` is returned.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":33544,"byte_end":33610,"line_start":568,"line_end":568,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":33615,"byte_end":33618,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ This method is useful in cases where immediacy is more important than","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":33623,"byte_end":33696,"line_start":570,"line_end":570,"column_start":5,"column_end":78}},{"value":"/ waiting for a result. It is also convenient for quickly obtaining","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":33701,"byte_end":33770,"line_start":571,"line_end":571,"column_start":5,"column_end":74}},{"value":"/ the value of a future that is known to always resolve immediately.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":33775,"byte_end":33845,"line_start":572,"line_end":572,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":33850,"byte_end":33853,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":33858,"byte_end":33872,"line_start":574,"line_end":574,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":33877,"byte_end":33880,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":33885,"byte_end":33892,"line_start":576,"line_end":576,"column_start":5,"column_end":12}},{"value":"/ # use futures::prelude::*;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":33897,"byte_end":33927,"line_start":577,"line_end":577,"column_start":5,"column_end":35}},{"value":"/ use futures::{future::ready, future::pending};","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":33932,"byte_end":33982,"line_start":578,"line_end":578,"column_start":5,"column_end":55}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":33987,"byte_end":34026,"line_start":579,"line_end":579,"column_start":5,"column_end":44}},{"value":"/ let future_pending = pending::<&'static str>();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":34031,"byte_end":34082,"line_start":580,"line_end":580,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":34087,"byte_end":34090,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never(), Some(\"foobar\"));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":34095,"byte_end":34155,"line_start":582,"line_end":582,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(future_pending.now_or_never(), None);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":34160,"byte_end":34212,"line_start":583,"line_end":583,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":34217,"byte_end":34224,"line_start":584,"line_end":584,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":34229,"byte_end":34232,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ In cases where it is absolutely known that a future should always","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":34237,"byte_end":34306,"line_start":586,"line_end":586,"column_start":5,"column_end":74}},{"value":"/ resolve immediately and never return `Poll::Pending`, this method can","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":34311,"byte_end":34384,"line_start":587,"line_end":587,"column_start":5,"column_end":78}},{"value":"/ be combined with `expect()`:","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":34389,"byte_end":34421,"line_start":588,"line_end":588,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":34426,"byte_end":34429,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":34434,"byte_end":34441,"line_start":590,"line_end":590,"column_start":5,"column_end":12}},{"value":"/ # use futures::{prelude::*, future::ready};","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":34446,"byte_end":34493,"line_start":591,"line_end":591,"column_start":5,"column_end":52}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":34498,"byte_end":34537,"line_start":592,"line_end":592,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":34542,"byte_end":34545,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never().expect(\"Future not ready\"), \"foobar\");","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":34550,"byte_end":34631,"line_start":594,"line_end":594,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":34636,"byte_end":34643,"line_start":595,"line_end":595,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":5365},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/into_future.rs","byte_start":66003,"byte_end":66013,"line_start":10,"line_end":10,"column_start":16,"column_end":26},"name":"IntoFuture","qualname":"::future::try_future::into_future::IntoFuture","value":"IntoFuture {  }","parent":null,"children":[{"krate":0,"index":5367}],"decl_id":null,"docs":" Future for the [`into_future`](super::TryFutureExt::into_future) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"StructVariant","id":{"krate":0,"index":5404},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten.rs","byte_start":66987,"byte_end":66992,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"First","qualname":"::future::try_future::try_flatten::TryFlatten::First","value":"TryFlatten::First { f }","parent":{"krate":0,"index":5401},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5406},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten.rs","byte_start":67021,"byte_end":67027,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::try_future::try_flatten::TryFlatten::Second","value":"TryFlatten::Second { f }","parent":{"krate":0,"index":5401},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5408},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten.rs","byte_start":67056,"byte_end":67061,"line_start":16,"line_end":16,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::try_future::try_flatten::TryFlatten::Empty","value":"TryFlatten::Empty","parent":{"krate":0,"index":5401},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5401},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten.rs","byte_start":66954,"byte_end":66964,"line_start":13,"line_end":13,"column_start":14,"column_end":24},"name":"TryFlatten","qualname":"::future::try_future::try_flatten::TryFlatten","value":"pub enum TryFlatten<Fut1, Fut2> {\n    First {\n            f: Fut1,\n        },\n    Second {\n            f: Fut2,\n        },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":5404},{"krate":0,"index":5406},{"krate":0,"index":5408}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5451},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten_err.rs","byte_start":71930,"byte_end":71935,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"name":"First","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::First","value":"TryFlattenErr::First { f }","parent":{"krate":0,"index":5448},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5453},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten_err.rs","byte_start":71964,"byte_end":71970,"line_start":12,"line_end":12,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Second","value":"TryFlattenErr::Second { f }","parent":{"krate":0,"index":5448},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5455},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten_err.rs","byte_start":71999,"byte_end":72004,"line_start":13,"line_end":13,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Empty","value":"TryFlattenErr::Empty","parent":{"krate":0,"index":5448},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5448},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten_err.rs","byte_start":71894,"byte_end":71907,"line_start":10,"line_end":10,"column_start":14,"column_end":27},"name":"TryFlattenErr","qualname":"::future::try_future::try_flatten_err::TryFlattenErr","value":"pub enum TryFlattenErr<Fut1, Fut2> {\n    First {\n            f: Fut1,\n        },\n    Second {\n            f: Fut2,\n        },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":5451},{"krate":0,"index":5453},{"krate":0,"index":5455}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5498},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":44838,"byte_end":44848,"line_start":32,"line_end":32,"column_start":5,"column_end":15},"name":"TryFlatten","qualname":"::future::try_future::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":5501}],"decl_id":null,"docs":" Future for the [`try_flatten`](TryFutureExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5559},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":45096,"byte_end":45109,"line_start":39,"line_end":39,"column_start":5,"column_end":18},"name":"TryFlattenErr","qualname":"::future::try_future::TryFlattenErr","value":"TryFlattenErr {  }","parent":null,"children":[{"krate":0,"index":5562}],"decl_id":null,"docs":" Future for the [`try_flatten_err`](TryFutureExt::try_flatten_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5619},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":45377,"byte_end":45393,"line_start":46,"line_end":46,"column_start":5,"column_end":21},"name":"TryFlattenStream","qualname":"::future::try_future::TryFlattenStream","value":"TryFlattenStream {  }","parent":null,"children":[{"krate":0,"index":5621}],"decl_id":null,"docs":" Future for the [`try_flatten_stream`](TryFutureExt::try_flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5670},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":45981,"byte_end":45988,"line_start":63,"line_end":63,"column_start":5,"column_end":12},"name":"AndThen","qualname":"::future::try_future::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":5674}],"decl_id":null,"docs":" Future for the [`and_then`](TryFutureExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5744},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":46228,"byte_end":46234,"line_start":70,"line_end":70,"column_start":5,"column_end":11},"name":"OrElse","qualname":"::future::try_future::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":5748}],"decl_id":null,"docs":" Future for the [`or_else`](TryFutureExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5817},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":46484,"byte_end":46491,"line_start":77,"line_end":77,"column_start":5,"column_end":12},"name":"ErrInto","qualname":"::future::try_future::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":5820}],"decl_id":null,"docs":" Future for the [`err_into`](TryFutureExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5878},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":46699,"byte_end":46705,"line_start":84,"line_end":84,"column_start":5,"column_end":11},"name":"OkInto","qualname":"::future::try_future::OkInto","value":"OkInto {  }","parent":null,"children":[{"krate":0,"index":5881}],"decl_id":null,"docs":" Future for the [`ok_into`](TryFutureExt::ok_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5939},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":46924,"byte_end":46933,"line_start":91,"line_end":91,"column_start":5,"column_end":14},"name":"InspectOk","qualname":"::future::try_future::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":5942}],"decl_id":null,"docs":" Future for the [`inspect_ok`](super::TryFutureExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6000},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":47205,"byte_end":47215,"line_start":98,"line_end":98,"column_start":5,"column_end":15},"name":"InspectErr","qualname":"::future::try_future::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":6003}],"decl_id":null,"docs":" Future for the [`inspect_err`](super::TryFutureExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6061},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":47588,"byte_end":47593,"line_start":108,"line_end":108,"column_start":5,"column_end":10},"name":"MapOk","qualname":"::future::try_future::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":6064}],"decl_id":null,"docs":" Future for the [`map_ok`](TryFutureExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6122},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":47834,"byte_end":47840,"line_start":115,"line_end":115,"column_start":5,"column_end":11},"name":"MapErr","qualname":"::future::try_future::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":6125}],"decl_id":null,"docs":" Future for the [`map_err`](TryFutureExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6184},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":48097,"byte_end":48108,"line_start":122,"line_end":122,"column_start":5,"column_end":16},"name":"MapOkOrElse","qualname":"::future::try_future::MapOkOrElse","value":"MapOkOrElse {  }","parent":null,"children":[{"krate":0,"index":6188}],"decl_id":null,"docs":" Future for the [`map_ok_or_else`](TryFutureExt::map_ok_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6257},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":48392,"byte_end":48404,"line_start":129,"line_end":129,"column_start":5,"column_end":17},"name":"UnwrapOrElse","qualname":"::future::try_future::UnwrapOrElse","value":"UnwrapOrElse {  }","parent":null,"children":[{"krate":0,"index":6260}],"decl_id":null,"docs":" Future for the [`unwrap_or_else`](TryFutureExt::unwrap_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":484},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":48694,"byte_end":48706,"line_start":137,"line_end":137,"column_start":11,"column_end":23},"name":"TryFutureExt","qualname":"::future::try_future::TryFutureExt","value":"TryFutureExt: TryFuture","parent":null,"children":[{"krate":0,"index":485},{"krate":0,"index":488},{"krate":0,"index":492},{"krate":0,"index":495},{"krate":0,"index":497},{"krate":0,"index":499},{"krate":0,"index":502},{"krate":0,"index":505},{"krate":0,"index":507},{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":513},{"krate":0,"index":514}],"decl_id":null,"docs":" Adapters specific to [`Result`]-returning futures\n","sig":null,"attributes":[{"value":"/ Adapters specific to [`Result`]-returning futures","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":48630,"byte_end":48683,"line_start":136,"line_end":136,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":51466,"byte_end":51472,"line_start":217,"line_end":217,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::future::try_future::TryFutureExt::map_ok","value":"pub fn map_ok<T, F>(Self, F) -> MapOk<Self, F> where F: FnOnce(Self::Ok) -> T,\nSelf: Sized","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":50094,"byte_end":50152,"line_start":179,"line_end":179,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":50157,"byte_end":50160,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Ok`](TryFuture::Ok) type of the","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":50165,"byte_end":50240,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/ future into a different type. It is similar to the [`Result::map`]","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":50245,"byte_end":50315,"line_start":182,"line_end":182,"column_start":5,"column_end":75}},{"value":"/ method. You can use this method to chain along a computation once the","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":50320,"byte_end":50393,"line_start":183,"line_end":183,"column_start":5,"column_end":78}},{"value":"/ future has been resolved.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":50398,"byte_end":50427,"line_start":184,"line_end":184,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":50432,"byte_end":50435,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":50440,"byte_end":50515,"line_start":186,"line_end":186,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":50520,"byte_end":50595,"line_start":187,"line_end":187,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":50600,"byte_end":50647,"line_start":188,"line_end":188,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":50652,"byte_end":50655,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":50660,"byte_end":50735,"line_start":190,"line_end":190,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":50740,"byte_end":50766,"line_start":191,"line_end":191,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":50771,"byte_end":50774,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":50779,"byte_end":50793,"line_start":193,"line_end":193,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":50798,"byte_end":50801,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":50806,"byte_end":50813,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":50818,"byte_end":50856,"line_start":196,"line_end":196,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":50861,"byte_end":50864,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":50869,"byte_end":50910,"line_start":198,"line_end":198,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":50915,"byte_end":50960,"line_start":199,"line_end":199,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":50965,"byte_end":51007,"line_start":200,"line_end":200,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":51012,"byte_end":51048,"line_start":201,"line_end":201,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":51053,"byte_end":51062,"line_start":202,"line_end":202,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":51067,"byte_end":51074,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":51079,"byte_end":51082,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_ok`](TryFutureExt::map_ok) on an errored future has no","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":51087,"byte_end":51159,"line_start":205,"line_end":205,"column_start":5,"column_end":77}},{"value":"/ effect:","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":51164,"byte_end":51175,"line_start":206,"line_end":206,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":51180,"byte_end":51183,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":51188,"byte_end":51195,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":51200,"byte_end":51238,"line_start":209,"line_end":209,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":51243,"byte_end":51246,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":51251,"byte_end":51292,"line_start":211,"line_end":211,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":51297,"byte_end":51343,"line_start":212,"line_end":212,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":51348,"byte_end":51390,"line_start":213,"line_end":213,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":51395,"byte_end":51432,"line_start":214,"line_end":214,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":51437,"byte_end":51446,"line_start":215,"line_end":215,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":51451,"byte_end":51458,"line_start":216,"line_end":216,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":53031,"byte_end":53045,"line_start":257,"line_end":257,"column_start":8,"column_end":22},"name":"map_ok_or_else","qualname":"::future::try_future::TryFutureExt::map_ok_or_else","value":"pub fn map_ok_or_else<T, E, F>(Self, E, F) -> MapOkOrElse<Self, F, E> where\nF: FnOnce(Self::Ok) -> T, E: FnOnce(Self::Error) -> T, Self: Sized","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value, and permits for error handling resulting in the same type.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value, and permits for error handling resulting in the same type.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":51663,"byte_end":51780,"line_start":225,"line_end":225,"column_start":5,"column_end":122}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":51785,"byte_end":51788,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ This method can be used to coalesce your [`Ok`](TryFuture::Ok) type and [`Error`](TryFuture::Error) into another type,","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":51793,"byte_end":51915,"line_start":227,"line_end":227,"column_start":5,"column_end":127}},{"value":"/ where that type is the same for both outcomes.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":51920,"byte_end":51970,"line_start":228,"line_end":228,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":51975,"byte_end":51978,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":51983,"byte_end":52058,"line_start":230,"line_end":230,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":52063,"byte_end":52138,"line_start":231,"line_end":231,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":52143,"byte_end":52190,"line_start":232,"line_end":232,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":52195,"byte_end":52198,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ The provided closure `e` will only be called if this future is resolved","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":52203,"byte_end":52278,"line_start":234,"line_end":234,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":52283,"byte_end":52358,"line_start":235,"line_end":235,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":52363,"byte_end":52410,"line_start":236,"line_end":236,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":52415,"byte_end":52418,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":52423,"byte_end":52498,"line_start":238,"line_end":238,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":52503,"byte_end":52529,"line_start":239,"line_end":239,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":52534,"byte_end":52537,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":52542,"byte_end":52556,"line_start":241,"line_end":241,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":52561,"byte_end":52564,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":52569,"byte_end":52576,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":52581,"byte_end":52619,"line_start":244,"line_end":244,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":52624,"byte_end":52627,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":52632,"byte_end":52673,"line_start":246,"line_end":246,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(5) };","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":52678,"byte_end":52723,"line_start":247,"line_end":247,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":52728,"byte_end":52789,"line_start":248,"line_end":248,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 8);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":52794,"byte_end":52826,"line_start":249,"line_end":249,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":52831,"byte_end":52834,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<i32, i32>(5) };","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":52839,"byte_end":52885,"line_start":251,"line_end":251,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":52890,"byte_end":52951,"line_start":252,"line_end":252,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 10);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":52956,"byte_end":52989,"line_start":253,"line_end":253,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":52994,"byte_end":53003,"line_start":254,"line_end":254,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":53008,"byte_end":53015,"line_start":255,"line_end":255,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":53020,"byte_end":53023,"line_start":256,"line_end":256,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":54728,"byte_end":54735,"line_start":305,"line_end":305,"column_start":8,"column_end":15},"name":"map_err","qualname":"::future::try_future::TryFutureExt::map_err","value":"pub fn map_err<E, F>(Self, F) -> MapErr<Self, F> where F: FnOnce(Self::Error)\n-> E, Self: Sized","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" Maps this future's error value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's error value to a different value.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":53279,"byte_end":53335,"line_start":266,"line_end":266,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":53340,"byte_end":53343,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Error`](TryFuture::Error) type","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":53348,"byte_end":53422,"line_start":268,"line_end":268,"column_start":5,"column_end":79}},{"value":"/ of the future into a different type. It is similar to the","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":53427,"byte_end":53488,"line_start":269,"line_end":269,"column_start":5,"column_end":66}},{"value":"/ [`Result::map_err`] method. You can use this method for example to","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":53493,"byte_end":53563,"line_start":270,"line_end":270,"column_start":5,"column_end":75}},{"value":"/ ensure that futures have the same [`Error`](TryFuture::Error) type when","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":53568,"byte_end":53643,"line_start":271,"line_end":271,"column_start":5,"column_end":80}},{"value":"/ using [`select!`] or [`join!`].","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":53648,"byte_end":53683,"line_start":272,"line_end":272,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":53688,"byte_end":53691,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":53696,"byte_end":53771,"line_start":274,"line_end":274,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":53776,"byte_end":53851,"line_start":275,"line_end":275,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":53856,"byte_end":53903,"line_start":276,"line_end":276,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":53908,"byte_end":53911,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":53916,"byte_end":53991,"line_start":278,"line_end":278,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":53996,"byte_end":54022,"line_start":279,"line_end":279,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":54027,"byte_end":54030,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":54035,"byte_end":54049,"line_start":281,"line_end":281,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":54054,"byte_end":54057,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":54062,"byte_end":54069,"line_start":283,"line_end":283,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":54074,"byte_end":54112,"line_start":284,"line_end":284,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":54117,"byte_end":54120,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":54125,"byte_end":54166,"line_start":286,"line_end":286,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":54171,"byte_end":54217,"line_start":287,"line_end":287,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":54222,"byte_end":54265,"line_start":288,"line_end":288,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":54270,"byte_end":54307,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":54312,"byte_end":54321,"line_start":290,"line_end":290,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":54326,"byte_end":54333,"line_start":291,"line_end":291,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":54338,"byte_end":54341,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_err`](TryFutureExt::map_err) on a successful future has","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":54346,"byte_end":54419,"line_start":293,"line_end":293,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":54424,"byte_end":54438,"line_start":294,"line_end":294,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":54443,"byte_end":54446,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":54451,"byte_end":54458,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":54463,"byte_end":54501,"line_start":297,"line_end":297,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":54506,"byte_end":54509,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":54514,"byte_end":54555,"line_start":299,"line_end":299,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":54560,"byte_end":54605,"line_start":300,"line_end":300,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":54610,"byte_end":54653,"line_start":301,"line_end":301,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":54658,"byte_end":54694,"line_start":302,"line_end":302,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":54699,"byte_end":54708,"line_start":303,"line_end":303,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":54713,"byte_end":54720,"line_start":304,"line_end":304,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":55825,"byte_end":55833,"line_start":335,"line_end":335,"column_start":8,"column_end":16},"name":"err_into","qualname":"::future::try_future::TryFutureExt::err_into","value":"pub fn err_into<E>(Self) -> ErrInto<Self, E> where Self: Sized,\nSelf::Error: Into<E>","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" Maps this future's [`Error`](TryFuture::Error) to a new error type\n using the [`Into`](std::convert::Into) trait.","sig":null,"attributes":[{"value":"/ Maps this future's [`Error`](TryFuture::Error) to a new error type","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":54928,"byte_end":54998,"line_start":313,"line_end":313,"column_start":5,"column_end":75}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":55003,"byte_end":55052,"line_start":314,"line_end":314,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":55057,"byte_end":55060,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ This method does for futures what the `?`-operator does for","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":55065,"byte_end":55128,"line_start":316,"line_end":316,"column_start":5,"column_end":68}},{"value":"/ [`Result`]: It lets the compiler infer the type of the resulting","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":55133,"byte_end":55201,"line_start":317,"line_end":317,"column_start":5,"column_end":73}},{"value":"/ error. Just as [`map_err`](TryFutureExt::map_err), this is useful for","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":55206,"byte_end":55279,"line_start":318,"line_end":318,"column_start":5,"column_end":78}},{"value":"/ example to ensure that futures have the same [`Error`](TryFuture::Error)","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":55284,"byte_end":55360,"line_start":319,"line_end":319,"column_start":5,"column_end":81}},{"value":"/ type when using [`select!`] or [`join!`].","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":55365,"byte_end":55410,"line_start":320,"line_end":320,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":55415,"byte_end":55418,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":55423,"byte_end":55498,"line_start":322,"line_end":322,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":55503,"byte_end":55529,"line_start":323,"line_end":323,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":55534,"byte_end":55537,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":55542,"byte_end":55556,"line_start":325,"line_end":325,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":55561,"byte_end":55564,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":55569,"byte_end":55576,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":55581,"byte_end":55619,"line_start":328,"line_end":328,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":55624,"byte_end":55627,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":55632,"byte_end":55673,"line_start":330,"line_end":330,"column_start":5,"column_end":46}},{"value":"/ let future_err_u8 = async { Err::<(), u8>(1) };","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":55678,"byte_end":55729,"line_start":331,"line_end":331,"column_start":5,"column_end":56}},{"value":"/ let future_err_i32 = future_err_u8.err_into::<i32>();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":55734,"byte_end":55791,"line_start":332,"line_end":332,"column_start":5,"column_end":62}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":55796,"byte_end":55805,"line_start":333,"line_end":333,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":55810,"byte_end":55817,"line_start":334,"line_end":334,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":56129,"byte_end":56136,"line_start":345,"line_end":345,"column_start":8,"column_end":15},"name":"ok_into","qualname":"::future::try_future::TryFutureExt::ok_into","value":"pub fn ok_into<U>(Self) -> OkInto<Self, U> where Self: Sized,\nSelf::Ok: Into<U>","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" Maps this future's [`Ok`](TryFuture::Ok) to a new type\n using the [`Into`](std::convert::Into) trait.\n","sig":null,"attributes":[{"value":"/ Maps this future's [`Ok`](TryFuture::Ok) to a new type","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":56009,"byte_end":56067,"line_start":343,"line_end":343,"column_start":5,"column_end":63}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":56072,"byte_end":56121,"line_start":344,"line_end":344,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":57691,"byte_end":57699,"line_start":389,"line_end":389,"column_start":8,"column_end":16},"name":"and_then","qualname":"::future::try_future::TryFutureExt::and_then","value":"pub fn and_then<Fut, F>(Self, F) -> AndThen<Self, Fut, F> where\nF: FnOnce(Self::Ok) -> Fut, Fut: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" Executes another future after this one resolves successfully. The\n success value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future after this one resolves successfully. The","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":56310,"byte_end":56379,"line_start":353,"line_end":353,"column_start":5,"column_end":74}},{"value":"/ success value is passed to a closure to create this subsequent future.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":56384,"byte_end":56458,"line_start":354,"line_end":354,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":56463,"byte_end":56466,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":56471,"byte_end":56546,"line_start":356,"line_end":356,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If this future resolves to an [`Err`], panics, or is","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":56551,"byte_end":56621,"line_start":357,"line_end":357,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":56626,"byte_end":56691,"line_start":358,"line_end":358,"column_start":5,"column_end":70}},{"value":"/ [`Error`](TryFuture::Error) type of this future and the future","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":56696,"byte_end":56762,"line_start":359,"line_end":359,"column_start":5,"column_end":71}},{"value":"/ returned by `f` have to match.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":56767,"byte_end":56801,"line_start":360,"line_end":360,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":56806,"byte_end":56809,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":56814,"byte_end":56889,"line_start":362,"line_end":362,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":56894,"byte_end":56920,"line_start":363,"line_end":363,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":56925,"byte_end":56928,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":56933,"byte_end":56947,"line_start":365,"line_end":365,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":56952,"byte_end":56955,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":56960,"byte_end":56967,"line_start":367,"line_end":367,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":56972,"byte_end":57010,"line_start":368,"line_end":368,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":57015,"byte_end":57018,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":57023,"byte_end":57064,"line_start":370,"line_end":370,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":57069,"byte_end":57114,"line_start":371,"line_end":371,"column_start":5,"column_end":50}},{"value":"/ let future = future.and_then(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":57119,"byte_end":57194,"line_start":372,"line_end":372,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":57199,"byte_end":57235,"line_start":373,"line_end":373,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":57240,"byte_end":57249,"line_start":374,"line_end":374,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":57254,"byte_end":57261,"line_start":375,"line_end":375,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":57266,"byte_end":57269,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ Calling [`and_then`](TryFutureExt::and_then) on an errored future has no","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":57274,"byte_end":57350,"line_start":377,"line_end":377,"column_start":5,"column_end":81}},{"value":"/ effect:","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":57355,"byte_end":57366,"line_start":378,"line_end":378,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":57371,"byte_end":57374,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":57379,"byte_end":57386,"line_start":380,"line_end":380,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":57391,"byte_end":57429,"line_start":381,"line_end":381,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":57434,"byte_end":57437,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":57442,"byte_end":57483,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":57488,"byte_end":57534,"line_start":384,"line_end":384,"column_start":5,"column_end":51}},{"value":"/ let future = future.and_then(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":57539,"byte_end":57615,"line_start":385,"line_end":385,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":57620,"byte_end":57657,"line_start":386,"line_end":386,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":57662,"byte_end":57671,"line_start":387,"line_end":387,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":57676,"byte_end":57683,"line_start":388,"line_end":388,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":59320,"byte_end":59327,"line_start":434,"line_end":434,"column_start":8,"column_end":15},"name":"or_else","qualname":"::future::try_future::TryFutureExt::or_else","value":"pub fn or_else<Fut, F>(Self, F) -> OrElse<Self, Fut, F> where\nF: FnOnce(Self::Error) -> Fut, Fut: TryFuture<Ok = Self::Ok>, Self: Sized","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" Executes another future if this one resolves to an error. The\n error value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future if this one resolves to an error. The","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":57953,"byte_end":58018,"line_start":398,"line_end":398,"column_start":5,"column_end":70}},{"value":"/ error value is passed to a closure to create this subsequent future.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":58023,"byte_end":58095,"line_start":399,"line_end":399,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":58100,"byte_end":58103,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":58108,"byte_end":58183,"line_start":401,"line_end":401,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If this future resolves to an [`Ok`], panics, or is","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":58188,"byte_end":58258,"line_start":402,"line_end":402,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":58263,"byte_end":58328,"line_start":403,"line_end":403,"column_start":5,"column_end":70}},{"value":"/ [`Ok`](TryFuture::Ok) type of this future and the future returned by `f`","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":58333,"byte_end":58409,"line_start":404,"line_end":404,"column_start":5,"column_end":81}},{"value":"/ have to match.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":58414,"byte_end":58432,"line_start":405,"line_end":405,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":58437,"byte_end":58440,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":58445,"byte_end":58520,"line_start":407,"line_end":407,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":58525,"byte_end":58551,"line_start":408,"line_end":408,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":58556,"byte_end":58559,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":58564,"byte_end":58578,"line_start":410,"line_end":410,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":58583,"byte_end":58586,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":58591,"byte_end":58598,"line_start":412,"line_end":412,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":58603,"byte_end":58641,"line_start":413,"line_end":413,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":58646,"byte_end":58649,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":58654,"byte_end":58695,"line_start":415,"line_end":415,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":58700,"byte_end":58746,"line_start":416,"line_end":416,"column_start":5,"column_end":51}},{"value":"/ let future = future.or_else(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":58751,"byte_end":58826,"line_start":417,"line_end":417,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":58831,"byte_end":58868,"line_start":418,"line_end":418,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":58873,"byte_end":58882,"line_start":419,"line_end":419,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":58887,"byte_end":58894,"line_start":420,"line_end":420,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":58899,"byte_end":58902,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ Calling [`or_else`](TryFutureExt::or_else) on a successful future has","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":58907,"byte_end":58980,"line_start":422,"line_end":422,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":58985,"byte_end":58999,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":59004,"byte_end":59007,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":59012,"byte_end":59019,"line_start":425,"line_end":425,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":59024,"byte_end":59062,"line_start":426,"line_end":426,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":59067,"byte_end":59070,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":59075,"byte_end":59116,"line_start":428,"line_end":428,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":59121,"byte_end":59166,"line_start":429,"line_end":429,"column_start":5,"column_end":50}},{"value":"/ let future = future.or_else(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":59171,"byte_end":59245,"line_start":430,"line_end":430,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":59250,"byte_end":59286,"line_start":431,"line_end":431,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":59291,"byte_end":59300,"line_start":432,"line_end":432,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":59305,"byte_end":59312,"line_start":433,"line_end":433,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":505},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":60303,"byte_end":60313,"line_start":461,"line_end":461,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::future::try_future::TryFutureExt::inspect_ok","value":"pub fn inspect_ok<F>(Self, F) -> InspectOk<Self, F> where F: FnOnce(&Self::Ok)\n-> (), Self: Sized","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" Do something with the success value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of a future before passing it on.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":59576,"byte_end":59649,"line_start":443,"line_end":443,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":59654,"byte_end":59657,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":59662,"byte_end":59737,"line_start":445,"line_end":445,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":59742,"byte_end":59815,"line_start":446,"line_end":446,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":59820,"byte_end":59889,"line_start":447,"line_end":447,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_ok`.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":59894,"byte_end":59947,"line_start":448,"line_end":448,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":59952,"byte_end":59955,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":59960,"byte_end":59974,"line_start":450,"line_end":450,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":59979,"byte_end":59982,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":59987,"byte_end":59994,"line_start":452,"line_end":452,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":59999,"byte_end":60040,"line_start":453,"line_end":453,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":60045,"byte_end":60083,"line_start":454,"line_end":454,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":60088,"byte_end":60091,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ let future = async { Ok::<_, ()>(1) };","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":60096,"byte_end":60138,"line_start":456,"line_end":456,"column_start":5,"column_end":47}},{"value":"/ let new_future = future.inspect_ok(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":60143,"byte_end":60224,"line_start":457,"line_end":457,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(new_future.await, Ok(1));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":60229,"byte_end":60269,"line_start":458,"line_end":458,"column_start":5,"column_end":45}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":60274,"byte_end":60283,"line_start":459,"line_end":459,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":60288,"byte_end":60295,"line_start":460,"line_end":460,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":507},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":61239,"byte_end":61250,"line_start":487,"line_end":487,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::future::try_future::TryFutureExt::inspect_err","value":"pub fn inspect_err<F>(Self, F) -> InspectErr<Self, F> where\nF: FnOnce(&Self::Error) -> (), Self: Sized","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" Do something with the error value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of a future before passing it on.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":60512,"byte_end":60583,"line_start":469,"line_end":469,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":60588,"byte_end":60591,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":60596,"byte_end":60671,"line_start":471,"line_end":471,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":60676,"byte_end":60749,"line_start":472,"line_end":472,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":60754,"byte_end":60823,"line_start":473,"line_end":473,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_err`.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":60828,"byte_end":60882,"line_start":474,"line_end":474,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":60887,"byte_end":60890,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":60895,"byte_end":60909,"line_start":476,"line_end":476,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":60914,"byte_end":60917,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":60922,"byte_end":60929,"line_start":478,"line_end":478,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":60934,"byte_end":60975,"line_start":479,"line_end":479,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":60980,"byte_end":61018,"line_start":480,"line_end":480,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":61023,"byte_end":61026,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<(), _>(1) };","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":61031,"byte_end":61074,"line_start":482,"line_end":482,"column_start":5,"column_end":48}},{"value":"/ let new_future = future.inspect_err(|&x| println!(\"about to error: {}\", x));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":61079,"byte_end":61159,"line_start":483,"line_end":483,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(new_future.await, Err(1));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":61164,"byte_end":61205,"line_start":484,"line_end":484,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":61210,"byte_end":61219,"line_start":485,"line_end":485,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":61224,"byte_end":61231,"line_start":486,"line_end":486,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":61635,"byte_end":61646,"line_start":499,"line_end":499,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::future::try_future::TryFutureExt::try_flatten","value":"pub fn try_flatten(Self) -> TryFlatten<Self, Self::Ok> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":61454,"byte_end":61529,"line_start":495,"line_end":495,"column_start":5,"column_end":80}},{"value":"/ future is another future.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":61534,"byte_end":61563,"line_start":496,"line_end":496,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":61568,"byte_end":61571,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `future.and_then(|x| x)`.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":61576,"byte_end":61627,"line_start":498,"line_end":498,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":62825,"byte_end":62843,"line_start":532,"line_end":532,"column_start":8,"column_end":26},"name":"try_flatten_stream","qualname":"::future::try_future::TryFutureExt::try_flatten_stream","value":"pub fn try_flatten_stream(Self) -> TryFlattenStream<Self> where\nSelf::Ok: TryStream<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":61881,"byte_end":61956,"line_start":507,"line_end":507,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":61961,"byte_end":61984,"line_start":508,"line_end":508,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":61989,"byte_end":61992,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":61997,"byte_end":62069,"line_start":510,"line_end":510,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":62074,"byte_end":62147,"line_start":511,"line_end":511,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":62152,"byte_end":62166,"line_start":512,"line_end":512,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":62171,"byte_end":62174,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":62179,"byte_end":62249,"line_start":514,"line_end":514,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":62254,"byte_end":62272,"line_start":515,"line_end":515,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":62277,"byte_end":62280,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":62285,"byte_end":62299,"line_start":517,"line_end":517,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":62304,"byte_end":62307,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":62312,"byte_end":62319,"line_start":519,"line_end":519,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":62324,"byte_end":62365,"line_start":520,"line_end":520,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":62370,"byte_end":62408,"line_start":521,"line_end":521,"column_start":5,"column_end":43}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":62413,"byte_end":62459,"line_start":522,"line_end":522,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":62464,"byte_end":62467,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19].into_iter().map(Ok);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":62472,"byte_end":62532,"line_start":524,"line_end":524,"column_start":5,"column_end":65}},{"value":"/ let future_of_a_stream = async { Ok::<_, ()>(stream::iter(stream_items)) };","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":62537,"byte_end":62616,"line_start":525,"line_end":525,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":62621,"byte_end":62624,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.try_flatten_stream();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":62629,"byte_end":62686,"line_start":527,"line_end":527,"column_start":5,"column_end":62}},{"value":"/ let list = stream.try_collect::<Vec<_>>().await;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":62691,"byte_end":62743,"line_start":528,"line_end":528,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(list, Ok(vec![17, 18, 19]));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":62748,"byte_end":62791,"line_start":529,"line_end":529,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":62796,"byte_end":62805,"line_start":530,"line_end":530,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":62810,"byte_end":62817,"line_start":531,"line_end":531,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":63934,"byte_end":63948,"line_start":564,"line_end":564,"column_start":8,"column_end":22},"name":"unwrap_or_else","qualname":"::future::try_future::TryFutureExt::unwrap_or_else","value":"pub fn unwrap_or_else<F>(Self, F) -> UnwrapOrElse<Self, F> where Self: Sized,\nF: FnOnce(Self::Error) -> Self::Ok","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" Unwraps this future's output, producing a future with this future's\n [`Ok`](TryFuture::Ok) type as its\n [`Output`](std::future::Future::Output) type.","sig":null,"attributes":[{"value":"/ Unwraps this future's output, producing a future with this future's","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":63103,"byte_end":63174,"line_start":542,"line_end":542,"column_start":5,"column_end":76}},{"value":"/ [`Ok`](TryFuture::Ok) type as its","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":63179,"byte_end":63216,"line_start":543,"line_end":543,"column_start":5,"column_end":42}},{"value":"/ [`Output`](std::future::Future::Output) type.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":63221,"byte_end":63270,"line_start":544,"line_end":544,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":63275,"byte_end":63278,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ If this future is resolved successfully, the returned future will","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":63283,"byte_end":63352,"line_start":546,"line_end":546,"column_start":5,"column_end":74}},{"value":"/ contain the original future's success value as output. Otherwise, the","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":63357,"byte_end":63430,"line_start":547,"line_end":547,"column_start":5,"column_end":78}},{"value":"/ closure `f` is called with the error value to produce an alternate","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":63435,"byte_end":63505,"line_start":548,"line_end":548,"column_start":5,"column_end":75}},{"value":"/ success value.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":63510,"byte_end":63528,"line_start":549,"line_end":549,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":63533,"byte_end":63536,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ This method is similar to the [`Result::unwrap_or_else`] method.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":63541,"byte_end":63609,"line_start":551,"line_end":551,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":63614,"byte_end":63617,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":63622,"byte_end":63636,"line_start":553,"line_end":553,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":63641,"byte_end":63644,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":63649,"byte_end":63656,"line_start":555,"line_end":555,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":63661,"byte_end":63699,"line_start":556,"line_end":556,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":63704,"byte_end":63707,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":63712,"byte_end":63753,"line_start":558,"line_end":558,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<(), &str>(\"Boom!\") };","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":63758,"byte_end":63810,"line_start":559,"line_end":559,"column_start":5,"column_end":57}},{"value":"/ let future = future.unwrap_or_else(|_| ());","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":63815,"byte_end":63862,"line_start":560,"line_end":560,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(future.await, ());","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":63867,"byte_end":63900,"line_start":561,"line_end":561,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":63905,"byte_end":63914,"line_start":562,"line_end":562,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":63919,"byte_end":63926,"line_start":563,"line_end":563,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":513},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":65203,"byte_end":65214,"line_start":604,"line_end":604,"column_start":8,"column_end":19},"name":"into_future","qualname":"::future::try_future::TryFutureExt::into_future","value":"pub fn into_future(Self) -> IntoFuture<Self> where Self: Sized","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" Wraps a [`TryFuture`] into a type that implements\n [`Future`](std::future::Future).","sig":null,"attributes":[{"value":"/ Wraps a [`TryFuture`] into a type that implements","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":64502,"byte_end":64555,"line_start":583,"line_end":583,"column_start":5,"column_end":58}},{"value":"/ [`Future`](std::future::Future).","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":64560,"byte_end":64596,"line_start":584,"line_end":584,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":64601,"byte_end":64604,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ [`TryFuture`]s currently do not implement the","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":64609,"byte_end":64658,"line_start":586,"line_end":586,"column_start":5,"column_end":54}},{"value":"/ [`Future`](std::future::Future) trait due to limitations of the","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":64663,"byte_end":64730,"line_start":587,"line_end":587,"column_start":5,"column_end":72}},{"value":"/ compiler.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":64735,"byte_end":64748,"line_start":588,"line_end":588,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":64753,"byte_end":64756,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":64761,"byte_end":64775,"line_start":590,"line_end":590,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":64780,"byte_end":64783,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":64788,"byte_end":64795,"line_start":592,"line_end":592,"column_start":5,"column_end":12}},{"value":"/ use futures::future::{Future, TryFuture, TryFutureExt};","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":64800,"byte_end":64859,"line_start":593,"line_end":593,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":64864,"byte_end":64867,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":64872,"byte_end":64891,"line_start":595,"line_end":595,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":64896,"byte_end":64914,"line_start":596,"line_end":596,"column_start":5,"column_end":23}},{"value":"/ fn make_try_future() -> impl TryFuture<Ok = T, Error = E> { // ... }","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":64919,"byte_end":64991,"line_start":597,"line_end":597,"column_start":5,"column_end":77}},{"value":"/ # async { Ok::<i32, ()>(1) }","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":64996,"byte_end":65028,"line_start":598,"line_end":598,"column_start":5,"column_end":37}},{"value":"/ # }","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":65033,"byte_end":65040,"line_start":599,"line_end":599,"column_start":5,"column_end":12}},{"value":"/ fn take_future(future: impl Future<Output = Result<T, E>>) { /* ... */ }","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":65045,"byte_end":65121,"line_start":600,"line_end":600,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":65126,"byte_end":65129,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ take_future(make_try_future().into_future());","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":65134,"byte_end":65183,"line_start":602,"line_end":602,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":65188,"byte_end":65195,"line_start":603,"line_end":603,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":65473,"byte_end":65487,"line_start":613,"line_end":613,"column_start":8,"column_end":22},"name":"try_poll_unpin","qualname":"::future::try_future::TryFutureExt::try_poll_unpin","value":"pub fn try_poll_unpin(&mut Self, &mut Context)\n-> Poll<Result<Self::Ok, Self::Error>> where Self: Unpin","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]\n future types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":65370,"byte_end":65443,"line_start":611,"line_end":611,"column_start":5,"column_end":78}},{"value":"/ future types.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":65448,"byte_end":65465,"line_start":612,"line_end":612,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":6315},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":73656,"byte_end":73660,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Lazy","qualname":"::future::lazy::Lazy","value":"Lazy {  }","parent":null,"children":[{"krate":0,"index":6317}],"decl_id":null,"docs":" Future for the [`lazy`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`lazy`] function.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":73522,"byte_end":73559,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":73577,"byte_end":73644,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":581},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":74202,"byte_end":74206,"line_start":35,"line_end":35,"column_start":8,"column_end":12},"name":"lazy","qualname":"::future::lazy::lazy","value":"pub fn lazy<F, R>(F) -> Lazy<F> where F: FnOnce(&mut Context) -> R","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future that allows delayed execution of a closure.","sig":null,"attributes":[{"value":"/ Creates a new future that allows delayed execution of a closure.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":73765,"byte_end":73833,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":73834,"byte_end":73837,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The provided closure is only run once the future is polled.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":73838,"byte_end":73901,"line_start":18,"line_end":18,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":73902,"byte_end":73905,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":73906,"byte_end":73920,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":73921,"byte_end":73924,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":73925,"byte_end":73932,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":73933,"byte_end":73974,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":73975,"byte_end":73999,"line_start":24,"line_end":24,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":74000,"byte_end":74003,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let a = future::lazy(|_| 1);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":74004,"byte_end":74036,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":74037,"byte_end":74064,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":74065,"byte_end":74068,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ let b = future::lazy(|_| -> i32 {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":74069,"byte_end":74106,"line_start":29,"line_end":29,"column_start":1,"column_end":38}},{"value":"/     panic!(\"oh no!\")","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":74107,"byte_end":74131,"line_start":30,"line_end":30,"column_start":1,"column_end":25}},{"value":"/ });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":74132,"byte_end":74139,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ drop(b); // closure is never run","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":74140,"byte_end":74176,"line_start":32,"line_end":32,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":74177,"byte_end":74186,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":74187,"byte_end":74194,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6321},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":75033,"byte_end":75040,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Pending","qualname":"::future::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":6323}],"decl_id":null,"docs":" Future for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`pending()`] function.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":74894,"byte_end":74936,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":74954,"byte_end":75021,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":627},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":75559,"byte_end":75566,"line_start":36,"line_end":36,"column_start":8,"column_end":15},"name":"pending","qualname":"::future::pending::pending","value":"pub fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which never resolves, representing a computation that never\n finishes.","sig":null,"attributes":[{"value":"/ Creates a future which never resolves, representing a computation that never","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":75181,"byte_end":75261,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ finishes.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":75262,"byte_end":75275,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":75276,"byte_end":75279,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The returned future will forever return [`Poll::Pending`].","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":75280,"byte_end":75342,"line_start":23,"line_end":23,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":75343,"byte_end":75346,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":75347,"byte_end":75361,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":75362,"byte_end":75365,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":75366,"byte_end":75379,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":75380,"byte_end":75421,"line_start":28,"line_end":28,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":75422,"byte_end":75446,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":75447,"byte_end":75450,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let future = future::pending();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":75451,"byte_end":75486,"line_start":31,"line_end":31,"column_start":1,"column_end":36}},{"value":"/ let () = future.await;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":75487,"byte_end":75513,"line_start":32,"line_end":32,"column_start":1,"column_end":27}},{"value":"/ unreachable!();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":75514,"byte_end":75533,"line_start":33,"line_end":33,"column_start":1,"column_end":20}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":75534,"byte_end":75543,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":75544,"byte_end":75551,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6329},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":76338,"byte_end":76344,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::maybe_done::MaybeDone::Future","value":"MaybeDone::Future(Fut)","parent":{"krate":0,"index":6327},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":76303,"byte_end":76333,"line_start":15,"line_end":15,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6332},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":76411,"byte_end":76415,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::maybe_done::MaybeDone::Done","value":"MaybeDone::Done(Fut::Output)","parent":{"krate":0,"index":6327},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":76368,"byte_end":76406,"line_start":17,"line_end":17,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6335},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":76577,"byte_end":76581,"line_start":21,"line_end":21,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::maybe_done::MaybeDone::Gone","value":"MaybeDone::Gone","parent":{"krate":0,"index":6327},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`MaybeDone`] has been\n taken using the [`take_output`](MaybeDone::take_output) method.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`MaybeDone`] has been","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":76434,"byte_end":76500,"line_start":19,"line_end":19,"column_start":5,"column_end":71}},{"value":"/ taken using the [`take_output`](MaybeDone::take_output) method.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":76505,"byte_end":76572,"line_start":20,"line_end":20,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":6327},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":76274,"byte_end":76283,"line_start":14,"line_end":14,"column_start":10,"column_end":19},"name":"MaybeDone","qualname":"::future::maybe_done::MaybeDone","value":"pub enum MaybeDone<Fut: Future> { Future(Fut), Done(Fut::Output), Gone, }","parent":null,"children":[{"krate":0,"index":6329},{"krate":0,"index":6332},{"krate":0,"index":6335}],"decl_id":null,"docs":" A future that may have completed.","sig":null,"attributes":[{"value":"/ A future that may have completed.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":76152,"byte_end":76189,"line_start":10,"line_end":10,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":76190,"byte_end":76193,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`maybe_done()`] function.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":76194,"byte_end":76247,"line_start":12,"line_end":12,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":674},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":77102,"byte_end":77112,"line_start":43,"line_end":43,"column_start":8,"column_end":18},"name":"maybe_done","qualname":"::future::maybe_done::maybe_done","value":"pub fn maybe_done<Fut: Future>(Fut) -> MaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `MaybeDone`","sig":null,"attributes":[{"value":"/ Wraps a future into a `MaybeDone`","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":76641,"byte_end":76678,"line_start":26,"line_end":26,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":76679,"byte_end":76682,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":76683,"byte_end":76697,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":76698,"byte_end":76701,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":76702,"byte_end":76709,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":76710,"byte_end":76751,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":76752,"byte_end":76776,"line_start":32,"line_end":32,"column_start":1,"column_end":25}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":76777,"byte_end":76802,"line_start":33,"line_end":33,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":76803,"byte_end":76806,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let future = future::maybe_done(async { 5 });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":76807,"byte_end":76856,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ pin_mut!(future);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":76857,"byte_end":76878,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":76879,"byte_end":76931,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/ let () = future.as_mut().await;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":76932,"byte_end":76967,"line_start":38,"line_end":38,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(future.as_mut().take_output(), Some(5));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":76968,"byte_end":77023,"line_start":39,"line_end":39,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":77024,"byte_end":77076,"line_start":40,"line_end":40,"column_start":1,"column_end":53}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":77077,"byte_end":77086,"line_start":41,"line_end":41,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":77087,"byte_end":77094,"line_start":42,"line_end":42,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":678},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":77553,"byte_end":77563,"line_start":53,"line_end":53,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<MaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has been completed and [`take_output`](MaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":77255,"byte_end":77340,"line_start":48,"line_end":48,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":77345,"byte_end":77416,"line_start":49,"line_end":49,"column_start":5,"column_end":76}},{"value":"/ future has been completed and [`take_output`](MaybeDone::take_output)","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":77421,"byte_end":77494,"line_start":50,"line_end":50,"column_start":5,"column_end":78}},{"value":"/ has not yet been called.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":77499,"byte_end":77527,"line_start":51,"line_end":51,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":77532,"byte_end":77541,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":679},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":77911,"byte_end":77922,"line_start":65,"line_end":65,"column_start":12,"column_end":23},"name":"take_output","qualname":"<MaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `MaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `MaybeDone` without driving it","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":77791,"byte_end":77857,"line_start":62,"line_end":62,"column_start":5,"column_end":71}},{"value":"/ towards completion.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":77862,"byte_end":77885,"line_start":63,"line_end":63,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":77890,"byte_end":77899,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6342},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":79547,"byte_end":79553,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::try_maybe_done::TryMaybeDone::Future","value":"TryMaybeDone::Future(Fut)","parent":{"krate":0,"index":6340},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":79512,"byte_end":79542,"line_start":15,"line_end":15,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6345},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":79620,"byte_end":79624,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::try_maybe_done::TryMaybeDone::Done","value":"TryMaybeDone::Done(Fut::Ok)","parent":{"krate":0,"index":6340},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":79577,"byte_end":79615,"line_start":17,"line_end":17,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6348},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":79832,"byte_end":79836,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::try_maybe_done::TryMaybeDone::Gone","value":"TryMaybeDone::Gone","parent":{"krate":0,"index":6340},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`TryMaybeDone`] has been\n taken using the [`take_output`](TryMaybeDone::take_output) method,\n or if the future returned an error.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`TryMaybeDone`] has been","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":79639,"byte_end":79708,"line_start":19,"line_end":19,"column_start":5,"column_end":74}},{"value":"/ taken using the [`take_output`](TryMaybeDone::take_output) method,","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":79713,"byte_end":79783,"line_start":20,"line_end":20,"column_start":5,"column_end":75}},{"value":"/ or if the future returned an error.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":79788,"byte_end":79827,"line_start":21,"line_end":21,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":6340},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":79477,"byte_end":79489,"line_start":14,"line_end":14,"column_start":10,"column_end":22},"name":"TryMaybeDone","qualname":"::future::try_maybe_done::TryMaybeDone","value":"pub enum TryMaybeDone<Fut: TryFuture> { Future(Fut), Done(Fut::Ok), Gone, }","parent":null,"children":[{"krate":0,"index":6342},{"krate":0,"index":6345},{"krate":0,"index":6348}],"decl_id":null,"docs":" A future that may have completed with an error.","sig":null,"attributes":[{"value":"/ A future that may have completed with an error.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":79337,"byte_end":79388,"line_start":10,"line_end":10,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":79389,"byte_end":79392,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`try_maybe_done()`] function.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":79393,"byte_end":79450,"line_start":12,"line_end":12,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":726},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":79950,"byte_end":79964,"line_start":28,"line_end":28,"column_start":8,"column_end":22},"name":"try_maybe_done","qualname":"::future::try_maybe_done::try_maybe_done","value":"pub fn try_maybe_done<Fut: TryFuture>(Fut) -> TryMaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `TryMaybeDone`\n","sig":null,"attributes":[{"value":"/ Wraps a future into a `TryMaybeDone`","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":79902,"byte_end":79942,"line_start":27,"line_end":27,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":730},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":80451,"byte_end":80461,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<TryMaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has completed successfully and [`take_output`](TryMaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":80142,"byte_end":80227,"line_start":33,"line_end":33,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":80232,"byte_end":80303,"line_start":34,"line_end":34,"column_start":5,"column_end":76}},{"value":"/ future has completed successfully and [`take_output`](TryMaybeDone::take_output)","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":80308,"byte_end":80392,"line_start":35,"line_end":35,"column_start":5,"column_end":89}},{"value":"/ has not yet been called.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":80397,"byte_end":80425,"line_start":36,"line_end":36,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":80430,"byte_end":80439,"line_start":37,"line_end":37,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":731},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":80811,"byte_end":80822,"line_start":50,"line_end":50,"column_start":12,"column_end":23},"name":"take_output","qualname":"<TryMaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `TryMaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `TryMaybeDone` without driving it","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":80688,"byte_end":80757,"line_start":47,"line_end":47,"column_start":5,"column_end":74}},{"value":"/ towards completion.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":80762,"byte_end":80785,"line_start":48,"line_end":48,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":80790,"byte_end":80799,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":6353},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/option.rs","byte_start":83033,"byte_end":83045,"line_start":28,"line_end":28,"column_start":16,"column_end":28},"name":"OptionFuture","qualname":"::future::option::OptionFuture","value":"OptionFuture {  }","parent":null,"children":[{"krate":0,"index":6355}],"decl_id":null,"docs":" A future representing a value which may or may not be present.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":803},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":84163,"byte_end":84169,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::future::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":805}],"decl_id":null,"docs":" Future for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`poll_fn`] function.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":84043,"byte_end":84083,"line_start":9,"line_end":9,"column_start":1,"column_end":41}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":84084,"byte_end":84151,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":808},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":84756,"byte_end":84763,"line_start":36,"line_end":36,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":84220,"byte_end":84291,"line_start":17,"line_end":17,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":84292,"byte_end":84295,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Polling the returned future delegates to the wrapped function.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":84296,"byte_end":84362,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":84363,"byte_end":84366,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":84367,"byte_end":84381,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":84382,"byte_end":84385,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":84386,"byte_end":84393,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":84394,"byte_end":84435,"line_start":24,"line_end":24,"column_start":1,"column_end":42}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":84436,"byte_end":84469,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"/ use futures::task::{Context, Poll};","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":84470,"byte_end":84509,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":84510,"byte_end":84513,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ fn read_line(_cx: &mut Context<'_>) -> Poll<String> {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":84514,"byte_end":84571,"line_start":28,"line_end":28,"column_start":1,"column_end":58}},{"value":"/     Poll::Ready(\"Hello, World!\".into())","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":84572,"byte_end":84615,"line_start":29,"line_end":29,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":84616,"byte_end":84621,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":84622,"byte_end":84625,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let read_future = poll_fn(read_line);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":84626,"byte_end":84667,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(read_future.await, \"Hello, World!\".to_owned());","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":84668,"byte_end":84730,"line_start":33,"line_end":33,"column_start":1,"column_end":63}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":84731,"byte_end":84740,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":84741,"byte_end":84748,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6392},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":85697,"byte_end":85710,"line_start":13,"line_end":13,"column_start":16,"column_end":29},"name":"PollImmediate","qualname":"::future::poll_immediate::PollImmediate","value":"PollImmediate {  }","parent":null,"children":[{"krate":0,"index":6394}],"decl_id":null,"docs":" Future for the [`poll_immediate`](poll_immediate()) function.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":867},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":89118,"byte_end":89132,"line_start":124,"line_end":124,"column_start":8,"column_end":22},"name":"poll_immediate","qualname":"::future::poll_immediate::poll_immediate","value":"pub fn poll_immediate<F: Future>(F) -> PollImmediate<F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that is immediately ready with an Option of a value.\n Specifically this means that [poll](core::future::Future::poll()) always returns [Poll::Ready](core::task::Poll::Ready).","sig":null,"attributes":[{"value":"/ Creates a future that is immediately ready with an Option of a value.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":87930,"byte_end":88003,"line_start":89,"line_end":89,"column_start":1,"column_end":74}},{"value":"/ Specifically this means that [poll](core::future::Future::poll()) always returns [Poll::Ready](core::task::Poll::Ready).","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":88004,"byte_end":88128,"line_start":90,"line_end":90,"column_start":1,"column_end":125}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":88129,"byte_end":88132,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ # Caution","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":88133,"byte_end":88146,"line_start":92,"line_end":92,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":88147,"byte_end":88150,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ When consuming the future by this function, note the following:","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":88151,"byte_end":88218,"line_start":94,"line_end":94,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":88219,"byte_end":88222,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ - This function does not guarantee that the future will run to completion, so it is generally incompatible with passing the non-cancellation-safe future by value.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":88223,"byte_end":88389,"line_start":96,"line_end":96,"column_start":1,"column_end":167}},{"value":"/ - Even if the future is cancellation-safe, creating and dropping new futures frequently may lead to performance problems.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":88390,"byte_end":88515,"line_start":97,"line_end":97,"column_start":1,"column_end":126}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":88516,"byte_end":88519,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":88520,"byte_end":88534,"line_start":99,"line_end":99,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":88535,"byte_end":88538,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":88539,"byte_end":88546,"line_start":101,"line_end":101,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":88547,"byte_end":88588,"line_start":102,"line_end":102,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":88589,"byte_end":88613,"line_start":103,"line_end":103,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":88614,"byte_end":88617,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ let r = future::poll_immediate(async { 1_u32 });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":88618,"byte_end":88670,"line_start":105,"line_end":105,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(r.await, Some(1));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":88671,"byte_end":88704,"line_start":106,"line_end":106,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":88705,"byte_end":88708,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ let p = future::poll_immediate(future::pending::<i32>());","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":88709,"byte_end":88770,"line_start":108,"line_end":108,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(p.await, None);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":88771,"byte_end":88801,"line_start":109,"line_end":109,"column_start":1,"column_end":31}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":88802,"byte_end":88811,"line_start":110,"line_end":110,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":88812,"byte_end":88819,"line_start":111,"line_end":111,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":88820,"byte_end":88823,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ ### Reusing a future","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":88824,"byte_end":88848,"line_start":113,"line_end":113,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":88849,"byte_end":88852,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":88853,"byte_end":88860,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":88861,"byte_end":88902,"line_start":116,"line_end":116,"column_start":1,"column_end":42}},{"value":"/ use futures::{future, pin_mut};","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":88903,"byte_end":88938,"line_start":117,"line_end":117,"column_start":1,"column_end":36}},{"value":"/ let f = async {futures::pending!(); 42_u8};","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":88939,"byte_end":88986,"line_start":118,"line_end":118,"column_start":1,"column_end":48}},{"value":"/ pin_mut!(f);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":88987,"byte_end":89003,"line_start":119,"line_end":119,"column_start":1,"column_end":17}},{"value":"/ assert_eq!(None, future::poll_immediate(&mut f).await);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":89004,"byte_end":89063,"line_start":120,"line_end":120,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(42, f.await);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":89064,"byte_end":89092,"line_start":121,"line_end":121,"column_start":1,"column_end":29}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":89093,"byte_end":89102,"line_start":122,"line_end":122,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":89103,"byte_end":89110,"line_start":123,"line_end":123,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6431},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":89555,"byte_end":89560,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ready`](ready()) function.\n","sig":null,"attributes":[{"value":"/ Future for the [`ready`](ready()) function.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":89404,"byte_end":89451,"line_start":6,"line_end":6,"column_start":1,"column_end":48}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":89476,"byte_end":89543,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":899},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":89683,"byte_end":89693,"line_start":14,"line_end":14,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Ready<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the value from this immediately ready future.\n","sig":null,"attributes":[{"value":"/ Unwraps the value from this immediately ready future.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":89600,"byte_end":89657,"line_start":12,"line_end":12,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":89662,"byte_end":89671,"line_start":13,"line_end":13,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":909},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":90359,"byte_end":90364,"line_start":48,"line_end":48,"column_start":8,"column_end":13},"name":"ready","qualname":"::future::ready::ready","value":"pub fn ready<T>(T) -> Ready<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that is immediately ready with a value.","sig":null,"attributes":[{"value":"/ Creates a future that is immediately ready with a value.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":90113,"byte_end":90173,"line_start":36,"line_end":36,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":90174,"byte_end":90177,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":90178,"byte_end":90192,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":90193,"byte_end":90196,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":90197,"byte_end":90204,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":90205,"byte_end":90246,"line_start":41,"line_end":41,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":90247,"byte_end":90271,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":90272,"byte_end":90275,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(1);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":90276,"byte_end":90305,"line_start":44,"line_end":44,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":90306,"byte_end":90333,"line_start":45,"line_end":45,"column_start":1,"column_end":28}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":90334,"byte_end":90343,"line_start":46,"line_end":46,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":90344,"byte_end":90351,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":911},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":90699,"byte_end":90701,"line_start":64,"line_end":64,"column_start":8,"column_end":10},"name":"ok","qualname":"::future::ready::ok","value":"pub fn ok<T, E>(T) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with a success value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with a success value.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":90433,"byte_end":90500,"line_start":52,"line_end":52,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":90501,"byte_end":90504,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":90505,"byte_end":90519,"line_start":54,"line_end":54,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":90520,"byte_end":90523,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":90524,"byte_end":90531,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":90532,"byte_end":90573,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":90574,"byte_end":90598,"line_start":58,"line_end":58,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":90599,"byte_end":90602,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ let a = future::ok::<i32, i32>(1);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":90603,"byte_end":90641,"line_start":60,"line_end":60,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(a.await, Ok(1));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":90642,"byte_end":90673,"line_start":61,"line_end":61,"column_start":1,"column_end":32}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":90674,"byte_end":90683,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":90684,"byte_end":90691,"line_start":63,"line_end":63,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":914},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":91032,"byte_end":91035,"line_start":80,"line_end":80,"column_start":8,"column_end":11},"name":"err","qualname":"::future::ready::err","value":"pub fn err<T, E>(E) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with an error value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with an error value.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":90765,"byte_end":90831,"line_start":68,"line_end":68,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":90832,"byte_end":90835,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":90836,"byte_end":90850,"line_start":70,"line_end":70,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":90851,"byte_end":90854,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":90855,"byte_end":90862,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":90863,"byte_end":90904,"line_start":73,"line_end":73,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":90905,"byte_end":90929,"line_start":74,"line_end":74,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":90930,"byte_end":90933,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ let a = future::err::<i32, i32>(1);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":90934,"byte_end":90973,"line_start":76,"line_end":76,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(a.await, Err(1));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":90974,"byte_end":91006,"line_start":77,"line_end":77,"column_start":1,"column_end":33}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":91007,"byte_end":91016,"line_start":78,"line_end":78,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":91017,"byte_end":91024,"line_start":79,"line_end":79,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6533},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":93321,"byte_end":93325,"line_start":78,"line_end":78,"column_start":6,"column_end":10},"name":"Join","qualname":"::future::join::Join","value":"Join {  }","parent":null,"children":[{"krate":0,"index":6536},{"krate":0,"index":6537}],"decl_id":null,"docs":" Future for the [`join`](join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6578},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":93391,"byte_end":93396,"line_start":81,"line_end":81,"column_start":6,"column_end":11},"name":"Join3","qualname":"::future::join::Join3","value":"Join3 {  }","parent":null,"children":[{"krate":0,"index":6582},{"krate":0,"index":6583},{"krate":0,"index":6584}],"decl_id":null,"docs":" Future for the [`join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6635},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":93468,"byte_end":93473,"line_start":84,"line_end":84,"column_start":6,"column_end":11},"name":"Join4","qualname":"::future::join::Join4","value":"Join4 {  }","parent":null,"children":[{"krate":0,"index":6640},{"krate":0,"index":6641},{"krate":0,"index":6642},{"krate":0,"index":6643}],"decl_id":null,"docs":" Future for the [`join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6704},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":93551,"byte_end":93556,"line_start":87,"line_end":87,"column_start":6,"column_end":11},"name":"Join5","qualname":"::future::join::Join5","value":"Join5 {  }","parent":null,"children":[{"krate":0,"index":6710},{"krate":0,"index":6711},{"krate":0,"index":6712},{"krate":0,"index":6713},{"krate":0,"index":6714}],"decl_id":null,"docs":" Future for the [`join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":965},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":94171,"byte_end":94175,"line_start":111,"line_end":111,"column_start":8,"column_end":12},"name":"join","qualname":"::future::join::join","value":"pub fn join<Fut1, Fut2>(Fut1, Fut2) -> Join<Fut1, Fut2> where Fut1: Future,\nFut2: Future","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":93594,"byte_end":93665,"line_start":90,"line_end":90,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":93666,"byte_end":93669,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":93670,"byte_end":93741,"line_start":92,"line_end":92,"column_start":1,"column_end":72}},{"value":"/ complete. The returned future will finish with a tuple of both results.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":93742,"byte_end":93817,"line_start":93,"line_end":93,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":93818,"byte_end":93821,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":93822,"byte_end":93891,"line_start":95,"line_end":95,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":93892,"byte_end":93918,"line_start":96,"line_end":96,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":93919,"byte_end":93922,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":93923,"byte_end":93937,"line_start":98,"line_end":98,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":93938,"byte_end":93941,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":93942,"byte_end":93949,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":93950,"byte_end":93991,"line_start":101,"line_end":101,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":93992,"byte_end":94016,"line_start":102,"line_end":102,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":94017,"byte_end":94020,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":94021,"byte_end":94045,"line_start":104,"line_end":104,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":94046,"byte_end":94070,"line_start":105,"line_end":105,"column_start":1,"column_end":25}},{"value":"/ let pair = future::join(a, b);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":94071,"byte_end":94105,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":94106,"byte_end":94109,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, (1, 2));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":94110,"byte_end":94145,"line_start":108,"line_end":108,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":94146,"byte_end":94155,"line_start":109,"line_end":109,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":94156,"byte_end":94163,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":968},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":94721,"byte_end":94726,"line_start":136,"line_end":136,"column_start":8,"column_end":13},"name":"join3","qualname":"::future::join::join3","value":"pub fn join3<Fut1, Fut2, Fut3>(Fut1, Fut2, Fut3) -> Join3<Fut1, Fut2, Fut3>\nwhere Fut1: Future, Fut2: Future, Fut3: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":94382,"byte_end":94434,"line_start":120,"line_end":120,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":94435,"byte_end":94438,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":94439,"byte_end":94453,"line_start":122,"line_end":122,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":94454,"byte_end":94457,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":94458,"byte_end":94465,"line_start":124,"line_end":124,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":94466,"byte_end":94507,"line_start":125,"line_end":125,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":94508,"byte_end":94532,"line_start":126,"line_end":126,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":94533,"byte_end":94536,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":94537,"byte_end":94561,"line_start":128,"line_end":128,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":94562,"byte_end":94586,"line_start":129,"line_end":129,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":94587,"byte_end":94611,"line_start":130,"line_end":130,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join3(a, b, c);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":94612,"byte_end":94651,"line_start":131,"line_end":131,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":94652,"byte_end":94655,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":94656,"byte_end":94695,"line_start":133,"line_end":133,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":94696,"byte_end":94705,"line_start":134,"line_end":134,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":94706,"byte_end":94713,"line_start":135,"line_end":135,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":972},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":95388,"byte_end":95393,"line_start":167,"line_end":167,"column_start":8,"column_end":13},"name":"join4","qualname":"::future::join::join4","value":"pub fn join4<Fut1, Fut2, Fut3, Fut4>(Fut1, Fut2, Fut3, Fut4)\n-> Join4<Fut1, Fut2, Fut3, Fut4> where Fut1: Future, Fut2: Future,\nFut3: Future, Fut4: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":95018,"byte_end":95070,"line_start":150,"line_end":150,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":95071,"byte_end":95074,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":95075,"byte_end":95089,"line_start":152,"line_end":152,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":95090,"byte_end":95093,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":95094,"byte_end":95101,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":95102,"byte_end":95143,"line_start":155,"line_end":155,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":95144,"byte_end":95168,"line_start":156,"line_end":156,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":95169,"byte_end":95172,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":95173,"byte_end":95197,"line_start":158,"line_end":158,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":95198,"byte_end":95222,"line_start":159,"line_end":159,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":95223,"byte_end":95247,"line_start":160,"line_end":160,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":95248,"byte_end":95272,"line_start":161,"line_end":161,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join4(a, b, c, d);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":95273,"byte_end":95315,"line_start":162,"line_end":162,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":95316,"byte_end":95319,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":95320,"byte_end":95362,"line_start":164,"line_end":164,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":95363,"byte_end":95372,"line_start":165,"line_end":165,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":95373,"byte_end":95380,"line_start":166,"line_end":166,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":977},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":96158,"byte_end":96163,"line_start":201,"line_end":201,"column_start":8,"column_end":13},"name":"join5","qualname":"::future::join::join5","value":"pub fn join5<Fut1, Fut2, Fut3, Fut4, Fut5>(Fut1, Fut2, Fut3, Fut4, Fut5)\n-> Join5<Fut1, Fut2, Fut3, Fut4, Fut5> where Fut1: Future, Fut2: Future,\nFut3: Future, Fut4: Future, Fut5: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":95757,"byte_end":95809,"line_start":183,"line_end":183,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":95810,"byte_end":95813,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":95814,"byte_end":95828,"line_start":185,"line_end":185,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":95829,"byte_end":95832,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":95833,"byte_end":95840,"line_start":187,"line_end":187,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":95841,"byte_end":95882,"line_start":188,"line_end":188,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":95883,"byte_end":95907,"line_start":189,"line_end":189,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":95908,"byte_end":95911,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":95912,"byte_end":95936,"line_start":191,"line_end":191,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":95937,"byte_end":95961,"line_start":192,"line_end":192,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":95962,"byte_end":95986,"line_start":193,"line_end":193,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":95987,"byte_end":96011,"line_start":194,"line_end":194,"column_start":1,"column_end":25}},{"value":"/ let e = async { 5 };","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":96012,"byte_end":96036,"line_start":195,"line_end":195,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join5(a, b, c, d, e);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":96037,"byte_end":96082,"line_start":196,"line_end":196,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":96083,"byte_end":96086,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4, 5));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":96087,"byte_end":96132,"line_start":198,"line_end":198,"column_start":1,"column_end":46}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":96133,"byte_end":96142,"line_start":199,"line_end":199,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":96143,"byte_end":96150,"line_start":200,"line_end":200,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6785},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":96914,"byte_end":96920,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"Select","qualname":"::future::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":6788}],"decl_id":null,"docs":" Future for the [`select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select()`] function.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":96776,"byte_end":96817,"line_start":7,"line_end":7,"column_start":1,"column_end":42}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":96818,"byte_end":96885,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1039},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":99184,"byte_end":99190,"line_start":84,"line_end":84,"column_start":8,"column_end":14},"name":"select","qualname":"::future::select::select","value":"pub fn select<A, B>(A, B) -> Select<A, B> where A: Future + Unpin, B: Future +\nUnpin","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":97011,"byte_end":97081,"line_start":16,"line_end":16,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":97082,"byte_end":97085,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":97086,"byte_end":97164,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":97165,"byte_end":97241,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":97242,"byte_end":97314,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":97315,"byte_end":97318,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":97319,"byte_end":97391,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":97392,"byte_end":97420,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":97421,"byte_end":97424,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":97425,"byte_end":97492,"line_start":25,"line_end":25,"column_start":1,"column_end":68}},{"value":"/ output type you can use the `Either::factor_first` method to","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":97493,"byte_end":97557,"line_start":26,"line_end":26,"column_start":1,"column_end":65}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":97558,"byte_end":97608,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":97609,"byte_end":97612,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":97613,"byte_end":97627,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":97628,"byte_end":97631,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ A simple example","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":97632,"byte_end":97652,"line_start":31,"line_end":31,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":97653,"byte_end":97656,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":97657,"byte_end":97664,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":97665,"byte_end":97706,"line_start":34,"line_end":34,"column_start":1,"column_end":42}},{"value":"/ use futures::{","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":97707,"byte_end":97725,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"/     pin_mut,","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":97726,"byte_end":97742,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"/     future::Either,","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":97743,"byte_end":97766,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/     future::self,","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":97767,"byte_end":97788,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/ };","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":97789,"byte_end":97795,"line_start":39,"line_end":39,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":97796,"byte_end":97799,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ // These two futures have different types even though their outputs have the same type.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":97800,"byte_end":97891,"line_start":41,"line_end":41,"column_start":1,"column_end":92}},{"value":"/ let future1 = async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":97892,"byte_end":97917,"line_start":42,"line_end":42,"column_start":1,"column_end":26}},{"value":"/     future::pending::<()>().await; // will never finish","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":97918,"byte_end":97977,"line_start":43,"line_end":43,"column_start":1,"column_end":60}},{"value":"/     1","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":97978,"byte_end":97987,"line_start":44,"line_end":44,"column_start":1,"column_end":10}},{"value":"/ };","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":97988,"byte_end":97994,"line_start":45,"line_end":45,"column_start":1,"column_end":7}},{"value":"/ let future2 = async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":97995,"byte_end":98020,"line_start":46,"line_end":46,"column_start":1,"column_end":26}},{"value":"/     future::ready(2).await","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":98021,"byte_end":98051,"line_start":47,"line_end":47,"column_start":1,"column_end":31}},{"value":"/ };","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":98052,"byte_end":98058,"line_start":48,"line_end":48,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":98059,"byte_end":98062,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // 'select' requires Future + Unpin bounds","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":98063,"byte_end":98109,"line_start":50,"line_end":50,"column_start":1,"column_end":47}},{"value":"/ pin_mut!(future1);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":98110,"byte_end":98132,"line_start":51,"line_end":51,"column_start":1,"column_end":23}},{"value":"/ pin_mut!(future2);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":98133,"byte_end":98155,"line_start":52,"line_end":52,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":98156,"byte_end":98159,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ let value = match future::select(future1, future2).await {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":98160,"byte_end":98222,"line_start":54,"line_end":54,"column_start":1,"column_end":63}},{"value":"/     Either::Left((value1, _)) => value1,  // `value1` is resolved from `future1`","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":98223,"byte_end":98307,"line_start":55,"line_end":55,"column_start":1,"column_end":85}},{"value":"/                                           // `_` represents `future2`","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":98308,"byte_end":98381,"line_start":56,"line_end":56,"column_start":1,"column_end":74}},{"value":"/     Either::Right((value2, _)) => value2, // `value2` is resolved from `future2`","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":98382,"byte_end":98466,"line_start":57,"line_end":57,"column_start":1,"column_end":85}},{"value":"/                                           // `_` represents `future1`","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":98467,"byte_end":98540,"line_start":58,"line_end":58,"column_start":1,"column_end":74}},{"value":"/ };","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":98541,"byte_end":98547,"line_start":59,"line_end":59,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":98548,"byte_end":98551,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ assert!(value == 2);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":98552,"byte_end":98576,"line_start":61,"line_end":61,"column_start":1,"column_end":25}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":98577,"byte_end":98586,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":98587,"byte_end":98594,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":98595,"byte_end":98598,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ A more complex example","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":98599,"byte_end":98625,"line_start":65,"line_end":65,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":98626,"byte_end":98629,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":98630,"byte_end":98637,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt};","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":98638,"byte_end":98697,"line_start":68,"line_end":68,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":98698,"byte_end":98701,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's join implemented on top of select","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":98702,"byte_end":98755,"line_start":70,"line_end":70,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":98756,"byte_end":98759,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ fn join<A, B>(a: A, b: B) -> impl Future<Output=(A::Output, B::Output)>","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":98760,"byte_end":98835,"line_start":72,"line_end":72,"column_start":1,"column_end":76}},{"value":"/     where A: Future + Unpin,","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":98836,"byte_end":98868,"line_start":73,"line_end":73,"column_start":1,"column_end":33}},{"value":"/           B: Future + Unpin,","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":98869,"byte_end":98901,"line_start":74,"line_end":74,"column_start":1,"column_end":33}},{"value":"/ {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":98902,"byte_end":98907,"line_start":75,"line_end":75,"column_start":1,"column_end":6}},{"value":"/     future::select(a, b).then(|either| {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":98908,"byte_end":98952,"line_start":76,"line_end":76,"column_start":1,"column_end":45}},{"value":"/         match either {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":98953,"byte_end":98979,"line_start":77,"line_end":77,"column_start":1,"column_end":27}},{"value":"/             Either::Left((x, b)) => b.map(move |y| (x, y)).left_future(),","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":98980,"byte_end":99057,"line_start":78,"line_end":78,"column_start":1,"column_end":78}},{"value":"/             Either::Right((y, a)) => a.map(move |x| (x, y)).right_future(),","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":99058,"byte_end":99137,"line_start":79,"line_end":79,"column_start":1,"column_end":80}},{"value":"/         }","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":99138,"byte_end":99151,"line_start":80,"line_end":80,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":99152,"byte_end":99162,"line_start":81,"line_end":81,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":99163,"byte_end":99168,"line_start":82,"line_end":82,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":99169,"byte_end":99176,"line_start":83,"line_end":83,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6863},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":103169,"byte_end":103176,"line_start":94,"line_end":94,"column_start":6,"column_end":13},"name":"TryJoin","qualname":"::future::try_join::TryJoin","value":"TryJoin {  }","parent":null,"children":[{"krate":0,"index":6866},{"krate":0,"index":6867}],"decl_id":null,"docs":" Future for the [`try_join`](try_join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6908},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":103246,"byte_end":103254,"line_start":97,"line_end":97,"column_start":6,"column_end":14},"name":"TryJoin3","qualname":"::future::try_join::TryJoin3","value":"TryJoin3 {  }","parent":null,"children":[{"krate":0,"index":6912},{"krate":0,"index":6913},{"krate":0,"index":6914}],"decl_id":null,"docs":" Future for the [`try_join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6965},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":103330,"byte_end":103338,"line_start":100,"line_end":100,"column_start":6,"column_end":14},"name":"TryJoin4","qualname":"::future::try_join::TryJoin4","value":"TryJoin4 {  }","parent":null,"children":[{"krate":0,"index":6970},{"krate":0,"index":6971},{"krate":0,"index":6972},{"krate":0,"index":6973}],"decl_id":null,"docs":" Future for the [`try_join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7034},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":103420,"byte_end":103428,"line_start":103,"line_end":103,"column_start":6,"column_end":14},"name":"TryJoin5","qualname":"::future::try_join::TryJoin5","value":"TryJoin5 {  }","parent":null,"children":[{"krate":0,"index":7040},{"krate":0,"index":7041},{"krate":0,"index":7042},{"krate":0,"index":7043},{"krate":0,"index":7044}],"decl_id":null,"docs":" Future for the [`try_join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1093},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":104701,"byte_end":104709,"line_start":148,"line_end":148,"column_start":8,"column_end":16},"name":"try_join","qualname":"::future::try_join::try_join","value":"pub fn try_join<Fut1, Fut2>(Fut1, Fut2) -> TryJoin<Fut1, Fut2> where\nFut1: TryFuture, Fut2: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete or\n for one to produce an error.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete or","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":103466,"byte_end":103539,"line_start":106,"line_end":106,"column_start":1,"column_end":74}},{"value":"/ for one to produce an error.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":103540,"byte_end":103572,"line_start":107,"line_end":107,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":103573,"byte_end":103576,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":103577,"byte_end":103648,"line_start":109,"line_end":109,"column_start":1,"column_end":72}},{"value":"/ complete. If successful, the returned future will finish with a tuple of","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":103649,"byte_end":103725,"line_start":110,"line_end":110,"column_start":1,"column_end":77}},{"value":"/ both results. If unsuccessful, it will complete with the first error","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":103726,"byte_end":103798,"line_start":111,"line_end":111,"column_start":1,"column_end":73}},{"value":"/ encountered.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":103799,"byte_end":103815,"line_start":112,"line_end":112,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":103816,"byte_end":103819,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":103820,"byte_end":103889,"line_start":114,"line_end":114,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":103890,"byte_end":103916,"line_start":115,"line_end":115,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":103917,"byte_end":103920,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":103921,"byte_end":103935,"line_start":117,"line_end":117,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":103936,"byte_end":103939,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ When used on multiple futures that return [`Ok`], `try_join` will return","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":103940,"byte_end":104016,"line_start":119,"line_end":119,"column_start":1,"column_end":77}},{"value":"/ [`Ok`] of a tuple of the values:","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":104017,"byte_end":104053,"line_start":120,"line_end":120,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":104054,"byte_end":104057,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":104058,"byte_end":104065,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":104066,"byte_end":104107,"line_start":123,"line_end":123,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":104108,"byte_end":104132,"line_start":124,"line_end":124,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":104133,"byte_end":104136,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":104137,"byte_end":104182,"line_start":126,"line_end":126,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":104183,"byte_end":104228,"line_start":127,"line_end":127,"column_start":1,"column_end":46}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":104229,"byte_end":104267,"line_start":128,"line_end":128,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":104268,"byte_end":104271,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Ok((1, 2)));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":104272,"byte_end":104311,"line_start":130,"line_end":130,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":104312,"byte_end":104321,"line_start":131,"line_end":131,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":104322,"byte_end":104329,"line_start":132,"line_end":132,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":104330,"byte_end":104333,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ If one of the futures resolves to an error, `try_join` will return","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":104334,"byte_end":104404,"line_start":134,"line_end":134,"column_start":1,"column_end":71}},{"value":"/ that error:","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":104405,"byte_end":104420,"line_start":135,"line_end":135,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":104421,"byte_end":104424,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":104425,"byte_end":104432,"line_start":137,"line_end":137,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":104433,"byte_end":104474,"line_start":138,"line_end":138,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":104475,"byte_end":104499,"line_start":139,"line_end":139,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":104500,"byte_end":104503,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":104504,"byte_end":104549,"line_start":141,"line_end":141,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Err::<i32, i32>(2));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":104550,"byte_end":104596,"line_start":142,"line_end":142,"column_start":1,"column_end":47}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":104597,"byte_end":104635,"line_start":143,"line_end":143,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":104636,"byte_end":104639,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Err(2));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":104640,"byte_end":104675,"line_start":145,"line_end":145,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":104676,"byte_end":104685,"line_start":146,"line_end":146,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":104686,"byte_end":104693,"line_start":147,"line_end":147,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1096},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":105365,"byte_end":105374,"line_start":172,"line_end":172,"column_start":8,"column_end":17},"name":"try_join3","qualname":"::future::try_join::try_join3","value":"pub fn try_join3<Fut1, Fut2, Fut3>(Fut1, Fut2, Fut3)\n-> TryJoin3<Fut1, Fut2, Fut3> where Fut1: TryFuture, Fut2: TryFuture<Error =\nFut1::Error>, Fut3: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":104947,"byte_end":105007,"line_start":156,"line_end":156,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":105008,"byte_end":105011,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":105012,"byte_end":105026,"line_start":158,"line_end":158,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":105027,"byte_end":105030,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":105031,"byte_end":105038,"line_start":160,"line_end":160,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":105039,"byte_end":105080,"line_start":161,"line_end":161,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":105081,"byte_end":105105,"line_start":162,"line_end":162,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":105106,"byte_end":105109,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":105110,"byte_end":105155,"line_start":164,"line_end":164,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":105156,"byte_end":105201,"line_start":165,"line_end":165,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":105202,"byte_end":105247,"line_start":166,"line_end":166,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join3(a, b, c);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":105248,"byte_end":105291,"line_start":167,"line_end":167,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":105292,"byte_end":105295,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3)));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":105296,"byte_end":105339,"line_start":169,"line_end":169,"column_start":1,"column_end":44}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":105340,"byte_end":105349,"line_start":170,"line_end":170,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":105350,"byte_end":105357,"line_start":171,"line_end":171,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1100},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":106202,"byte_end":106211,"line_start":204,"line_end":204,"column_start":8,"column_end":17},"name":"try_join4","qualname":"::future::try_join::try_join4","value":"pub fn try_join4<Fut1, Fut2, Fut3, Fut4>(Fut1, Fut2, Fut3, Fut4)\n-> TryJoin4<Fut1, Fut2, Fut3, Fut4> where Fut1: TryFuture,\nFut2: TryFuture<Error = Fut1::Error>, Fut3: TryFuture<Error = Fut1::Error>,\nFut4: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":105732,"byte_end":105792,"line_start":187,"line_end":187,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":105793,"byte_end":105796,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":105797,"byte_end":105811,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":105812,"byte_end":105815,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":105816,"byte_end":105823,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":105824,"byte_end":105865,"line_start":192,"line_end":192,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":105866,"byte_end":105890,"line_start":193,"line_end":193,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":105891,"byte_end":105894,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":105895,"byte_end":105940,"line_start":195,"line_end":195,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":105941,"byte_end":105986,"line_start":196,"line_end":196,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":105987,"byte_end":106032,"line_start":197,"line_end":197,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":106033,"byte_end":106078,"line_start":198,"line_end":198,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join4(a, b, c, d);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":106079,"byte_end":106125,"line_start":199,"line_end":199,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":106126,"byte_end":106129,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4)));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":106130,"byte_end":106176,"line_start":201,"line_end":201,"column_start":1,"column_end":47}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":106177,"byte_end":106186,"line_start":202,"line_end":202,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":106187,"byte_end":106194,"line_start":203,"line_end":203,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1105},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":107183,"byte_end":107192,"line_start":239,"line_end":239,"column_start":8,"column_end":17},"name":"try_join5","qualname":"::future::try_join::try_join5","value":"pub fn try_join5<Fut1, Fut2, Fut3, Fut4, Fut5>(Fut1, Fut2, Fut3, Fut4, Fut5)\n-> TryJoin5<Fut1, Fut2, Fut3, Fut4, Fut5> where Fut1: TryFuture,\nFut2: TryFuture<Error = Fut1::Error>, Fut3: TryFuture<Error = Fut1::Error>,\nFut4: TryFuture<Error = Fut1::Error>, Fut5: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":106661,"byte_end":106721,"line_start":221,"line_end":221,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":106722,"byte_end":106725,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":106726,"byte_end":106740,"line_start":223,"line_end":223,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":106741,"byte_end":106744,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":106745,"byte_end":106752,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":106753,"byte_end":106794,"line_start":226,"line_end":226,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":106795,"byte_end":106819,"line_start":227,"line_end":227,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":106820,"byte_end":106823,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":106824,"byte_end":106869,"line_start":229,"line_end":229,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":106870,"byte_end":106915,"line_start":230,"line_end":230,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":106916,"byte_end":106961,"line_start":231,"line_end":231,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":106962,"byte_end":107007,"line_start":232,"line_end":232,"column_start":1,"column_end":46}},{"value":"/ let e = future::ready(Ok::<i32, i32>(5));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":107008,"byte_end":107053,"line_start":233,"line_end":233,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join5(a, b, c, d, e);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":107054,"byte_end":107103,"line_start":234,"line_end":234,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":107104,"byte_end":107107,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4, 5)));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":107108,"byte_end":107157,"line_start":236,"line_end":236,"column_start":1,"column_end":50}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":107158,"byte_end":107167,"line_start":237,"line_end":237,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":107168,"byte_end":107175,"line_start":238,"line_end":238,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7115},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":108028,"byte_end":108037,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"TrySelect","qualname":"::future::try_select::TrySelect","value":"TrySelect {  }","parent":null,"children":[{"krate":0,"index":7118}],"decl_id":null,"docs":" Future for the [`try_select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_select()`] function.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":107886,"byte_end":107931,"line_start":6,"line_end":6,"column_start":1,"column_end":46}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":107932,"byte_end":107999,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1164},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":109622,"byte_end":109632,"line_start":50,"line_end":50,"column_start":8,"column_end":18},"name":"try_select","qualname":"::future::try_select::try_select","value":"pub fn try_select<A, B>(A, B) -> TrySelect<A, B> where A: TryFuture + Unpin,\nB: TryFuture + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":108131,"byte_end":108201,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":108202,"byte_end":108205,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":108206,"byte_end":108284,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":108285,"byte_end":108361,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":108362,"byte_end":108434,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":108435,"byte_end":108438,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":108439,"byte_end":108511,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":108512,"byte_end":108540,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":108541,"byte_end":108544,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":108545,"byte_end":108612,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ success/error type you can use the `Either::factor_first` method to","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":108613,"byte_end":108684,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":108685,"byte_end":108735,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":108736,"byte_end":108739,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":108740,"byte_end":108754,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":108755,"byte_end":108758,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":108759,"byte_end":108766,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt, TryFuture, TryFutureExt};","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":108767,"byte_end":108851,"line_start":31,"line_end":31,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":108852,"byte_end":108855,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's try_join implemented on top of select","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":108856,"byte_end":108913,"line_start":33,"line_end":33,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":108914,"byte_end":108917,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ fn try_join<A, B, E>(a: A, b: B) -> impl TryFuture<Ok=(A::Ok, B::Ok), Error=E>","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":108918,"byte_end":109000,"line_start":35,"line_end":35,"column_start":1,"column_end":83}},{"value":"/      where A: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":109001,"byte_end":109058,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/            B: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":109059,"byte_end":109116,"line_start":37,"line_end":37,"column_start":1,"column_end":58}},{"value":"/            E: 'static,","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":109117,"byte_end":109143,"line_start":38,"line_end":38,"column_start":1,"column_end":27}},{"value":"/ {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":109144,"byte_end":109149,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/     future::try_select(a, b).then(|res| -> Box<dyn Future<Output = Result<_, _>> + Unpin> {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":109150,"byte_end":109245,"line_start":40,"line_end":40,"column_start":1,"column_end":96}},{"value":"/         match res {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":109246,"byte_end":109269,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"/             Ok(Either::Left((x, b))) => Box::new(b.map_ok(move |y| (x, y))),","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":109270,"byte_end":109350,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/             Ok(Either::Right((y, a))) => Box::new(a.map_ok(move |x| (x, y))),","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":109351,"byte_end":109432,"line_start":43,"line_end":43,"column_start":1,"column_end":82}},{"value":"/             Err(Either::Left((e, _))) => Box::new(future::err(e)),","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":109433,"byte_end":109503,"line_start":44,"line_end":44,"column_start":1,"column_end":71}},{"value":"/             Err(Either::Right((e, _))) => Box::new(future::err(e)),","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":109504,"byte_end":109575,"line_start":45,"line_end":45,"column_start":1,"column_end":72}},{"value":"/         }","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":109576,"byte_end":109589,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":109590,"byte_end":109600,"line_start":47,"line_end":47,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":109601,"byte_end":109606,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":109607,"byte_end":109614,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7126},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":111666,"byte_end":111670,"line_start":30,"line_end":30,"column_start":5,"column_end":9},"name":"Left","qualname":"::future::either::Either::Left","value":"Either::Left(A)","parent":{"krate":0,"index":7123},"children":[],"decl_id":null,"docs":" First branch of the type\n","sig":null,"attributes":[{"value":"/ First branch of the type","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":111633,"byte_end":111661,"line_start":29,"line_end":29,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7129},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":111726,"byte_end":111731,"line_start":32,"line_end":32,"column_start":5,"column_end":10},"name":"Right","qualname":"::future::either::Either::Right","value":"Either::Right(B)","parent":{"krate":0,"index":7123},"children":[],"decl_id":null,"docs":" Second branch of the type\n","sig":null,"attributes":[{"value":"/ Second branch of the type","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":111692,"byte_end":111721,"line_start":31,"line_end":31,"column_start":5,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":7123},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":111614,"byte_end":111620,"line_start":28,"line_end":28,"column_start":10,"column_end":16},"name":"Either","qualname":"::future::either::Either","value":"pub enum Either<A, B> { Left(A), Right(B), }","parent":null,"children":[{"krate":0,"index":7126},{"krate":0,"index":7129}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single type.","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single type.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":111091,"byte_end":111197,"line_start":8,"line_end":8,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":111198,"byte_end":111201,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This is useful when conditionally choosing between two distinct future types:","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":111202,"byte_end":111283,"line_start":10,"line_end":10,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":111284,"byte_end":111287,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":111288,"byte_end":111299,"line_start":12,"line_end":12,"column_start":1,"column_end":12}},{"value":"/ use futures::future::Either;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":111300,"byte_end":111332,"line_start":13,"line_end":13,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":111333,"byte_end":111336,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":111337,"byte_end":111378,"line_start":15,"line_end":15,"column_start":1,"column_end":42}},{"value":"/ let cond = true;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":111379,"byte_end":111399,"line_start":16,"line_end":16,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":111400,"byte_end":111403,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ let fut = if cond {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":111404,"byte_end":111427,"line_start":18,"line_end":18,"column_start":1,"column_end":24}},{"value":"/     Either::Left(async move { 12 })","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":111428,"byte_end":111467,"line_start":19,"line_end":19,"column_start":1,"column_end":40}},{"value":"/ } else {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":111468,"byte_end":111480,"line_start":20,"line_end":20,"column_start":1,"column_end":13}},{"value":"/     Either::Right(async move { 44 })","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":111481,"byte_end":111521,"line_start":21,"line_end":21,"column_start":1,"column_end":41}},{"value":"/ };","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":111522,"byte_end":111528,"line_start":22,"line_end":22,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":111529,"byte_end":111532,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(fut.await, 12);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":111533,"byte_end":111563,"line_start":24,"line_end":24,"column_start":1,"column_end":31}},{"value":"/ # })","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":111564,"byte_end":111572,"line_start":25,"line_end":25,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":111573,"byte_end":111580,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1212},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":112285,"byte_end":112297,"line_start":50,"line_end":50,"column_start":12,"column_end":24},"name":"factor_first","qualname":"<Either<(T, A), (T, B)>>::factor_first","value":"pub fn factor_first(Self) -> (T, Either<A, B>)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":112137,"byte_end":112195,"line_start":47,"line_end":47,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":112200,"byte_end":112203,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the first element of the pairs.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":112208,"byte_end":112273,"line_start":49,"line_end":49,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1217},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":112677,"byte_end":112690,"line_start":62,"line_end":62,"column_start":12,"column_end":25},"name":"factor_second","qualname":"<Either<(A, T), (B, T)>>::factor_second","value":"pub fn factor_second(Self) -> (Either<A, B>, T)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":112528,"byte_end":112586,"line_start":59,"line_end":59,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":112591,"byte_end":112594,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the second element of the pairs.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":112599,"byte_end":112665,"line_start":61,"line_end":61,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1220},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":112978,"byte_end":112988,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Either<T, T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Extract the value of an either over two equivalent types.\n","sig":null,"attributes":[{"value":"/ Extract the value of an either over two equivalent types.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":112905,"byte_end":112966,"line_start":71,"line_end":71,"column_start":5,"column_end":66}}]},{"kind":"Mod","id":{"krate":0,"index":1259},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","parent":null,"children":[{"krate":0,"index":1260},{"krate":0,"index":1261},{"krate":0,"index":1264},{"krate":0,"index":1267},{"krate":0,"index":1270},{"krate":0,"index":2878},{"krate":0,"index":2879},{"krate":0,"index":2882},{"krate":0,"index":2885},{"krate":0,"index":2888},{"krate":0,"index":2891},{"krate":0,"index":2894},{"krate":0,"index":2897},{"krate":0,"index":2900},{"krate":0,"index":2903},{"krate":0,"index":2906},{"krate":0,"index":2909},{"krate":0,"index":2912},{"krate":0,"index":2915},{"krate":0,"index":2918},{"krate":0,"index":2921},{"krate":0,"index":2924},{"krate":0,"index":2927},{"krate":0,"index":2930},{"krate":0,"index":2933},{"krate":0,"index":2936},{"krate":0,"index":2939},{"krate":0,"index":2942},{"krate":0,"index":2945},{"krate":0,"index":2948},{"krate":0,"index":2951},{"krate":0,"index":2954},{"krate":0,"index":2957},{"krate":0,"index":2960},{"krate":0,"index":2963},{"krate":0,"index":2966},{"krate":0,"index":2969},{"krate":0,"index":2972},{"krate":0,"index":2975},{"krate":0,"index":3807},{"krate":0,"index":3808},{"krate":0,"index":3811},{"krate":0,"index":3814},{"krate":0,"index":3817},{"krate":0,"index":3820},{"krate":0,"index":3823},{"krate":0,"index":3826},{"krate":0,"index":3829},{"krate":0,"index":3832},{"krate":0,"index":3835},{"krate":0,"index":3838},{"krate":0,"index":3841},{"krate":0,"index":3844},{"krate":0,"index":3847},{"krate":0,"index":3850},{"krate":0,"index":3853},{"krate":0,"index":3856},{"krate":0,"index":3859},{"krate":0,"index":3862},{"krate":0,"index":3865},{"krate":0,"index":3868},{"krate":0,"index":3871},{"krate":0,"index":3897},{"krate":0,"index":3898},{"krate":0,"index":3901},{"krate":0,"index":3904},{"krate":0,"index":3937},{"krate":0,"index":3938},{"krate":0,"index":3941},{"krate":0,"index":3944},{"krate":0,"index":3981},{"krate":0,"index":3982},{"krate":0,"index":3985},{"krate":0,"index":3988},{"krate":0,"index":4027},{"krate":0,"index":4028},{"krate":0,"index":4031},{"krate":0,"index":4034},{"krate":0,"index":4077},{"krate":0,"index":4078},{"krate":0,"index":4081},{"krate":0,"index":4084},{"krate":0,"index":4123},{"krate":0,"index":4124},{"krate":0,"index":4127},{"krate":0,"index":4130},{"krate":0,"index":4166},{"krate":0,"index":4167},{"krate":0,"index":4170},{"krate":0,"index":4173},{"krate":0,"index":4201},{"krate":0,"index":4202},{"krate":0,"index":4205},{"krate":0,"index":4208},{"krate":0,"index":4262},{"krate":0,"index":4263},{"krate":0,"index":4266},{"krate":0,"index":4269},{"krate":0,"index":4344},{"krate":0,"index":4345},{"krate":0,"index":4348},{"krate":0,"index":4351},{"krate":0,"index":4354},{"krate":0,"index":4413},{"krate":0,"index":4414},{"krate":0,"index":4417},{"krate":0,"index":4420}],"decl_id":null,"docs":" Asynchronous streams.","sig":null,"attributes":[{"value":"/ Asynchronous streams.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":119107,"byte_end":119132,"line_start":1,"line_end":1,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":119133,"byte_end":119136,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":119137,"byte_end":119162,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":119163,"byte_end":119166,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - The [`Stream`] trait, for objects that can asynchronously produce a","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":119167,"byte_end":119240,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/   sequence of values.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":119241,"byte_end":119266,"line_start":6,"line_end":6,"column_start":1,"column_end":26}},{"value":"/ - The [`StreamExt`] and [`TryStreamExt`] trait, which provides adapters for","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":119267,"byte_end":119346,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/   chaining and composing streams.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":119347,"byte_end":119384,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/ - Top-level stream constructors like [`iter`](iter()) which creates a","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":119385,"byte_end":119458,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/   stream from an iterator.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":119459,"byte_end":119489,"line_start":10,"line_end":10,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7140},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/chain.rs","byte_start":176960,"byte_end":176965,"line_start":11,"line_end":11,"column_start":16,"column_end":21},"name":"Chain","qualname":"::stream::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":7143},{"krate":0,"index":7144}],"decl_id":null,"docs":" Stream for the [`chain`](super::StreamExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7189},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/collect.rs","byte_start":179090,"byte_end":179097,"line_start":13,"line_end":13,"column_start":16,"column_end":23},"name":"Collect","qualname":"::stream::stream::collect::Collect","value":"Collect {  }","parent":null,"children":[{"krate":0,"index":7192},{"krate":0,"index":7193}],"decl_id":null,"docs":" Future for the [`collect`](super::StreamExt::collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7238},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/unzip.rs","byte_start":180531,"byte_end":180536,"line_start":13,"line_end":13,"column_start":16,"column_end":21},"name":"Unzip","qualname":"::stream::stream::unzip::Unzip","value":"Unzip {  }","parent":null,"children":[{"krate":0,"index":7242},{"krate":0,"index":7243},{"krate":0,"index":7244}],"decl_id":null,"docs":" Future for the [`unzip`](super::StreamExt::unzip) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7300},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/concat.rs","byte_start":182370,"byte_end":182376,"line_start":12,"line_end":12,"column_start":16,"column_end":22},"name":"Concat","qualname":"::stream::stream::concat::Concat","value":"Concat {  }","parent":null,"children":[{"krate":0,"index":7302},{"krate":0,"index":7303}],"decl_id":null,"docs":" Future for the [`concat`](super::StreamExt::concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7340},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/count.rs","byte_start":184048,"byte_end":184053,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Count","qualname":"::stream::stream::count::Count","value":"Count {  }","parent":null,"children":[{"krate":0,"index":7342},{"krate":0,"index":7343}],"decl_id":null,"docs":" Future for the [`count`](super::StreamExt::count) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7377},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/cycle.rs","byte_start":185363,"byte_end":185368,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Cycle","qualname":"::stream::stream::cycle::Cycle","value":"Cycle {  }","parent":null,"children":[{"krate":0,"index":7379},{"krate":0,"index":7380}],"decl_id":null,"docs":" Stream for the [`cycle`](super::StreamExt::cycle) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7417},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/enumerate.rs","byte_start":187015,"byte_end":187024,"line_start":13,"line_end":13,"column_start":16,"column_end":25},"name":"Enumerate","qualname":"::stream::stream::enumerate::Enumerate","value":"Enumerate {  }","parent":null,"children":[{"krate":0,"index":7419},{"krate":0,"index":7420}],"decl_id":null,"docs":" Stream for the [`enumerate`](super::StreamExt::enumerate) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7461},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter.rs","byte_start":188656,"byte_end":188662,"line_start":15,"line_end":15,"column_start":16,"column_end":22},"name":"Filter","qualname":"::stream::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":7465},{"krate":0,"index":7466},{"krate":0,"index":7467},{"krate":0,"index":7468}],"decl_id":null,"docs":" Stream for the [`filter`](super::StreamExt::filter) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7526},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter_map.rs","byte_start":192056,"byte_end":192065,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"FilterMap","qualname":"::stream::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":7530},{"krate":0,"index":7531},{"krate":0,"index":7532}],"decl_id":null,"docs":" Stream for the [`filter_map`](super::StreamExt::filter_map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7587},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/flatten.rs","byte_start":195071,"byte_end":195078,"line_start":13,"line_end":13,"column_start":16,"column_end":23},"name":"Flatten","qualname":"::stream::stream::flatten::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":7590},{"krate":0,"index":7591}],"decl_id":null,"docs":" Stream for the [`flatten`](super::StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7642},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":125013,"byte_end":125020,"line_start":67,"line_end":67,"column_start":5,"column_end":12},"name":"Flatten","qualname":"::stream::stream::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":7644}],"decl_id":null,"docs":" Stream for the [`flatten`](StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7695},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fold.rs","byte_start":196895,"byte_end":196899,"line_start":12,"line_end":12,"column_start":16,"column_end":20},"name":"Fold","qualname":"::stream::stream::fold::Fold","value":"Fold {  }","parent":null,"children":[{"krate":0,"index":7700},{"krate":0,"index":7701},{"krate":0,"index":7702},{"krate":0,"index":7703}],"decl_id":null,"docs":" Future for the [`fold`](super::StreamExt::fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7764},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/any.rs","byte_start":199356,"byte_end":199359,"line_start":12,"line_end":12,"column_start":16,"column_end":19},"name":"Any","qualname":"::stream::stream::any::Any","value":"Any {  }","parent":null,"children":[{"krate":0,"index":7768},{"krate":0,"index":7769},{"krate":0,"index":7770},{"krate":0,"index":7771}],"decl_id":null,"docs":" Future for the [`any`](super::StreamExt::any) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7825},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/all.rs","byte_start":201932,"byte_end":201935,"line_start":12,"line_end":12,"column_start":16,"column_end":19},"name":"All","qualname":"::stream::stream::all::All","value":"All {  }","parent":null,"children":[{"krate":0,"index":7829},{"krate":0,"index":7830},{"krate":0,"index":7831},{"krate":0,"index":7832}],"decl_id":null,"docs":" Future for the [`all`](super::StreamExt::all) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7886},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/for_each.rs","byte_start":204534,"byte_end":204541,"line_start":12,"line_end":12,"column_start":16,"column_end":23},"name":"ForEach","qualname":"::stream::stream::for_each::ForEach","value":"ForEach {  }","parent":null,"children":[{"krate":0,"index":7890},{"krate":0,"index":7891},{"krate":0,"index":7892}],"decl_id":null,"docs":" Future for the [`for_each`](super::StreamExt::for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7943},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fuse.rs","byte_start":206498,"byte_end":206502,"line_start":13,"line_end":13,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::stream::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":7945},{"krate":0,"index":7946}],"decl_id":null,"docs":" Stream for the [`fuse`](super::StreamExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2038},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fuse.rs","byte_start":206954,"byte_end":206961,"line_start":30,"line_end":30,"column_start":12,"column_end":19},"name":"is_done","qualname":"<Fuse<St>>::is_done","value":"pub fn is_done(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the underlying stream has finished or not.","sig":null,"attributes":[{"value":"/ Returns whether the underlying stream has finished or not.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fuse.rs","byte_start":206685,"byte_end":206747,"line_start":25,"line_end":25,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fuse.rs","byte_start":206752,"byte_end":206755,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ If this method returns `true`, then all future calls to poll are","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fuse.rs","byte_start":206760,"byte_end":206828,"line_start":27,"line_end":27,"column_start":5,"column_end":73}},{"value":"/ guaranteed to return `None`. If this returns `false`, then the","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fuse.rs","byte_start":206833,"byte_end":206899,"line_start":28,"line_end":28,"column_start":5,"column_end":71}},{"value":"/ underlying stream is still in use.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fuse.rs","byte_start":206904,"byte_end":206942,"line_start":29,"line_end":29,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":7987},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":208320,"byte_end":208332,"line_start":11,"line_end":11,"column_start":12,"column_end":24},"name":"StreamFuture","qualname":"::stream::stream::into_future::StreamFuture","value":"StreamFuture {  }","parent":null,"children":[{"krate":0,"index":7989}],"decl_id":null,"docs":" Future for the [`into_future`](super::StreamExt::into_future) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`into_future`](super::StreamExt::into_future) method.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":208150,"byte_end":208223,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":208241,"byte_end":208308,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2080},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":208895,"byte_end":208902,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<StreamFuture<St>>::get_ref","value":"pub fn get_ref(&Self) -> Option<&St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":208503,"byte_end":208576,"line_start":20,"line_end":20,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":208581,"byte_end":208598,"line_start":21,"line_end":21,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":208603,"byte_end":208606,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":208611,"byte_end":208692,"line_start":23,"line_end":23,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":208697,"byte_end":208779,"line_start":24,"line_end":24,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":208784,"byte_end":208863,"line_start":25,"line_end":25,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":208868,"byte_end":208883,"line_start":26,"line_end":26,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2081},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":209513,"byte_end":209520,"line_start":41,"line_end":41,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<StreamFuture<St>>::get_mut","value":"pub fn get_mut(&mut Self) -> Option<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":208967,"byte_end":209034,"line_start":31,"line_end":31,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":209039,"byte_end":209070,"line_start":32,"line_end":32,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":209075,"byte_end":209078,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":209083,"byte_end":209156,"line_start":34,"line_end":34,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":209161,"byte_end":209216,"line_start":35,"line_end":35,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":209221,"byte_end":209224,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":209229,"byte_end":209310,"line_start":37,"line_end":37,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":209315,"byte_end":209397,"line_start":38,"line_end":38,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":209402,"byte_end":209481,"line_start":39,"line_end":39,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":209486,"byte_end":209501,"line_start":40,"line_end":40,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2082},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":210146,"byte_end":210157,"line_start":55,"line_end":55,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<StreamFuture<St>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Option<Pin<&mut St>>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":209593,"byte_end":209667,"line_start":45,"line_end":45,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":209672,"byte_end":209703,"line_start":46,"line_end":46,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":209708,"byte_end":209711,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":209716,"byte_end":209789,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":209794,"byte_end":209849,"line_start":49,"line_end":49,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":209854,"byte_end":209857,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":209862,"byte_end":209943,"line_start":51,"line_end":51,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":209948,"byte_end":210030,"line_start":52,"line_end":52,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":210035,"byte_end":210114,"line_start":53,"line_end":53,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":210119,"byte_end":210134,"line_start":54,"line_end":54,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2083},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":210790,"byte_end":210800,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<StreamFuture<St>>::into_inner","value":"pub fn into_inner(Self) -> Option<St>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":210270,"byte_end":210332,"line_start":59,"line_end":59,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":210337,"byte_end":210340,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":210345,"byte_end":210417,"line_start":61,"line_end":61,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":210422,"byte_end":210493,"line_start":62,"line_end":62,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":210498,"byte_end":210501,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":210506,"byte_end":210587,"line_start":64,"line_end":64,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":210592,"byte_end":210674,"line_start":65,"line_end":65,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":210679,"byte_end":210758,"line_start":66,"line_end":66,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":210763,"byte_end":210778,"line_start":67,"line_end":67,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7996},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":126360,"byte_end":126367,"line_start":112,"line_end":112,"column_start":5,"column_end":12},"name":"Inspect","qualname":"::stream::stream::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":7999}],"decl_id":null,"docs":" Stream for the [`inspect`](StreamExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8062},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/map.rs","byte_start":211824,"byte_end":211827,"line_start":15,"line_end":15,"column_start":16,"column_end":19},"name":"Map","qualname":"::stream::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":8065},{"krate":0,"index":8066}],"decl_id":null,"docs":" Stream for the [`map`](super::StreamExt::map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8115},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":126728,"byte_end":126735,"line_start":123,"line_end":123,"column_start":5,"column_end":12},"name":"FlatMap","qualname":"::stream::stream::FlatMap","value":"FlatMap {  }","parent":null,"children":[{"krate":0,"index":8119}],"decl_id":null,"docs":" Stream for the [`flat_map`](StreamExt::flat_map) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8194},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/next.rs","byte_start":213487,"byte_end":213491,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Next","qualname":"::stream::stream::next::Next","value":"Next {  }","parent":null,"children":[{"krate":0,"index":8197}],"decl_id":null,"docs":" Future for the [`next`](super::StreamExt::next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`next`](super::StreamExt::next) method.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/next.rs","byte_start":213331,"byte_end":213390,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/next.rs","byte_start":213408,"byte_end":213475,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":8202},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/select_next_some.rs","byte_start":214499,"byte_end":214513,"line_start":12,"line_end":12,"column_start":12,"column_end":26},"name":"SelectNextSome","qualname":"::stream::stream::select_next_some::SelectNextSome","value":"SelectNextSome {  }","parent":null,"children":[{"krate":0,"index":8205}],"decl_id":null,"docs":" Future for the [`select_next_some`](super::StreamExt::select_next_some)\n method.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_next_some`](super::StreamExt::select_next_some)","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/select_next_some.rs","byte_start":214315,"byte_end":214390,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ method.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/select_next_some.rs","byte_start":214391,"byte_end":214402,"line_start":9,"line_end":9,"column_start":1,"column_end":12}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/select_next_some.rs","byte_start":214420,"byte_end":214487,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":8210},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":216104,"byte_end":216112,"line_start":22,"line_end":22,"column_start":16,"column_end":24},"name":"Peekable","qualname":"::stream::stream::peek::Peekable","value":"Peekable {  }","parent":null,"children":[{"krate":0,"index":8212},{"krate":0,"index":8213}],"decl_id":null,"docs":" A `Stream` that implements a `peek` method.","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2281},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":216545,"byte_end":216549,"line_start":38,"line_end":38,"column_start":12,"column_end":16},"name":"peek","qualname":"<Peekable<St>>::peek","value":"pub fn peek(Pin<&mut Self>) -> Peek<, St>","parent":null,"children":[],"decl_id":null,"docs":" Produces a future which retrieves a reference to the next item\n in the stream, or `None` if the underlying stream terminates.\n","sig":null,"attributes":[{"value":"/ Produces a future which retrieves a reference to the next item","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":216397,"byte_end":216463,"line_start":36,"line_end":36,"column_start":5,"column_end":71}},{"value":"/ in the stream, or `None` if the underlying stream terminates.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":216468,"byte_end":216533,"line_start":37,"line_end":37,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2282},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":216874,"byte_end":216883,"line_start":46,"line_end":46,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<Peekable<St>>::poll_peek","value":"pub fn poll_peek(Pin<&mut Self>, &mut Context) -> Poll<Option<&St::Item>>","parent":null,"children":[],"decl_id":null,"docs":" Peek retrieves a reference to the next item in the stream.","sig":null,"attributes":[{"value":"/ Peek retrieves a reference to the next item in the stream.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":216636,"byte_end":216698,"line_start":42,"line_end":42,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":216703,"byte_end":216706,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This method polls the underlying stream and return either a reference","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":216711,"byte_end":216784,"line_start":44,"line_end":44,"column_start":5,"column_end":78}},{"value":"/ to the next item if the stream is ready or passes through any errors.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":216789,"byte_end":216862,"line_start":45,"line_end":45,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":2283},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":218198,"byte_end":218206,"line_start":86,"line_end":86,"column_start":12,"column_end":20},"name":"peek_mut","qualname":"<Peekable<St>>::peek_mut","value":"pub fn peek_mut(Pin<&mut Self>) -> PeekMut<, St>","parent":null,"children":[],"decl_id":null,"docs":" Produces a future which retrieves a mutable reference to the next item\n in the stream, or `None` if the underlying stream terminates.","sig":null,"attributes":[{"value":"/ Produces a future which retrieves a mutable reference to the next item","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":217319,"byte_end":217393,"line_start":60,"line_end":60,"column_start":5,"column_end":79}},{"value":"/ in the stream, or `None` if the underlying stream terminates.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":217398,"byte_end":217463,"line_start":61,"line_end":61,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":217468,"byte_end":217471,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":217476,"byte_end":217490,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":217495,"byte_end":217498,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":217503,"byte_end":217510,"line_start":65,"line_end":65,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":217515,"byte_end":217556,"line_start":66,"line_end":66,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":217561,"byte_end":217604,"line_start":67,"line_end":67,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":217609,"byte_end":217634,"line_start":68,"line_end":68,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":217639,"byte_end":217642,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![1, 2, 3]).peekable();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":217647,"byte_end":217703,"line_start":70,"line_end":70,"column_start":5,"column_end":61}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":217708,"byte_end":217729,"line_start":71,"line_end":71,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":217734,"byte_end":217737,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.as_mut().peek_mut().await, Some(&mut 1));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":217742,"byte_end":217805,"line_start":73,"line_end":73,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(stream.as_mut().next().await, Some(1));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":217810,"byte_end":217864,"line_start":74,"line_end":74,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":217869,"byte_end":217872,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ // Peek into the stream and modify the value which will be returned next","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":217877,"byte_end":217953,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ if let Some(p) = stream.as_mut().peek_mut().await {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":217958,"byte_end":218013,"line_start":77,"line_end":77,"column_start":5,"column_end":60}},{"value":"/     if *p == 2 {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":218018,"byte_end":218038,"line_start":78,"line_end":78,"column_start":5,"column_end":25}},{"value":"/         *p = 5;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":218043,"byte_end":218062,"line_start":79,"line_end":79,"column_start":5,"column_end":24}},{"value":"/     }","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":218067,"byte_end":218076,"line_start":80,"line_end":80,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":218081,"byte_end":218086,"line_start":81,"line_end":81,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":218091,"byte_end":218094,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.collect::<Vec<_>>().await, vec![5, 3]);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":218099,"byte_end":218160,"line_start":83,"line_end":83,"column_start":5,"column_end":66}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":218165,"byte_end":218174,"line_start":84,"line_end":84,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":218179,"byte_end":218186,"line_start":85,"line_end":85,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2284},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":218381,"byte_end":218394,"line_start":91,"line_end":91,"column_start":12,"column_end":25},"name":"poll_peek_mut","qualname":"<Peekable<St>>::poll_peek_mut","value":"pub fn poll_peek_mut(Pin<&mut Self>, &mut Context)\n-> Poll<Option<&mut St::Item>>","parent":null,"children":[],"decl_id":null,"docs":" Peek retrieves a mutable reference to the next item in the stream.\n","sig":null,"attributes":[{"value":"/ Peek retrieves a mutable reference to the next item in the stream.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":218299,"byte_end":218369,"line_start":90,"line_end":90,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2285},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":220385,"byte_end":220392,"line_start":149,"line_end":149,"column_start":12,"column_end":19},"name":"next_if","qualname":"<Peekable<St>>::next_if","value":"pub fn next_if<F>(Pin<&mut Self>, F) -> NextIf<, St, F> where\nF: FnOnce(&St::Item) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which will consume and return the next value of this\n stream if a condition is true.","sig":null,"attributes":[{"value":"/ Creates a future which will consume and return the next value of this","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":218857,"byte_end":218930,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/ stream if a condition is true.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":218935,"byte_end":218969,"line_start":109,"line_end":109,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":218974,"byte_end":218977,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ If `func` returns `true` for the next value of this stream, consume and","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":218982,"byte_end":219057,"line_start":111,"line_end":111,"column_start":5,"column_end":80}},{"value":"/ return it. Otherwise, return `None`.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":219062,"byte_end":219102,"line_start":112,"line_end":112,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":219107,"byte_end":219110,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":219115,"byte_end":219129,"line_start":114,"line_end":114,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":219134,"byte_end":219137,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ Consume a number if it's equal to 0.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":219142,"byte_end":219182,"line_start":116,"line_end":116,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":219187,"byte_end":219190,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":219195,"byte_end":219202,"line_start":118,"line_end":118,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":219207,"byte_end":219248,"line_start":119,"line_end":119,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":219253,"byte_end":219296,"line_start":120,"line_end":120,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":219301,"byte_end":219326,"line_start":121,"line_end":121,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":219331,"byte_end":219334,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(0..5).peekable();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":219339,"byte_end":219386,"line_start":123,"line_end":123,"column_start":5,"column_end":52}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":219391,"byte_end":219412,"line_start":124,"line_end":124,"column_start":5,"column_end":26}},{"value":"/ // The first item of the stream is 0; consume it.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":219417,"byte_end":219470,"line_start":125,"line_end":125,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.as_mut().next_if(|&x| x == 0).await, Some(0));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":219475,"byte_end":219543,"line_start":126,"line_end":126,"column_start":5,"column_end":73}},{"value":"/ // The next item returned is now 1, so `consume` will return `false`.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":219548,"byte_end":219621,"line_start":127,"line_end":127,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(stream.as_mut().next_if(|&x| x == 0).await, None);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":219626,"byte_end":219691,"line_start":128,"line_end":128,"column_start":5,"column_end":70}},{"value":"/ // `next_if` saves the value of the next item if it was not equal to `expected`.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":219696,"byte_end":219780,"line_start":129,"line_end":129,"column_start":5,"column_end":89}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":219785,"byte_end":219830,"line_start":130,"line_end":130,"column_start":5,"column_end":50}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":219835,"byte_end":219844,"line_start":131,"line_end":131,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":219849,"byte_end":219856,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":219861,"byte_end":219864,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ Consume any number less than 10.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":219869,"byte_end":219905,"line_start":134,"line_end":134,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":219910,"byte_end":219913,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":219918,"byte_end":219925,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":219930,"byte_end":219971,"line_start":137,"line_end":137,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":219976,"byte_end":220019,"line_start":138,"line_end":138,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":220024,"byte_end":220049,"line_start":139,"line_end":139,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":220054,"byte_end":220057,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..20).peekable();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":220062,"byte_end":220110,"line_start":141,"line_end":141,"column_start":5,"column_end":53}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":220115,"byte_end":220136,"line_start":142,"line_end":142,"column_start":5,"column_end":26}},{"value":"/ // Consume all numbers less than 10","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":220141,"byte_end":220180,"line_start":143,"line_end":143,"column_start":5,"column_end":44}},{"value":"/ while stream.as_mut().next_if(|&x| x < 10).await.is_some() {}","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":220185,"byte_end":220250,"line_start":144,"line_end":144,"column_start":5,"column_end":70}},{"value":"/ // The next value returned will be 10","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":220255,"byte_end":220296,"line_start":145,"line_end":145,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(stream.next().await, Some(10));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":220301,"byte_end":220347,"line_start":146,"line_end":146,"column_start":5,"column_end":51}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":220352,"byte_end":220361,"line_start":147,"line_end":147,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":220366,"byte_end":220373,"line_start":148,"line_end":148,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2287},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":221416,"byte_end":221426,"line_start":178,"line_end":178,"column_start":12,"column_end":22},"name":"next_if_eq","qualname":"<Peekable<St>>::next_if_eq","value":"pub fn next_if_eq<'a, T>(Pin<&'a mut Self>, &'a T) -> NextIfEq where\nT: ?Sized, St::Item: PartialEq<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which will consume and return the next item if it is\n equal to `expected`.","sig":null,"attributes":[{"value":"/ Creates a future which will consume and return the next item if it is","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":220558,"byte_end":220631,"line_start":156,"line_end":156,"column_start":5,"column_end":78}},{"value":"/ equal to `expected`.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":220636,"byte_end":220660,"line_start":157,"line_end":157,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":220665,"byte_end":220668,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":220673,"byte_end":220686,"line_start":159,"line_end":159,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":220691,"byte_end":220694,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ Consume a number if it's equal to 0.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":220699,"byte_end":220739,"line_start":161,"line_end":161,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":220744,"byte_end":220747,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":220752,"byte_end":220759,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":220764,"byte_end":220805,"line_start":164,"line_end":164,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":220810,"byte_end":220853,"line_start":165,"line_end":165,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":220858,"byte_end":220883,"line_start":166,"line_end":166,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":220888,"byte_end":220891,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(0..5).peekable();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":220896,"byte_end":220943,"line_start":168,"line_end":168,"column_start":5,"column_end":52}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":220948,"byte_end":220969,"line_start":169,"line_end":169,"column_start":5,"column_end":26}},{"value":"/ // The first item of the stream is 0; consume it.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":220974,"byte_end":221027,"line_start":170,"line_end":170,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.as_mut().next_if_eq(&0).await, Some(0));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":221032,"byte_end":221094,"line_start":171,"line_end":171,"column_start":5,"column_end":67}},{"value":"/ // The next item returned is now 1, so `consume` will return `false`.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":221099,"byte_end":221172,"line_start":172,"line_end":172,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(stream.as_mut().next_if_eq(&0).await, None);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":221177,"byte_end":221236,"line_start":173,"line_end":173,"column_start":5,"column_end":64}},{"value":"/ // `next_if_eq` saves the value of the next item if it was not equal to `expected`.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":221241,"byte_end":221328,"line_start":174,"line_end":174,"column_start":5,"column_end":92}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":221333,"byte_end":221378,"line_start":175,"line_end":175,"column_start":5,"column_end":50}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":221383,"byte_end":221392,"line_start":176,"line_end":176,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":221397,"byte_end":221404,"line_start":177,"line_end":177,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8254},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":222944,"byte_end":222948,"line_start":232,"line_end":232,"column_start":16,"column_end":20},"name":"Peek","qualname":"::stream::stream::peek::Peek","value":"Peek {  }","parent":null,"children":[{"krate":0,"index":8257}],"decl_id":null,"docs":" Future for the [`Peekable::peek`](self::Peekable::peek) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8295},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":224006,"byte_end":224013,"line_start":274,"line_end":274,"column_start":16,"column_end":23},"name":"PeekMut","qualname":"::stream::stream::peek::PeekMut","value":"PeekMut {  }","parent":null,"children":[{"krate":0,"index":8298}],"decl_id":null,"docs":" Future for the [`Peekable::peek_mut`](self::Peekable::peek_mut) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8336},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":225096,"byte_end":225102,"line_start":316,"line_end":316,"column_start":16,"column_end":22},"name":"NextIf","qualname":"::stream::stream::peek::NextIf","value":"NextIf {  }","parent":null,"children":[{"krate":0,"index":8340}],"decl_id":null,"docs":" Future for the [`Peekable::next_if`](self::Peekable::next_if) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8385},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":226966,"byte_end":226974,"line_start":375,"line_end":375,"column_start":16,"column_end":24},"name":"NextIfEq","qualname":"::stream::stream::peek::NextIfEq","value":"NextIfEq {  }","parent":null,"children":[{"krate":0,"index":8389}],"decl_id":null,"docs":" Future for the [`Peekable::next_if_eq`](self::Peekable::next_if_eq) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8434},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip.rs","byte_start":228591,"byte_end":228595,"line_start":13,"line_end":13,"column_start":16,"column_end":20},"name":"Skip","qualname":"::stream::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":8436},{"krate":0,"index":8437}],"decl_id":null,"docs":" Stream for the [`skip`](super::StreamExt::skip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8478},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip_while.rs","byte_start":230358,"byte_end":230367,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"SkipWhile","qualname":"::stream::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":8482},{"krate":0,"index":8483},{"krate":0,"index":8484},{"krate":0,"index":8485},{"krate":0,"index":8486}],"decl_id":null,"docs":" Stream for the [`skip_while`](super::StreamExt::skip_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8547},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take.rs","byte_start":233871,"byte_end":233875,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Take","qualname":"::stream::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":8549},{"krate":0,"index":8550}],"decl_id":null,"docs":" Stream for the [`take`](super::StreamExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8591},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_while.rs","byte_start":235911,"byte_end":235920,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"TakeWhile","qualname":"::stream::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":8595},{"krate":0,"index":8596},{"krate":0,"index":8597},{"krate":0,"index":8598},{"krate":0,"index":8599}],"decl_id":null,"docs":" Stream for the [`take_while`](super::StreamExt::take_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8660},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":239400,"byte_end":239409,"line_start":16,"line_end":16,"column_start":16,"column_end":25},"name":"TakeUntil","qualname":"::stream::stream::take_until::TakeUntil","value":"TakeUntil {  }","parent":null,"children":[{"krate":0,"index":8663},{"krate":0,"index":8664},{"krate":0,"index":8665},{"krate":0,"index":8666}],"decl_id":null,"docs":" Stream for the [`take_until`](super::StreamExt::take_until) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2605},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":240693,"byte_end":240704,"line_start":56,"line_end":56,"column_start":12,"column_end":23},"name":"take_future","qualname":"<TakeUntil<St, Fut>>::take_future","value":"pub fn take_future(&mut Self) -> Option<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Extract the stopping future out of the combinator.\n The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.\n Taking out the future means the combinator will be yielding\n elements from the wrapped stream without ever stopping it.\n","sig":null,"attributes":[{"value":"/ Extract the stopping future out of the combinator.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":240393,"byte_end":240447,"line_start":52,"line_end":52,"column_start":5,"column_end":59}},{"value":"/ The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":240452,"byte_end":240546,"line_start":53,"line_end":53,"column_start":5,"column_end":99}},{"value":"/ Taking out the future means the combinator will be yielding","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":240551,"byte_end":240614,"line_start":54,"line_end":54,"column_start":5,"column_end":68}},{"value":"/ elements from the wrapped stream without ever stopping it.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":240619,"byte_end":240681,"line_start":55,"line_end":55,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2606},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":241988,"byte_end":241999,"line_start":100,"line_end":100,"column_start":12,"column_end":23},"name":"take_result","qualname":"<TakeUntil<St, Fut>>::take_result","value":"pub fn take_result(&mut Self) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Once the stopping future is resolved, this method can be used\n to extract the value returned by the stopping future.","sig":null,"attributes":[{"value":"/ Once the stopping future is resolved, this method can be used","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":240841,"byte_end":240906,"line_start":64,"line_end":64,"column_start":5,"column_end":70}},{"value":"/ to extract the value returned by the stopping future.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":240911,"byte_end":240968,"line_start":65,"line_end":65,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":240973,"byte_end":240976,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ This may be used to retrieve arbitrary data from the stopping","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":240981,"byte_end":241046,"line_start":67,"line_end":67,"column_start":5,"column_end":70}},{"value":"/ future, for example a reason why the stream was stopped.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":241051,"byte_end":241111,"line_start":68,"line_end":68,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":241116,"byte_end":241119,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ This method will return `None` if the future isn't resolved yet,","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":241124,"byte_end":241192,"line_start":70,"line_end":70,"column_start":5,"column_end":73}},{"value":"/ or if the result was already taken out.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":241197,"byte_end":241240,"line_start":71,"line_end":71,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":241245,"byte_end":241248,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":241253,"byte_end":241267,"line_start":73,"line_end":73,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":241272,"byte_end":241275,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":241280,"byte_end":241287,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":241292,"byte_end":241333,"line_start":76,"line_end":76,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":241338,"byte_end":241362,"line_start":77,"line_end":77,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":241367,"byte_end":241410,"line_start":78,"line_end":78,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":241415,"byte_end":241443,"line_start":79,"line_end":79,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":241448,"byte_end":241451,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":241456,"byte_end":241494,"line_start":81,"line_end":81,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":241499,"byte_end":241502,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":241507,"byte_end":241525,"line_start":83,"line_end":83,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":241530,"byte_end":241572,"line_start":84,"line_end":84,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":241577,"byte_end":241592,"line_start":85,"line_end":85,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":241597,"byte_end":241616,"line_start":86,"line_end":86,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":241621,"byte_end":241646,"line_start":87,"line_end":87,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":241651,"byte_end":241667,"line_start":88,"line_end":88,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(\"reason\")","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":241672,"byte_end":241705,"line_start":89,"line_end":89,"column_start":5,"column_end":38}},{"value":"/     }","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":241710,"byte_end":241719,"line_start":90,"line_end":90,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":241724,"byte_end":241731,"line_start":91,"line_end":91,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":241736,"byte_end":241739,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.take_until(stop_fut);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":241744,"byte_end":241793,"line_start":93,"line_end":93,"column_start":5,"column_end":54}},{"value":"/ let _ = stream.by_ref().collect::<Vec<_>>().await;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":241798,"byte_end":241852,"line_start":94,"line_end":94,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":241857,"byte_end":241860,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ let result = stream.take_result().unwrap();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":241865,"byte_end":241912,"line_start":96,"line_end":96,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(result, \"reason\");","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":241917,"byte_end":241950,"line_start":97,"line_end":97,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":241955,"byte_end":241964,"line_start":98,"line_end":98,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":241969,"byte_end":241976,"line_start":99,"line_end":99,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2607},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":242175,"byte_end":242185,"line_start":106,"line_end":106,"column_start":12,"column_end":22},"name":"is_stopped","qualname":"<TakeUntil<St, Fut>>::is_stopped","value":"pub fn is_stopped(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the stream was stopped yet by the stopping future\n being resolved.\n","sig":null,"attributes":[{"value":"/ Whether the stream was stopped yet by the stopping future","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":242078,"byte_end":242139,"line_start":104,"line_end":104,"column_start":5,"column_end":66}},{"value":"/ being resolved.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":242144,"byte_end":242163,"line_start":105,"line_end":105,"column_start":5,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":8717},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/then.rs","byte_start":244117,"byte_end":244121,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Then","qualname":"::stream::stream::then::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":8721},{"krate":0,"index":8722},{"krate":0,"index":8723}],"decl_id":null,"docs":" Stream for the [`then`](super::StreamExt::then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8778},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":246661,"byte_end":246664,"line_start":12,"line_end":12,"column_start":16,"column_end":19},"name":"Zip","qualname":"::stream::stream::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":8781},{"krate":0,"index":8782},{"krate":0,"index":8783},{"krate":0,"index":8784}],"decl_id":null,"docs":" Stream for the [`zip`](super::StreamExt::zip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2711},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":247182,"byte_end":247189,"line_start":29,"line_end":29,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Zip<St1, St2>>::get_ref","value":"pub fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":247074,"byte_end":247148,"line_start":27,"line_end":27,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":247153,"byte_end":247170,"line_start":28,"line_end":28,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2712},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":247545,"byte_end":247552,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Zip<St1, St2>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":247283,"byte_end":247351,"line_start":33,"line_end":33,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":247356,"byte_end":247387,"line_start":34,"line_end":34,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":247392,"byte_end":247395,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":247400,"byte_end":247473,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":247478,"byte_end":247533,"line_start":37,"line_end":37,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2713},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":247927,"byte_end":247938,"line_start":47,"line_end":47,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Zip<St1, St2>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":247658,"byte_end":247733,"line_start":42,"line_end":42,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":247738,"byte_end":247769,"line_start":43,"line_end":43,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":247774,"byte_end":247777,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":247782,"byte_end":247855,"line_start":45,"line_end":45,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":247860,"byte_end":247915,"line_start":46,"line_end":46,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2714},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":248344,"byte_end":248354,"line_start":56,"line_end":56,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Zip<St1, St2>>::into_inner","value":"pub fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":248108,"byte_end":248171,"line_start":52,"line_end":52,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":248176,"byte_end":248179,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":248184,"byte_end":248256,"line_start":54,"line_end":54,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":248261,"byte_end":248332,"line_start":55,"line_end":55,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":8835},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/scan.rs","byte_start":251196,"byte_end":251200,"line_start":19,"line_end":19,"column_start":16,"column_end":20},"name":"Scan","qualname":"::stream::stream::scan::Scan","value":"Scan {  }","parent":null,"children":[{"krate":0,"index":8840},{"krate":0,"index":8841},{"krate":0,"index":8842}],"decl_id":null,"docs":" Stream for the [`scan`](super::StreamExt::scan) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":2804},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":130200,"byte_end":130209,"line_start":230,"line_end":230,"column_start":11,"column_end":20},"name":"StreamExt","qualname":"::stream::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":2805},{"krate":0,"index":2806},{"krate":0,"index":2807},{"krate":0,"index":2810},{"krate":0,"index":2811},{"krate":0,"index":2814},{"krate":0,"index":2818},{"krate":0,"index":2821},{"krate":0,"index":2823},{"krate":0,"index":2828},{"krate":0,"index":2829},{"krate":0,"index":2830},{"krate":0,"index":2831},{"krate":0,"index":2835},{"krate":0,"index":2838},{"krate":0,"index":2841},{"krate":0,"index":2842},{"krate":0,"index":2845},{"krate":0,"index":2850},{"krate":0,"index":2853},{"krate":0,"index":2856},{"krate":0,"index":2858},{"krate":0,"index":2861},{"krate":0,"index":2862},{"krate":0,"index":2863},{"krate":0,"index":2864},{"krate":0,"index":2865},{"krate":0,"index":2867},{"krate":0,"index":2869},{"krate":0,"index":2870},{"krate":0,"index":2872},{"krate":0,"index":2874},{"krate":0,"index":2876},{"krate":0,"index":2877}],"decl_id":null,"docs":" An extension trait for `Stream`s that provides a variety of convenient\n combinator functions.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Stream`s that provides a variety of convenient","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":130089,"byte_end":130163,"line_start":228,"line_end":228,"column_start":1,"column_end":75}},{"value":"/ combinator functions.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":130164,"byte_end":130189,"line_start":229,"line_end":229,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2805},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":131119,"byte_end":131123,"line_start":254,"line_end":254,"column_start":8,"column_end":12},"name":"next","qualname":"::stream::stream::StreamExt::next","value":"pub fn next(&mut Self) -> Next<, Self> where Self: Unpin","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Creates a future that resolves to the next item in the stream.","sig":null,"attributes":[{"value":"/ Creates a future that resolves to the next item in the stream.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":130224,"byte_end":130290,"line_start":231,"line_end":231,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":130295,"byte_end":130298,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ Note that because `next` doesn't take ownership over the stream,","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":130303,"byte_end":130371,"line_start":233,"line_end":233,"column_start":5,"column_end":73}},{"value":"/ the [`Stream`] type must be [`Unpin`]. If you want to use `next` with a","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":130376,"byte_end":130451,"line_start":234,"line_end":234,"column_start":5,"column_end":80}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":130456,"byte_end":130531,"line_start":235,"line_end":235,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":130536,"byte_end":130590,"line_start":236,"line_end":236,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":130595,"byte_end":130670,"line_start":237,"line_end":237,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":130675,"byte_end":130685,"line_start":238,"line_end":238,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":130690,"byte_end":130693,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":130698,"byte_end":130712,"line_start":240,"line_end":240,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":130717,"byte_end":130720,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":130725,"byte_end":130732,"line_start":242,"line_end":242,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":130737,"byte_end":130778,"line_start":243,"line_end":243,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":130783,"byte_end":130826,"line_start":244,"line_end":244,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":130831,"byte_end":130834,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=3);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":130839,"byte_end":130880,"line_start":246,"line_end":246,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":130885,"byte_end":130888,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":130893,"byte_end":130938,"line_start":248,"line_end":248,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(2));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":130943,"byte_end":130988,"line_start":249,"line_end":249,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(3));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":130993,"byte_end":131038,"line_start":250,"line_end":250,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":131043,"byte_end":131085,"line_start":251,"line_end":251,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":131090,"byte_end":131099,"line_start":252,"line_end":252,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":131104,"byte_end":131111,"line_start":253,"line_end":253,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2806},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":132362,"byte_end":132373,"line_start":289,"line_end":289,"column_start":8,"column_end":19},"name":"into_future","qualname":"::stream::stream::StreamExt::into_future","value":"pub fn into_future(Self) -> StreamFuture<Self> where Self: Sized + Unpin","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Converts this stream into a future of `(next_item, tail_of_stream)`.\n If the stream terminates, then the next item is [`None`].","sig":null,"attributes":[{"value":"/ Converts this stream into a future of `(next_item, tail_of_stream)`.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":131265,"byte_end":131337,"line_start":261,"line_end":261,"column_start":5,"column_end":77}},{"value":"/ If the stream terminates, then the next item is [`None`].","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":131342,"byte_end":131403,"line_start":262,"line_end":262,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":131408,"byte_end":131411,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ The returned future can be used to compose streams and futures together","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":131416,"byte_end":131491,"line_start":264,"line_end":264,"column_start":5,"column_end":80}},{"value":"/ by placing everything into the \"world of futures\".","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":131496,"byte_end":131550,"line_start":265,"line_end":265,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":131555,"byte_end":131558,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ Note that because `into_future` moves the stream, the [`Stream`] type","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":131563,"byte_end":131636,"line_start":267,"line_end":267,"column_start":5,"column_end":78}},{"value":"/ must be [`Unpin`]. If you want to use `into_future` with a","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":131641,"byte_end":131703,"line_start":268,"line_end":268,"column_start":5,"column_end":67}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":131708,"byte_end":131783,"line_start":269,"line_end":269,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":131788,"byte_end":131842,"line_start":270,"line_end":270,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":131847,"byte_end":131922,"line_start":271,"line_end":271,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":131927,"byte_end":131937,"line_start":272,"line_end":272,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":131942,"byte_end":131945,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":131950,"byte_end":131964,"line_start":274,"line_end":274,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":131969,"byte_end":131972,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":131977,"byte_end":131984,"line_start":276,"line_end":276,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":131989,"byte_end":132030,"line_start":277,"line_end":277,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":132035,"byte_end":132078,"line_start":278,"line_end":278,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":132083,"byte_end":132086,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":132091,"byte_end":132128,"line_start":280,"line_end":280,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":132133,"byte_end":132136,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":132141,"byte_end":132193,"line_start":282,"line_end":282,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(1), item);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":132198,"byte_end":132228,"line_start":283,"line_end":283,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":132233,"byte_end":132236,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":132241,"byte_end":132293,"line_start":285,"line_end":285,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(2), item);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":132298,"byte_end":132328,"line_start":286,"line_end":286,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":132333,"byte_end":132342,"line_start":287,"line_end":287,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":132347,"byte_end":132354,"line_start":288,"line_end":288,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2807},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":133374,"byte_end":133377,"line_start":319,"line_end":319,"column_start":8,"column_end":11},"name":"map","qualname":"::stream::stream::StreamExt::map","value":"pub fn map<T, F>(Self, F) -> Map<Self, F> where F: FnMut(Self::Item) -> T,\nSelf: Sized","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Maps this stream's items to a different type, returning a new stream of\n the resulting type.","sig":null,"attributes":[{"value":"/ Maps this stream's items to a different type, returning a new stream of","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":132538,"byte_end":132613,"line_start":296,"line_end":296,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":132618,"byte_end":132641,"line_start":297,"line_end":297,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":132646,"byte_end":132649,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ The provided closure is executed over all elements of this stream as","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":132654,"byte_end":132726,"line_start":299,"line_end":299,"column_start":5,"column_end":77}},{"value":"/ they are made available. It is executed inline with calls to","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":132731,"byte_end":132795,"line_start":300,"line_end":300,"column_start":5,"column_end":69}},{"value":"/ [`poll_next`](Stream::poll_next).","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":132800,"byte_end":132837,"line_start":301,"line_end":301,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":132842,"byte_end":132845,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":132850,"byte_end":132926,"line_start":303,"line_end":303,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":132931,"byte_end":133002,"line_start":304,"line_end":304,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":133007,"byte_end":133028,"line_start":305,"line_end":305,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":133033,"byte_end":133036,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":133041,"byte_end":133055,"line_start":307,"line_end":307,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":133060,"byte_end":133063,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":133068,"byte_end":133075,"line_start":309,"line_end":309,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":133080,"byte_end":133121,"line_start":310,"line_end":310,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":133126,"byte_end":133169,"line_start":311,"line_end":311,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":133174,"byte_end":133177,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":133182,"byte_end":133219,"line_start":313,"line_end":313,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.map(|x| x + 3);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":133224,"byte_end":133263,"line_start":314,"line_end":314,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":133268,"byte_end":133271,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":133276,"byte_end":133340,"line_start":316,"line_end":316,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":133345,"byte_end":133354,"line_start":317,"line_end":317,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":133359,"byte_end":133366,"line_start":318,"line_end":318,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2810},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":134937,"byte_end":134946,"line_start":365,"line_end":365,"column_start":8,"column_end":17},"name":"enumerate","qualname":"::stream::stream::StreamExt::enumerate","value":"pub fn enumerate(Self) -> Enumerate<Self> where Self: Sized","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Creates a stream which gives the current iteration count as well as\n the next value.","sig":null,"attributes":[{"value":"/ Creates a stream which gives the current iteration count as well as","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":133544,"byte_end":133615,"line_start":327,"line_end":327,"column_start":5,"column_end":76}},{"value":"/ the next value.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":133620,"byte_end":133639,"line_start":328,"line_end":328,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":133644,"byte_end":133647,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ The stream returned yields pairs `(i, val)`, where `i` is the","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":133652,"byte_end":133717,"line_start":330,"line_end":330,"column_start":5,"column_end":70}},{"value":"/ current index of iteration and `val` is the value returned by the","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":133722,"byte_end":133791,"line_start":331,"line_end":331,"column_start":5,"column_end":74}},{"value":"/ stream.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":133796,"byte_end":133807,"line_start":332,"line_end":332,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":133812,"byte_end":133815,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ `enumerate()` keeps its count as a [`usize`]. If you want to count by a","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":133820,"byte_end":133895,"line_start":334,"line_end":334,"column_start":5,"column_end":80}},{"value":"/ different sized integer, the [`zip`](StreamExt::zip) function provides similar","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":133900,"byte_end":133982,"line_start":335,"line_end":335,"column_start":5,"column_end":87}},{"value":"/ functionality.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":133987,"byte_end":134005,"line_start":336,"line_end":336,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":134010,"byte_end":134013,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ # Overflow Behavior","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":134018,"byte_end":134041,"line_start":338,"line_end":338,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":134046,"byte_end":134049,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ The method does no guarding against overflows, so enumerating more than","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":134054,"byte_end":134129,"line_start":340,"line_end":340,"column_start":5,"column_end":80}},{"value":"/ [`prim@usize::max_value()`] elements either produces the wrong result or panics. If","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":134134,"byte_end":134221,"line_start":341,"line_end":341,"column_start":5,"column_end":92}},{"value":"/ debug assertions are enabled, a panic is guaranteed.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":134226,"byte_end":134282,"line_start":342,"line_end":342,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":134287,"byte_end":134290,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":134295,"byte_end":134307,"line_start":344,"line_end":344,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":134312,"byte_end":134315,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ The returned stream might panic if the to-be-returned index would","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":134320,"byte_end":134389,"line_start":346,"line_end":346,"column_start":5,"column_end":74}},{"value":"/ overflow a [`usize`].","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":134394,"byte_end":134419,"line_start":347,"line_end":347,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":134424,"byte_end":134427,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":134432,"byte_end":134446,"line_start":349,"line_end":349,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":134451,"byte_end":134454,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":134459,"byte_end":134466,"line_start":351,"line_end":351,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":134471,"byte_end":134512,"line_start":352,"line_end":352,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":134517,"byte_end":134560,"line_start":353,"line_end":353,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":134565,"byte_end":134568,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec!['a', 'b', 'c']);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":134573,"byte_end":134624,"line_start":355,"line_end":355,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":134629,"byte_end":134632,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.enumerate();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":134637,"byte_end":134677,"line_start":357,"line_end":357,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":134682,"byte_end":134685,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some((0, 'a')));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":134690,"byte_end":134742,"line_start":359,"line_end":359,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((1, 'b')));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":134747,"byte_end":134799,"line_start":360,"line_end":360,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((2, 'c')));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":134804,"byte_end":134856,"line_start":361,"line_end":361,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":134861,"byte_end":134903,"line_start":362,"line_end":362,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":134908,"byte_end":134917,"line_start":363,"line_end":363,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":134922,"byte_end":134929,"line_start":364,"line_end":364,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2811},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":136175,"byte_end":136181,"line_start":398,"line_end":398,"column_start":8,"column_end":14},"name":"filter","qualname":"::stream::stream::StreamExt::filter","value":"pub fn filter<Fut, F>(Self, F) -> Filter<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream according to the provided\n asynchronous predicate.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream according to the provided","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":135090,"byte_end":135162,"line_start":372,"line_end":372,"column_start":5,"column_end":77}},{"value":"/ asynchronous predicate.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":135167,"byte_end":135194,"line_start":373,"line_end":373,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":135199,"byte_end":135202,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":135207,"byte_end":135282,"line_start":375,"line_end":375,"column_start":5,"column_end":80}},{"value":"/ will be run against them. If the predicate returns a `Future` which","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":135287,"byte_end":135358,"line_start":376,"line_end":376,"column_start":5,"column_end":76}},{"value":"/ resolves to `true`, then the stream will yield the value, but if the","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":135363,"byte_end":135435,"line_start":377,"line_end":377,"column_start":5,"column_end":77}},{"value":"/ predicate returns a `Future` which resolves to `false`, then the value","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":135440,"byte_end":135514,"line_start":378,"line_end":378,"column_start":5,"column_end":79}},{"value":"/ will be discarded and the next value will be produced.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":135519,"byte_end":135577,"line_start":379,"line_end":379,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":135582,"byte_end":135585,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":135590,"byte_end":135666,"line_start":381,"line_end":381,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in the","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":135671,"byte_end":135745,"line_start":382,"line_end":382,"column_start":5,"column_end":79}},{"value":"/ standard library.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":135750,"byte_end":135771,"line_start":383,"line_end":383,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":135776,"byte_end":135779,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":135784,"byte_end":135798,"line_start":385,"line_end":385,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":135803,"byte_end":135806,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":135811,"byte_end":135818,"line_start":387,"line_end":387,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":135823,"byte_end":135864,"line_start":388,"line_end":388,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":135869,"byte_end":135893,"line_start":389,"line_end":389,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":135898,"byte_end":135941,"line_start":390,"line_end":390,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":135946,"byte_end":135949,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":135954,"byte_end":135992,"line_start":392,"line_end":392,"column_start":5,"column_end":43}},{"value":"/ let evens = stream.filter(|x| future::ready(x % 2 == 0));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":135997,"byte_end":136058,"line_start":393,"line_end":393,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":136063,"byte_end":136066,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![2, 4, 6, 8, 10], evens.collect::<Vec<_>>().await);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":136071,"byte_end":136141,"line_start":395,"line_end":395,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":136146,"byte_end":136155,"line_start":396,"line_end":396,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":136160,"byte_end":136167,"line_start":397,"line_end":397,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2814},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":137506,"byte_end":137516,"line_start":432,"line_end":432,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::stream::stream::StreamExt::filter_map","value":"pub fn filter_map<Fut, T, F>(Self, F) -> FilterMap<Self, Fut, F> where\nF: FnMut(Self::Item) -> Fut, Fut: Future<Output = Option<T>>, Self: Sized","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream while simultaneously mapping\n them to a different type according to the provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream while simultaneously mapping","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":136409,"byte_end":136484,"line_start":407,"line_end":407,"column_start":5,"column_end":80}},{"value":"/ them to a different type according to the provided asynchronous closure.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":136489,"byte_end":136565,"line_start":408,"line_end":408,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":136570,"byte_end":136573,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":136578,"byte_end":136653,"line_start":410,"line_end":410,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":136658,"byte_end":136733,"line_start":411,"line_end":411,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":136738,"byte_end":136814,"line_start":412,"line_end":412,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":136819,"byte_end":136884,"line_start":413,"line_end":413,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":136889,"byte_end":136892,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":136897,"byte_end":136973,"line_start":415,"line_end":415,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":136978,"byte_end":137052,"line_start":416,"line_end":416,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":137057,"byte_end":137082,"line_start":417,"line_end":417,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":137087,"byte_end":137090,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":137095,"byte_end":137109,"line_start":419,"line_end":419,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":137114,"byte_end":137121,"line_start":420,"line_end":420,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":137126,"byte_end":137167,"line_start":421,"line_end":421,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":137172,"byte_end":137215,"line_start":422,"line_end":422,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":137220,"byte_end":137223,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":137228,"byte_end":137266,"line_start":424,"line_end":424,"column_start":5,"column_end":43}},{"value":"/ let evens = stream.filter_map(|x| async move {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":137271,"byte_end":137321,"line_start":425,"line_end":425,"column_start":5,"column_end":55}},{"value":"/     if x % 2 == 0 { Some(x + 1) } else { None }","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":137326,"byte_end":137377,"line_start":426,"line_end":426,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":137382,"byte_end":137389,"line_start":427,"line_end":427,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":137394,"byte_end":137397,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![3, 5, 7, 9, 11], evens.collect::<Vec<_>>().await);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":137402,"byte_end":137472,"line_start":429,"line_end":429,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":137477,"byte_end":137486,"line_start":430,"line_end":430,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":137491,"byte_end":137498,"line_start":431,"line_end":431,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2818},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":138545,"byte_end":138549,"line_start":463,"line_end":463,"column_start":8,"column_end":12},"name":"then","qualname":"::stream::stream::StreamExt::then","value":"pub fn then<Fut, F>(Self, F) -> Then<Self, Fut, F> where F: FnMut(Self::Item)\n-> Fut, Fut: Future, Self: Sized","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Computes from this stream's items new items of a different type using\n an asynchronous closure.","sig":null,"attributes":[{"value":"/ Computes from this stream's items new items of a different type using","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":137748,"byte_end":137821,"line_start":441,"line_end":441,"column_start":5,"column_end":78}},{"value":"/ an asynchronous closure.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":137826,"byte_end":137854,"line_start":442,"line_end":442,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":137859,"byte_end":137862,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will be called with an `Item` once a value is","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":137867,"byte_end":137941,"line_start":444,"line_end":444,"column_start":5,"column_end":79}},{"value":"/ ready, it returns a future which will then be run to completion","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":137946,"byte_end":138013,"line_start":445,"line_end":445,"column_start":5,"column_end":72}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":138018,"byte_end":138063,"line_start":446,"line_end":446,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":138068,"byte_end":138071,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":138076,"byte_end":138152,"line_start":448,"line_end":448,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":138157,"byte_end":138183,"line_start":449,"line_end":449,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":138188,"byte_end":138191,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":138196,"byte_end":138210,"line_start":451,"line_end":451,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":138215,"byte_end":138218,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":138223,"byte_end":138230,"line_start":453,"line_end":453,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":138235,"byte_end":138276,"line_start":454,"line_end":454,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":138281,"byte_end":138324,"line_start":455,"line_end":455,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":138329,"byte_end":138332,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":138337,"byte_end":138374,"line_start":457,"line_end":457,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.then(|x| async move { x + 3 });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":138379,"byte_end":138434,"line_start":458,"line_end":458,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":138439,"byte_end":138442,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":138447,"byte_end":138511,"line_start":460,"line_end":460,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":138516,"byte_end":138525,"line_start":461,"line_end":461,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":138530,"byte_end":138537,"line_start":462,"line_end":462,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2821},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":139483,"byte_end":139490,"line_start":497,"line_end":497,"column_start":8,"column_end":15},"name":"collect","qualname":"::stream::stream::StreamExt::collect","value":"pub fn collect<C: Default + Extend<Self::Item>>(Self) -> Collect<Self, C>\nwhere Self: Sized","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Transforms a stream into a collection, returning a\n future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Transforms a stream into a collection, returning a","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":138758,"byte_end":138812,"line_start":472,"line_end":472,"column_start":5,"column_end":59}},{"value":"/ future representing the result of that computation.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":138817,"byte_end":138872,"line_start":473,"line_end":473,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":138877,"byte_end":138880,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":138885,"byte_end":138953,"line_start":475,"line_end":475,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":138958,"byte_end":138961,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":138966,"byte_end":138980,"line_start":477,"line_end":477,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":138985,"byte_end":138988,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":138993,"byte_end":139000,"line_start":479,"line_end":479,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":139005,"byte_end":139046,"line_start":480,"line_end":480,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":139051,"byte_end":139082,"line_start":481,"line_end":481,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":139087,"byte_end":139122,"line_start":482,"line_end":482,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":139127,"byte_end":139147,"line_start":483,"line_end":483,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":139152,"byte_end":139155,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":139160,"byte_end":139197,"line_start":485,"line_end":485,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":139202,"byte_end":139205,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":139210,"byte_end":139237,"line_start":487,"line_end":487,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":139242,"byte_end":139266,"line_start":488,"line_end":488,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(i).unwrap();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":139271,"byte_end":139313,"line_start":489,"line_end":489,"column_start":5,"column_end":47}},{"value":"/     }","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":139318,"byte_end":139327,"line_start":490,"line_end":490,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":139332,"byte_end":139339,"line_start":491,"line_end":491,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":139344,"byte_end":139347,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ let output = rx.collect::<Vec<i32>>().await;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":139352,"byte_end":139400,"line_start":493,"line_end":493,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4, 5]);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":139405,"byte_end":139449,"line_start":494,"line_end":494,"column_start":5,"column_end":49}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":139454,"byte_end":139463,"line_start":495,"line_end":495,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":139468,"byte_end":139475,"line_start":496,"line_end":496,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2823},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":140609,"byte_end":140614,"line_start":534,"line_end":534,"column_start":8,"column_end":13},"name":"unzip","qualname":"::stream::stream::StreamExt::unzip","value":"pub fn unzip<A, B, FromA, FromB>(Self) -> Unzip<Self, FromA, FromB> where\nFromA: Default + Extend<A>, FromB: Default + Extend<B>, Self: Sized +\nStream<Item = (A, B)>","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Converts a stream of pairs into a future, which\n resolves to pair of containers.","sig":null,"attributes":[{"value":"/ Converts a stream of pairs into a future, which","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":139648,"byte_end":139699,"line_start":504,"line_end":504,"column_start":5,"column_end":56}},{"value":"/ resolves to pair of containers.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":139704,"byte_end":139739,"line_start":505,"line_end":505,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":139744,"byte_end":139747,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ `unzip()` produces a future, which resolves to two","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":139752,"byte_end":139806,"line_start":507,"line_end":507,"column_start":5,"column_end":59}},{"value":"/ collections: one from the left elements of the pairs,","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":139811,"byte_end":139868,"line_start":508,"line_end":508,"column_start":5,"column_end":62}},{"value":"/ and one from the right elements.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":139873,"byte_end":139909,"line_start":509,"line_end":509,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":139914,"byte_end":139917,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":139922,"byte_end":139990,"line_start":511,"line_end":511,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":139995,"byte_end":139998,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":140003,"byte_end":140017,"line_start":513,"line_end":513,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":140022,"byte_end":140025,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":140030,"byte_end":140037,"line_start":515,"line_end":515,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":140042,"byte_end":140083,"line_start":516,"line_end":516,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":140088,"byte_end":140119,"line_start":517,"line_end":517,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":140124,"byte_end":140159,"line_start":518,"line_end":518,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":140164,"byte_end":140184,"line_start":519,"line_end":519,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":140189,"byte_end":140192,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":140197,"byte_end":140234,"line_start":521,"line_end":521,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":140239,"byte_end":140242,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":140247,"byte_end":140274,"line_start":523,"line_end":523,"column_start":5,"column_end":32}},{"value":"/     tx.unbounded_send((1, 2)).unwrap();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":140279,"byte_end":140322,"line_start":524,"line_end":524,"column_start":5,"column_end":48}},{"value":"/     tx.unbounded_send((3, 4)).unwrap();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":140327,"byte_end":140370,"line_start":525,"line_end":525,"column_start":5,"column_end":48}},{"value":"/     tx.unbounded_send((5, 6)).unwrap();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":140375,"byte_end":140418,"line_start":526,"line_end":526,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":140423,"byte_end":140430,"line_start":527,"line_end":527,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":140435,"byte_end":140438,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ let (o1, o2): (Vec<_>, Vec<_>) = rx.unzip().await;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":140443,"byte_end":140497,"line_start":529,"line_end":529,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(o1, vec![1, 3, 5]);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":140502,"byte_end":140536,"line_start":530,"line_end":530,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(o2, vec![2, 4, 6]);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":140541,"byte_end":140575,"line_start":531,"line_end":531,"column_start":5,"column_end":39}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":140580,"byte_end":140589,"line_start":532,"line_end":532,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":140594,"byte_end":140601,"line_start":533,"line_end":533,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2828},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":141910,"byte_end":141916,"line_start":575,"line_end":575,"column_start":8,"column_end":14},"name":"concat","qualname":"::stream::stream::StreamExt::concat","value":"pub fn concat(Self) -> Concat<Self> where Self: Sized,\nSelf::Item: Extend<<<Self as Stream>::Item as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Concatenate all items of a stream into a single extendable\n destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Concatenate all items of a stream into a single extendable","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":140875,"byte_end":140937,"line_start":543,"line_end":543,"column_start":5,"column_end":67}},{"value":"/ destination, returning a future representing the end result.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":140942,"byte_end":141006,"line_start":544,"line_end":544,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":141011,"byte_end":141014,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":141019,"byte_end":141083,"line_start":546,"line_end":546,"column_start":5,"column_end":69}},{"value":"/ of all the subsequent results of the stream. If the stream is","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":141088,"byte_end":141153,"line_start":547,"line_end":547,"column_start":5,"column_end":70}},{"value":"/ empty, the default value will be returned.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":141158,"byte_end":141204,"line_start":548,"line_end":548,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":141209,"byte_end":141212,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":141217,"byte_end":141266,"line_start":550,"line_end":550,"column_start":5,"column_end":54}},{"value":"/ [`Extend`](std::iter::Extend) trait.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":141271,"byte_end":141311,"line_start":551,"line_end":551,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":141316,"byte_end":141319,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":141324,"byte_end":141338,"line_start":553,"line_end":553,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":141343,"byte_end":141346,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":141351,"byte_end":141358,"line_start":555,"line_end":555,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":141363,"byte_end":141404,"line_start":556,"line_end":556,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":141409,"byte_end":141440,"line_start":557,"line_end":557,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":141445,"byte_end":141480,"line_start":558,"line_end":558,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":141485,"byte_end":141505,"line_start":559,"line_end":559,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":141510,"byte_end":141513,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":141518,"byte_end":141555,"line_start":561,"line_end":561,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":141560,"byte_end":141563,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":141568,"byte_end":141595,"line_start":563,"line_end":563,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":141600,"byte_end":141631,"line_start":564,"line_end":564,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":141636,"byte_end":141662,"line_start":565,"line_end":565,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(vec![n + 1, n + 2, n + 3]).unwrap();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":141667,"byte_end":141733,"line_start":566,"line_end":566,"column_start":5,"column_end":71}},{"value":"/     }","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":141738,"byte_end":141747,"line_start":567,"line_end":567,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":141752,"byte_end":141759,"line_start":568,"line_end":568,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":141764,"byte_end":141767,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ let result = rx.concat().await;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":141772,"byte_end":141807,"line_start":570,"line_end":570,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":141812,"byte_end":141815,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, vec![7, 8, 9, 4, 5, 6, 1, 2, 3]);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":141820,"byte_end":141876,"line_start":572,"line_end":572,"column_start":5,"column_end":61}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":141881,"byte_end":141890,"line_start":573,"line_end":573,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":141895,"byte_end":141902,"line_start":574,"line_end":574,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2829},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":142936,"byte_end":142941,"line_start":608,"line_end":608,"column_start":8,"column_end":13},"name":"count","qualname":"::stream::stream::StreamExt::count","value":"pub fn count(Self) -> Count<Self> where Self: Sized","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Drives the stream to completion, counting the number of items.","sig":null,"attributes":[{"value":"/ Drives the stream to completion, counting the number of items.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":142146,"byte_end":142212,"line_start":583,"line_end":583,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":142217,"byte_end":142220,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ # Overflow Behavior","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":142225,"byte_end":142248,"line_start":585,"line_end":585,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":142253,"byte_end":142256,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ The method does no guarding against overflows, so counting elements of a","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":142261,"byte_end":142337,"line_start":587,"line_end":587,"column_start":5,"column_end":81}},{"value":"/ stream with more than [`usize::MAX`] elements either produces the wrong","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":142342,"byte_end":142417,"line_start":588,"line_end":588,"column_start":5,"column_end":80}},{"value":"/ result or panics. If debug assertions are enabled, a panic is guaranteed.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":142422,"byte_end":142499,"line_start":589,"line_end":589,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":142504,"byte_end":142507,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":142512,"byte_end":142524,"line_start":591,"line_end":591,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":142529,"byte_end":142532,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ This function might panic if the iterator has more than [`usize::MAX`]","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":142537,"byte_end":142611,"line_start":593,"line_end":593,"column_start":5,"column_end":79}},{"value":"/ elements.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":142616,"byte_end":142629,"line_start":594,"line_end":594,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":142634,"byte_end":142637,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":142642,"byte_end":142656,"line_start":596,"line_end":596,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":142661,"byte_end":142664,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":142669,"byte_end":142676,"line_start":598,"line_end":598,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":142681,"byte_end":142722,"line_start":599,"line_end":599,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":142727,"byte_end":142770,"line_start":600,"line_end":600,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":142775,"byte_end":142778,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":142783,"byte_end":142821,"line_start":602,"line_end":602,"column_start":5,"column_end":43}},{"value":"/ let count = stream.count().await;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":142826,"byte_end":142863,"line_start":603,"line_end":603,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":142868,"byte_end":142871,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(count, 10);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":142876,"byte_end":142902,"line_start":605,"line_end":605,"column_start":5,"column_end":31}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":142907,"byte_end":142916,"line_start":606,"line_end":606,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":142921,"byte_end":142928,"line_start":607,"line_end":607,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2830},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":143897,"byte_end":143902,"line_start":638,"line_end":638,"column_start":8,"column_end":13},"name":"cycle","qualname":"::stream::stream::StreamExt::cycle","value":"pub fn cycle(Self) -> Cycle<Self> where Self: Sized + Clone","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Repeats a stream endlessly.","sig":null,"attributes":[{"value":"/ Repeats a stream endlessly.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":143063,"byte_end":143094,"line_start":615,"line_end":615,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":143099,"byte_end":143102,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ The stream never terminates. Note that you likely want to avoid","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":143107,"byte_end":143174,"line_start":617,"line_end":617,"column_start":5,"column_end":72}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":143179,"byte_end":143251,"line_start":618,"line_end":618,"column_start":5,"column_end":77}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":143256,"byte_end":143313,"line_start":619,"line_end":619,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":143318,"byte_end":143321,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":143326,"byte_end":143340,"line_start":621,"line_end":621,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":143345,"byte_end":143348,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":143353,"byte_end":143360,"line_start":623,"line_end":623,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":143365,"byte_end":143406,"line_start":624,"line_end":624,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":143411,"byte_end":143454,"line_start":625,"line_end":625,"column_start":5,"column_end":48}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":143459,"byte_end":143481,"line_start":626,"line_end":626,"column_start":5,"column_end":27}},{"value":"/ let mut s = stream::iter(a.iter()).cycle();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":143486,"byte_end":143533,"line_start":627,"line_end":627,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":143538,"byte_end":143541,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":143546,"byte_end":143587,"line_start":629,"line_end":629,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&2));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":143592,"byte_end":143633,"line_start":630,"line_end":630,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&3));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":143638,"byte_end":143679,"line_start":631,"line_end":631,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":143684,"byte_end":143725,"line_start":632,"line_end":632,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&2));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":143730,"byte_end":143771,"line_start":633,"line_end":633,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&3));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":143776,"byte_end":143817,"line_start":634,"line_end":634,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":143822,"byte_end":143863,"line_start":635,"line_end":635,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":143868,"byte_end":143877,"line_start":636,"line_end":636,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":143882,"byte_end":143889,"line_start":637,"line_end":637,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2831},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":144852,"byte_end":144856,"line_start":665,"line_end":665,"column_start":8,"column_end":12},"name":"fold","qualname":"::stream::stream::StreamExt::fold","value":"pub fn fold<T, Fut, F>(Self, T, F) -> Fold<Self, Fut, T, F> where\nF: FnMut(T, Self::Item) -> Fut, Fut: Future<Output = T>, Self: Sized","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Execute an accumulating asynchronous computation over a stream,\n collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Execute an accumulating asynchronous computation over a stream,","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":144037,"byte_end":144104,"line_start":645,"line_end":645,"column_start":5,"column_end":72}},{"value":"/ collecting all the values into one final result.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":144109,"byte_end":144161,"line_start":646,"line_end":646,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":144166,"byte_end":144169,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":144174,"byte_end":144244,"line_start":648,"line_end":648,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":144249,"byte_end":144325,"line_start":649,"line_end":649,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":144330,"byte_end":144406,"line_start":650,"line_end":650,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":144411,"byte_end":144481,"line_start":651,"line_end":651,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":144486,"byte_end":144512,"line_start":652,"line_end":652,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":144517,"byte_end":144520,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":144525,"byte_end":144539,"line_start":654,"line_end":654,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":144544,"byte_end":144547,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":144552,"byte_end":144559,"line_start":656,"line_end":656,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":144564,"byte_end":144605,"line_start":657,"line_end":657,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":144610,"byte_end":144653,"line_start":658,"line_end":658,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":144658,"byte_end":144661,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..6);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":144666,"byte_end":144709,"line_start":660,"line_end":660,"column_start":5,"column_end":48}},{"value":"/ let sum = number_stream.fold(0, |acc, x| async move { acc + x });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":144714,"byte_end":144783,"line_start":661,"line_end":661,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(sum.await, 15);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":144788,"byte_end":144818,"line_start":662,"line_end":662,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":144823,"byte_end":144832,"line_start":663,"line_end":663,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":144837,"byte_end":144844,"line_start":664,"line_end":664,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2835},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":145557,"byte_end":145560,"line_start":687,"line_end":687,"column_start":8,"column_end":11},"name":"any","qualname":"::stream::stream::StreamExt::any","value":"pub fn any<Fut, F>(Self, F) -> Any<Self, Fut, F> where F: FnMut(Self::Item) ->\nFut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Execute predicate over asynchronous stream, and return `true` if any element in stream satisfied a predicate.","sig":null,"attributes":[{"value":"/ Execute predicate over asynchronous stream, and return `true` if any element in stream satisfied a predicate.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":145091,"byte_end":145204,"line_start":674,"line_end":674,"column_start":5,"column_end":118}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":145209,"byte_end":145212,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":145217,"byte_end":145231,"line_start":676,"line_end":676,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":145236,"byte_end":145239,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":145244,"byte_end":145251,"line_start":678,"line_end":678,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":145256,"byte_end":145297,"line_start":679,"line_end":679,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":145302,"byte_end":145345,"line_start":680,"line_end":680,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":145350,"byte_end":145353,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..10);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":145358,"byte_end":145402,"line_start":682,"line_end":682,"column_start":5,"column_end":49}},{"value":"/ let contain_three = number_stream.any(|i| async move { i == 3 });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":145407,"byte_end":145476,"line_start":683,"line_end":683,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(contain_three.await, true);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":145481,"byte_end":145523,"line_start":684,"line_end":684,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":145528,"byte_end":145537,"line_start":685,"line_end":685,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":145542,"byte_end":145549,"line_start":686,"line_end":686,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2838},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":146247,"byte_end":146250,"line_start":709,"line_end":709,"column_start":8,"column_end":11},"name":"all","qualname":"::stream::stream::StreamExt::all","value":"pub fn all<Fut, F>(Self, F) -> All<Self, Fut, F> where F: FnMut(Self::Item) ->\nFut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Execute predicate over asynchronous stream, and return `true` if all element in stream satisfied a predicate.","sig":null,"attributes":[{"value":"/ Execute predicate over asynchronous stream, and return `true` if all element in stream satisfied a predicate.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":145775,"byte_end":145888,"line_start":696,"line_end":696,"column_start":5,"column_end":118}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":145893,"byte_end":145896,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":145901,"byte_end":145915,"line_start":698,"line_end":698,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":145920,"byte_end":145923,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":145928,"byte_end":145935,"line_start":700,"line_end":700,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":145940,"byte_end":145981,"line_start":701,"line_end":701,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":145986,"byte_end":146029,"line_start":702,"line_end":702,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":146034,"byte_end":146037,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..10);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":146042,"byte_end":146086,"line_start":704,"line_end":704,"column_start":5,"column_end":49}},{"value":"/ let less_then_twenty = number_stream.all(|i| async move { i < 20 });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":146091,"byte_end":146163,"line_start":705,"line_end":705,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(less_then_twenty.await, true);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":146168,"byte_end":146213,"line_start":706,"line_end":706,"column_start":5,"column_end":50}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":146218,"byte_end":146227,"line_start":707,"line_end":707,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":146232,"byte_end":146239,"line_start":708,"line_end":708,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2841},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":147424,"byte_end":147431,"line_start":749,"line_end":749,"column_start":8,"column_end":15},"name":"flatten","qualname":"::stream::stream::StreamExt::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self::Item: Stream, Self: Sized","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":146465,"byte_end":146530,"line_start":718,"line_end":718,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":146535,"byte_end":146538,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":146543,"byte_end":146557,"line_start":720,"line_end":720,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":146562,"byte_end":146565,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":146570,"byte_end":146577,"line_start":722,"line_end":722,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":146582,"byte_end":146623,"line_start":723,"line_end":723,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":146628,"byte_end":146659,"line_start":724,"line_end":724,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":146664,"byte_end":146699,"line_start":725,"line_end":725,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":146704,"byte_end":146724,"line_start":726,"line_end":726,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":146729,"byte_end":146732,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":146737,"byte_end":146776,"line_start":728,"line_end":728,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":146781,"byte_end":146820,"line_start":729,"line_end":729,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":146825,"byte_end":146864,"line_start":730,"line_end":730,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":146869,"byte_end":146872,"line_start":731,"line_end":731,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":146877,"byte_end":146904,"line_start":732,"line_end":732,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(1).unwrap();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":146909,"byte_end":146948,"line_start":733,"line_end":733,"column_start":5,"column_end":44}},{"value":"/     tx1.unbounded_send(2).unwrap();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":146953,"byte_end":146992,"line_start":734,"line_end":734,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":146997,"byte_end":147004,"line_start":735,"line_end":735,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":147009,"byte_end":147036,"line_start":736,"line_end":736,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(3).unwrap();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":147041,"byte_end":147080,"line_start":737,"line_end":737,"column_start":5,"column_end":44}},{"value":"/     tx2.unbounded_send(4).unwrap();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":147085,"byte_end":147124,"line_start":738,"line_end":738,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":147129,"byte_end":147136,"line_start":739,"line_end":739,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":147141,"byte_end":147168,"line_start":740,"line_end":740,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(rx1).unwrap();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":147173,"byte_end":147214,"line_start":741,"line_end":741,"column_start":5,"column_end":46}},{"value":"/     tx3.unbounded_send(rx2).unwrap();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":147219,"byte_end":147260,"line_start":742,"line_end":742,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":147265,"byte_end":147272,"line_start":743,"line_end":743,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":147277,"byte_end":147280,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ let output = rx3.flatten().collect::<Vec<i32>>().await;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":147285,"byte_end":147344,"line_start":745,"line_end":745,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4]);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":147349,"byte_end":147390,"line_start":746,"line_end":746,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":147395,"byte_end":147404,"line_start":747,"line_end":747,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":147409,"byte_end":147416,"line_start":748,"line_end":748,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2842},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":148693,"byte_end":148701,"line_start":782,"line_end":782,"column_start":8,"column_end":16},"name":"flat_map","qualname":"::stream::stream::StreamExt::flat_map","value":"pub fn flat_map<U, F>(Self, F) -> FlatMap<Self, U, F> where\nF: FnMut(Self::Item) -> U, U: Stream, Self: Sized","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","sig":null,"attributes":[{"value":"/ Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":147608,"byte_end":147680,"line_start":757,"line_end":757,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":147685,"byte_end":147688,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ [`StreamExt::map`] is very useful, but if it produces a `Stream` instead,","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":147693,"byte_end":147770,"line_start":759,"line_end":759,"column_start":5,"column_end":82}},{"value":"/ you would have to chain combinators like `.map(f).flatten()` while this","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":147775,"byte_end":147850,"line_start":760,"line_end":760,"column_start":5,"column_end":80}},{"value":"/ combinator provides ability to write `.flat_map(f)` instead of chaining.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":147855,"byte_end":147931,"line_start":761,"line_end":761,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":147936,"byte_end":147939,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ The provided closure which produce inner streams is executed over all elements","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":147944,"byte_end":148026,"line_start":763,"line_end":763,"column_start":5,"column_end":87}},{"value":"/ of stream as last inner stream is terminated and next stream item is available.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":148031,"byte_end":148114,"line_start":764,"line_end":764,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":148119,"byte_end":148122,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":148127,"byte_end":148203,"line_start":766,"line_end":766,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `flat_map` methods in the","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":148208,"byte_end":148284,"line_start":767,"line_end":767,"column_start":5,"column_end":81}},{"value":"/ standard library.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":148289,"byte_end":148310,"line_start":768,"line_end":768,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":148315,"byte_end":148318,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":148323,"byte_end":148337,"line_start":770,"line_end":770,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":148342,"byte_end":148345,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":148350,"byte_end":148357,"line_start":772,"line_end":772,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":148362,"byte_end":148403,"line_start":773,"line_end":773,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":148408,"byte_end":148451,"line_start":774,"line_end":774,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":148456,"byte_end":148459,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":148464,"byte_end":148501,"line_start":776,"line_end":776,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.flat_map(|x| stream::iter(vec![x + 3; x]));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":148506,"byte_end":148573,"line_start":777,"line_end":777,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":148578,"byte_end":148581,"line_start":778,"line_end":778,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 5, 6, 6, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":148586,"byte_end":148659,"line_start":779,"line_end":779,"column_start":5,"column_end":78}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":148664,"byte_end":148673,"line_start":780,"line_end":780,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":148678,"byte_end":148685,"line_start":781,"line_end":781,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2845},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":149713,"byte_end":149717,"line_start":815,"line_end":815,"column_start":8,"column_end":12},"name":"scan","qualname":"::stream::stream::StreamExt::scan","value":"pub fn scan<S, B, Fut, F>(Self, S, F) -> Scan<Self, S, Fut, F> where\nF: FnMut(&mut S, Self::Item) -> Fut, Fut: Future<Output = Option<B>>,\nSelf: Sized","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Combinator similar to [`StreamExt::fold`] that holds internal state\n and produces a new stream.","sig":null,"attributes":[{"value":"/ Combinator similar to [`StreamExt::fold`] that holds internal state","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":148904,"byte_end":148975,"line_start":791,"line_end":791,"column_start":5,"column_end":76}},{"value":"/ and produces a new stream.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":148980,"byte_end":149010,"line_start":792,"line_end":792,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":149015,"byte_end":149018,"line_start":793,"line_end":793,"column_start":5,"column_end":8}},{"value":"/ Accepts initial state and closure which will be applied to each element","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":149023,"byte_end":149098,"line_start":794,"line_end":794,"column_start":5,"column_end":80}},{"value":"/ of the stream until provided closure returns `None`. Once `None` is","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":149103,"byte_end":149174,"line_start":795,"line_end":795,"column_start":5,"column_end":76}},{"value":"/ returned, stream will be terminated.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":149179,"byte_end":149219,"line_start":796,"line_end":796,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":149224,"byte_end":149227,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":149232,"byte_end":149246,"line_start":798,"line_end":798,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":149251,"byte_end":149254,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":149259,"byte_end":149266,"line_start":800,"line_end":800,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":149271,"byte_end":149312,"line_start":801,"line_end":801,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":149317,"byte_end":149341,"line_start":802,"line_end":802,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":149346,"byte_end":149389,"line_start":803,"line_end":803,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":149394,"byte_end":149397,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":149402,"byte_end":149440,"line_start":805,"line_end":805,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":149445,"byte_end":149448,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.scan(0, |state, x| {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":149453,"byte_end":149497,"line_start":807,"line_end":807,"column_start":5,"column_end":49}},{"value":"/     *state += x;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":149502,"byte_end":149522,"line_start":808,"line_end":808,"column_start":5,"column_end":25}},{"value":"/     future::ready(if *state < 10 { Some(x) } else { None })","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":149527,"byte_end":149590,"line_start":809,"line_end":809,"column_start":5,"column_end":68}},{"value":"/ });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":149595,"byte_end":149602,"line_start":810,"line_end":810,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":149607,"byte_end":149610,"line_start":811,"line_end":811,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":149615,"byte_end":149679,"line_start":812,"line_end":812,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":149684,"byte_end":149693,"line_start":813,"line_end":813,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":149698,"byte_end":149705,"line_start":814,"line_end":814,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2850},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":150764,"byte_end":150774,"line_start":846,"line_end":846,"column_start":8,"column_end":18},"name":"skip_while","qualname":"::stream::stream::StreamExt::skip_while","value":"pub fn skip_while<Fut, F>(Self, F) -> SkipWhile<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":149986,"byte_end":150060,"line_start":824,"line_end":824,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":150065,"byte_end":150088,"line_start":825,"line_end":825,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":150093,"byte_end":150096,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::skip_while`, will skip elements on the","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":150101,"byte_end":150174,"line_start":827,"line_end":827,"column_start":5,"column_end":78}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":150179,"byte_end":150251,"line_start":828,"line_end":828,"column_start":5,"column_end":77}},{"value":"/ returns `false`, all future elements will be returned from the underlying","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":150256,"byte_end":150333,"line_start":829,"line_end":829,"column_start":5,"column_end":82}},{"value":"/ stream.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":150338,"byte_end":150349,"line_start":830,"line_end":830,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":150354,"byte_end":150357,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":150362,"byte_end":150376,"line_start":832,"line_end":832,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":150381,"byte_end":150384,"line_start":833,"line_end":833,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":150389,"byte_end":150396,"line_start":834,"line_end":834,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":150401,"byte_end":150442,"line_start":835,"line_end":835,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":150447,"byte_end":150471,"line_start":836,"line_end":836,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":150476,"byte_end":150519,"line_start":837,"line_end":837,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":150524,"byte_end":150527,"line_start":838,"line_end":838,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":150532,"byte_end":150570,"line_start":839,"line_end":839,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":150575,"byte_end":150578,"line_start":840,"line_end":840,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.skip_while(|x| future::ready(*x <= 5));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":150583,"byte_end":150646,"line_start":841,"line_end":841,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":150651,"byte_end":150654,"line_start":842,"line_end":842,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":150659,"byte_end":150730,"line_start":843,"line_end":843,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":150735,"byte_end":150744,"line_start":844,"line_end":844,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":150749,"byte_end":150756,"line_start":845,"line_end":845,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2853},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":151763,"byte_end":151773,"line_start":876,"line_end":876,"column_start":8,"column_end":18},"name":"take_while","qualname":"::stream::stream::StreamExt::take_while","value":"pub fn take_while<Fut, F>(Self, F) -> TakeWhile<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Take elements from this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements from this stream while the provided asynchronous predicate","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":151008,"byte_end":151084,"line_start":855,"line_end":855,"column_start":5,"column_end":81}},{"value":"/ resolves to `true`.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":151089,"byte_end":151112,"line_start":856,"line_end":856,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":151117,"byte_end":151120,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::take_while`, will take elements from the","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":151125,"byte_end":151200,"line_start":858,"line_end":858,"column_start":5,"column_end":80}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":151205,"byte_end":151277,"line_start":859,"line_end":859,"column_start":5,"column_end":77}},{"value":"/ returns `false`, it will always return that the stream is done.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":151282,"byte_end":151349,"line_start":860,"line_end":860,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":151354,"byte_end":151357,"line_start":861,"line_end":861,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":151362,"byte_end":151376,"line_start":862,"line_end":862,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":151381,"byte_end":151384,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":151389,"byte_end":151396,"line_start":864,"line_end":864,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":151401,"byte_end":151442,"line_start":865,"line_end":865,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":151447,"byte_end":151471,"line_start":866,"line_end":866,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":151476,"byte_end":151519,"line_start":867,"line_end":867,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":151524,"byte_end":151527,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":151532,"byte_end":151570,"line_start":869,"line_end":869,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":151575,"byte_end":151578,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_while(|x| future::ready(*x <= 5));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":151583,"byte_end":151646,"line_start":871,"line_end":871,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":151651,"byte_end":151654,"line_start":872,"line_end":872,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":151659,"byte_end":151729,"line_start":873,"line_end":873,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":151734,"byte_end":151743,"line_start":874,"line_end":874,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":151748,"byte_end":151755,"line_start":875,"line_end":875,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2856},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":153289,"byte_end":153299,"line_start":921,"line_end":921,"column_start":8,"column_end":18},"name":"take_until","qualname":"::stream::stream::StreamExt::take_until","value":"pub fn take_until<Fut>(Self, Fut) -> TakeUntil<Self, Fut> where Fut: Future,\nSelf: Sized","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Take elements from this stream until the provided future resolves.","sig":null,"attributes":[{"value":"/ Take elements from this stream until the provided future resolves.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":152007,"byte_end":152077,"line_start":885,"line_end":885,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":152082,"byte_end":152085,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ This function will take elements from the stream until the provided","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":152090,"byte_end":152161,"line_start":887,"line_end":887,"column_start":5,"column_end":76}},{"value":"/ stopping future `fut` resolves. Once the `fut` future becomes ready,","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":152166,"byte_end":152238,"line_start":888,"line_end":888,"column_start":5,"column_end":77}},{"value":"/ this stream combinator will always return that the stream is done.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":152243,"byte_end":152313,"line_start":889,"line_end":889,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":152318,"byte_end":152321,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ The stopping future may return any type. Once the stream is stopped","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":152326,"byte_end":152397,"line_start":891,"line_end":891,"column_start":5,"column_end":76}},{"value":"/ the result of the stopping future may be accessed with `TakeUntil::take_result()`.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":152402,"byte_end":152488,"line_start":892,"line_end":892,"column_start":5,"column_end":91}},{"value":"/ The stream may also be resumed with `TakeUntil::take_future()`.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":152493,"byte_end":152560,"line_start":893,"line_end":893,"column_start":5,"column_end":72}},{"value":"/ See the documentation of [`TakeUntil`] for more information.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":152565,"byte_end":152629,"line_start":894,"line_end":894,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":152634,"byte_end":152637,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":152642,"byte_end":152656,"line_start":896,"line_end":896,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":152661,"byte_end":152664,"line_start":897,"line_end":897,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":152669,"byte_end":152676,"line_start":898,"line_end":898,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":152681,"byte_end":152722,"line_start":899,"line_end":899,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":152727,"byte_end":152751,"line_start":900,"line_end":900,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":152756,"byte_end":152799,"line_start":901,"line_end":901,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":152804,"byte_end":152832,"line_start":902,"line_end":902,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":152837,"byte_end":152840,"line_start":903,"line_end":903,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":152845,"byte_end":152883,"line_start":904,"line_end":904,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":152888,"byte_end":152891,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":152896,"byte_end":152914,"line_start":906,"line_end":906,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":152919,"byte_end":152961,"line_start":907,"line_end":907,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":152966,"byte_end":152981,"line_start":908,"line_end":908,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":152986,"byte_end":153005,"line_start":909,"line_end":909,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":153010,"byte_end":153035,"line_start":910,"line_end":910,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":153040,"byte_end":153056,"line_start":911,"line_end":911,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(())","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":153061,"byte_end":153088,"line_start":912,"line_end":912,"column_start":5,"column_end":32}},{"value":"/     }","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":153093,"byte_end":153102,"line_start":913,"line_end":913,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":153107,"byte_end":153114,"line_start":914,"line_end":914,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":153119,"byte_end":153122,"line_start":915,"line_end":915,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_until(stop_fut);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":153127,"byte_end":153172,"line_start":916,"line_end":916,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":153177,"byte_end":153180,"line_start":917,"line_end":917,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":153185,"byte_end":153255,"line_start":918,"line_end":918,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":153260,"byte_end":153269,"line_start":919,"line_end":919,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":153274,"byte_end":153281,"line_start":920,"line_end":920,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2858},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":154538,"byte_end":154546,"line_start":962,"line_end":962,"column_start":8,"column_end":16},"name":"for_each","qualname":"::stream::stream::StreamExt::for_each","value":"pub fn for_each<Fut, F>(Self, F) -> ForEach<Self, Fut, F> where\nF: FnMut(Self::Item) -> Fut, Fut: Future<Output = ()>, Self: Sized","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided asynchronous","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":153480,"byte_end":153551,"line_start":929,"line_end":929,"column_start":5,"column_end":76}},{"value":"/ closure for each element on the stream.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":153556,"byte_end":153599,"line_start":930,"line_end":930,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":153604,"byte_end":153607,"line_start":931,"line_end":931,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream produces,","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":153612,"byte_end":153687,"line_start":932,"line_end":932,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":153692,"byte_end":153762,"line_start":933,"line_end":933,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":153767,"byte_end":153805,"line_start":934,"line_end":934,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":153810,"byte_end":153813,"line_start":935,"line_end":935,"column_start":5,"column_end":8}},{"value":"/ The returned value is a `Future` where the `Output` type is `()`; it is","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":153818,"byte_end":153893,"line_start":936,"line_end":936,"column_start":5,"column_end":80}},{"value":"/ executed entirely for its side effects.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":153898,"byte_end":153941,"line_start":937,"line_end":937,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":153946,"byte_end":153949,"line_start":938,"line_end":938,"column_start":5,"column_end":8}},{"value":"/ To process each item in the stream and produce another stream instead","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":153954,"byte_end":154027,"line_start":939,"line_end":939,"column_start":5,"column_end":78}},{"value":"/ of a single future, use `then` instead.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":154032,"byte_end":154075,"line_start":940,"line_end":940,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":154080,"byte_end":154083,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":154088,"byte_end":154102,"line_start":942,"line_end":942,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":154107,"byte_end":154110,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":154115,"byte_end":154122,"line_start":944,"line_end":944,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":154127,"byte_end":154168,"line_start":945,"line_end":945,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":154173,"byte_end":154197,"line_start":946,"line_end":946,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":154202,"byte_end":154245,"line_start":947,"line_end":947,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":154250,"byte_end":154253,"line_start":948,"line_end":948,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":154258,"byte_end":154276,"line_start":949,"line_end":949,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":154281,"byte_end":154284,"line_start":950,"line_end":950,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":154289,"byte_end":154294,"line_start":951,"line_end":951,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(1).take(3).for_each(|item| {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":154299,"byte_end":154360,"line_start":952,"line_end":952,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":154365,"byte_end":154387,"line_start":953,"line_end":953,"column_start":5,"column_end":27}},{"value":"/         future::ready(())","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":154392,"byte_end":154421,"line_start":954,"line_end":954,"column_start":5,"column_end":34}},{"value":"/     });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":154426,"byte_end":154437,"line_start":955,"line_end":955,"column_start":5,"column_end":16}},{"value":"/     fut.await;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":154442,"byte_end":154460,"line_start":956,"line_end":956,"column_start":5,"column_end":23}},{"value":"/ }","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":154465,"byte_end":154470,"line_start":957,"line_end":957,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":154475,"byte_end":154478,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":154483,"byte_end":154504,"line_start":959,"line_end":959,"column_start":5,"column_end":26}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":154509,"byte_end":154518,"line_start":960,"line_end":960,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":154523,"byte_end":154530,"line_start":961,"line_end":961,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2861},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":157552,"byte_end":157556,"line_start":1047,"line_end":1047,"column_start":8,"column_end":12},"name":"take","qualname":"::stream::stream::StreamExt::take","value":"pub fn take(Self, usize) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Creates a new stream of at most `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream of at most `n` items of the underlying stream.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":157044,"byte_end":157115,"line_start":1031,"line_end":1031,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":157120,"byte_end":157123,"line_start":1032,"line_end":1032,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been yielded from this stream then it will always","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":157128,"byte_end":157201,"line_start":1033,"line_end":1033,"column_start":5,"column_end":78}},{"value":"/ return that the stream is done.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":157206,"byte_end":157241,"line_start":1034,"line_end":1034,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":157246,"byte_end":157249,"line_start":1035,"line_end":1035,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":157254,"byte_end":157268,"line_start":1036,"line_end":1036,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":157273,"byte_end":157276,"line_start":1037,"line_end":1037,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":157281,"byte_end":157288,"line_start":1038,"line_end":1038,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":157293,"byte_end":157334,"line_start":1039,"line_end":1039,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":157339,"byte_end":157382,"line_start":1040,"line_end":1040,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":157387,"byte_end":157390,"line_start":1041,"line_end":1041,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).take(3);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":157395,"byte_end":157441,"line_start":1042,"line_end":1042,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":157446,"byte_end":157449,"line_start":1043,"line_end":1043,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":157454,"byte_end":157518,"line_start":1044,"line_end":1044,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":157523,"byte_end":157532,"line_start":1045,"line_end":1045,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":157537,"byte_end":157544,"line_start":1046,"line_end":1046,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2862},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":158221,"byte_end":158225,"line_start":1070,"line_end":1070,"column_start":8,"column_end":12},"name":"skip","qualname":"::stream::stream::StreamExt::skip","value":"pub fn skip(Self, usize) -> Skip<Self> where Self: Sized","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Creates a new stream which skips `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream which skips `n` items of the underlying stream.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":157694,"byte_end":157766,"line_start":1054,"line_end":1054,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":157771,"byte_end":157774,"line_start":1055,"line_end":1055,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been skipped from this stream then it will always","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":157779,"byte_end":157852,"line_start":1056,"line_end":1056,"column_start":5,"column_end":78}},{"value":"/ return the remaining items on this stream.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":157857,"byte_end":157903,"line_start":1057,"line_end":1057,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":157908,"byte_end":157911,"line_start":1058,"line_end":1058,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":157916,"byte_end":157930,"line_start":1059,"line_end":1059,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":157935,"byte_end":157938,"line_start":1060,"line_end":1060,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":157943,"byte_end":157950,"line_start":1061,"line_end":1061,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":157955,"byte_end":157996,"line_start":1062,"line_end":1062,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":158001,"byte_end":158044,"line_start":1063,"line_end":1063,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":158049,"byte_end":158052,"line_start":1064,"line_end":1064,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).skip(5);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":158057,"byte_end":158103,"line_start":1065,"line_end":1065,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":158108,"byte_end":158111,"line_start":1066,"line_end":1066,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":158116,"byte_end":158187,"line_start":1067,"line_end":1067,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":158192,"byte_end":158201,"line_start":1068,"line_end":1068,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":158206,"byte_end":158213,"line_start":1069,"line_end":1069,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2863},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":159846,"byte_end":159850,"line_start":1116,"line_end":1116,"column_start":8,"column_end":12},"name":"fuse","qualname":"::stream::stream::StreamExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Fuse a stream such that [`poll_next`](Stream::poll_next) will never\n again be called once it has finished. This method can be used to turn\n any `Stream` into a `FusedStream`.","sig":null,"attributes":[{"value":"/ Fuse a stream such that [`poll_next`](Stream::poll_next) will never","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":158363,"byte_end":158434,"line_start":1077,"line_end":1077,"column_start":5,"column_end":76}},{"value":"/ again be called once it has finished. This method can be used to turn","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":158439,"byte_end":158512,"line_start":1078,"line_end":1078,"column_start":5,"column_end":78}},{"value":"/ any `Stream` into a `FusedStream`.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":158517,"byte_end":158555,"line_start":1079,"line_end":1079,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":158560,"byte_end":158563,"line_start":1080,"line_end":1080,"column_start":5,"column_end":8}},{"value":"/ Normally, once a stream has returned [`None`] from","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":158568,"byte_end":158622,"line_start":1081,"line_end":1081,"column_start":5,"column_end":59}},{"value":"/ [`poll_next`](Stream::poll_next) any further calls could exhibit bad","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":158627,"byte_end":158699,"line_start":1082,"line_end":1082,"column_start":5,"column_end":77}},{"value":"/ behavior such as block forever, panic, never return, etc. If it is known","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":158704,"byte_end":158780,"line_start":1083,"line_end":1083,"column_start":5,"column_end":81}},{"value":"/ that [`poll_next`](Stream::poll_next) may be called after stream","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":158785,"byte_end":158853,"line_start":1084,"line_end":1084,"column_start":5,"column_end":73}},{"value":"/ has already finished, then this method can be used to ensure that it has","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":158858,"byte_end":158934,"line_start":1085,"line_end":1085,"column_start":5,"column_end":81}},{"value":"/ defined semantics.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":158939,"byte_end":158961,"line_start":1086,"line_end":1086,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":158966,"byte_end":158969,"line_start":1087,"line_end":1087,"column_start":5,"column_end":8}},{"value":"/ The [`poll_next`](Stream::poll_next) method of a `fuse`d stream","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":158974,"byte_end":159041,"line_start":1088,"line_end":1088,"column_start":5,"column_end":72}},{"value":"/ is guaranteed to return [`None`] after the underlying stream has","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":159046,"byte_end":159114,"line_start":1089,"line_end":1089,"column_start":5,"column_end":73}},{"value":"/ finished.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":159119,"byte_end":159132,"line_start":1090,"line_end":1090,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":159137,"byte_end":159140,"line_start":1091,"line_end":1091,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":159145,"byte_end":159159,"line_start":1092,"line_end":1092,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":159164,"byte_end":159167,"line_start":1093,"line_end":1093,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":159172,"byte_end":159179,"line_start":1094,"line_end":1094,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::block_on_stream;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":159184,"byte_end":159227,"line_start":1095,"line_end":1095,"column_start":5,"column_end":48}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":159232,"byte_end":159275,"line_start":1096,"line_end":1096,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":159280,"byte_end":159308,"line_start":1097,"line_end":1097,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":159313,"byte_end":159316,"line_start":1098,"line_end":1098,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":159321,"byte_end":159339,"line_start":1099,"line_end":1099,"column_start":5,"column_end":23}},{"value":"/ let stream = stream::poll_fn(|_| {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":159344,"byte_end":159382,"line_start":1100,"line_end":1100,"column_start":5,"column_end":43}},{"value":"/     x += 1;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":159387,"byte_end":159402,"line_start":1101,"line_end":1101,"column_start":5,"column_end":20}},{"value":"/     match x {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":159407,"byte_end":159424,"line_start":1102,"line_end":1102,"column_start":5,"column_end":22}},{"value":"/         0..=2 => Poll::Ready(Some(x)),","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":159429,"byte_end":159471,"line_start":1103,"line_end":1103,"column_start":5,"column_end":47}},{"value":"/         3 => Poll::Ready(None),","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":159476,"byte_end":159511,"line_start":1104,"line_end":1104,"column_start":5,"column_end":40}},{"value":"/         _ => panic!(\"should not happen\")","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":159516,"byte_end":159560,"line_start":1105,"line_end":1105,"column_start":5,"column_end":49}},{"value":"/     }","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":159565,"byte_end":159574,"line_start":1106,"line_end":1106,"column_start":5,"column_end":14}},{"value":"/ }).fuse();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":159579,"byte_end":159593,"line_start":1107,"line_end":1107,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":159598,"byte_end":159601,"line_start":1108,"line_end":1108,"column_start":5,"column_end":8}},{"value":"/ let mut iter = block_on_stream(stream);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":159606,"byte_end":159649,"line_start":1109,"line_end":1109,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(Some(1), iter.next());","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":159654,"byte_end":159691,"line_start":1110,"line_end":1110,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(Some(2), iter.next());","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":159696,"byte_end":159733,"line_start":1111,"line_end":1111,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":159738,"byte_end":159772,"line_start":1112,"line_end":1112,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":159777,"byte_end":159811,"line_start":1113,"line_end":1113,"column_start":5,"column_end":39}},{"value":"/ // ...","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":159816,"byte_end":159826,"line_start":1114,"line_end":1114,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":159831,"byte_end":159838,"line_start":1115,"line_end":1115,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2864},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":160779,"byte_end":160785,"line_start":1149,"line_end":1149,"column_start":8,"column_end":14},"name":"by_ref","qualname":"::stream::stream::StreamExt::by_ref","value":"pub fn by_ref(&mut Self) -> &mut Self","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Borrows a stream, rather than consuming it.","sig":null,"attributes":[{"value":"/ Borrows a stream, rather than consuming it.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":159975,"byte_end":160022,"line_start":1123,"line_end":1123,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":160027,"byte_end":160030,"line_start":1124,"line_end":1124,"column_start":5,"column_end":8}},{"value":"/ This is useful to allow applying stream adaptors while still retaining","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":160035,"byte_end":160109,"line_start":1125,"line_end":1125,"column_start":5,"column_end":79}},{"value":"/ ownership of the original stream.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":160114,"byte_end":160151,"line_start":1126,"line_end":1126,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":160156,"byte_end":160159,"line_start":1127,"line_end":1127,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":160164,"byte_end":160178,"line_start":1128,"line_end":1128,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":160183,"byte_end":160186,"line_start":1129,"line_end":1129,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":160191,"byte_end":160198,"line_start":1130,"line_end":1130,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":160203,"byte_end":160244,"line_start":1131,"line_end":1131,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":160249,"byte_end":160292,"line_start":1132,"line_end":1132,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":160297,"byte_end":160300,"line_start":1133,"line_end":1133,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..5);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":160305,"byte_end":160345,"line_start":1134,"line_end":1134,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":160350,"byte_end":160353,"line_start":1135,"line_end":1135,"column_start":5,"column_end":8}},{"value":"/ let sum = stream.by_ref()","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":160358,"byte_end":160387,"line_start":1136,"line_end":1136,"column_start":5,"column_end":34}},{"value":"/                 .take(2)","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":160392,"byte_end":160420,"line_start":1137,"line_end":1137,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":160425,"byte_end":160482,"line_start":1138,"line_end":1138,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":160487,"byte_end":160514,"line_start":1139,"line_end":1139,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 3);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":160519,"byte_end":160542,"line_start":1140,"line_end":1140,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":160547,"byte_end":160550,"line_start":1141,"line_end":1141,"column_start":5,"column_end":8}},{"value":"/ // You can use the stream again","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":160555,"byte_end":160590,"line_start":1142,"line_end":1142,"column_start":5,"column_end":40}},{"value":"/ let sum = stream.take(2)","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":160595,"byte_end":160623,"line_start":1143,"line_end":1143,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":160628,"byte_end":160685,"line_start":1144,"line_end":1144,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":160690,"byte_end":160717,"line_start":1145,"line_end":1145,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 7);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":160722,"byte_end":160745,"line_start":1146,"line_end":1146,"column_start":5,"column_end":28}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":160750,"byte_end":160759,"line_start":1147,"line_end":1147,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":160764,"byte_end":160771,"line_start":1148,"line_end":1148,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2865},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166897,"byte_end":166900,"line_start":1316,"line_end":1316,"column_start":8,"column_end":11},"name":"zip","qualname":"::stream::stream::StreamExt::zip","value":"pub fn zip<St>(Self, St) -> Zip<Self, St> where St: Stream, Self: Sized","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" An adapter for zipping two streams together.","sig":null,"attributes":[{"value":"/ An adapter for zipping two streams together.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166209,"byte_end":166257,"line_start":1294,"line_end":1294,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166262,"byte_end":166265,"line_start":1295,"line_end":1295,"column_start":5,"column_end":8}},{"value":"/ The zipped stream waits for both streams to produce an item, and then","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166270,"byte_end":166343,"line_start":1296,"line_end":1296,"column_start":5,"column_end":78}},{"value":"/ returns that pair. If either stream ends then the zipped stream will","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166348,"byte_end":166420,"line_start":1297,"line_end":1297,"column_start":5,"column_end":77}},{"value":"/ also end.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166425,"byte_end":166438,"line_start":1298,"line_end":1298,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166443,"byte_end":166446,"line_start":1299,"line_end":1299,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166451,"byte_end":166465,"line_start":1300,"line_end":1300,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166470,"byte_end":166473,"line_start":1301,"line_end":1301,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166478,"byte_end":166485,"line_start":1302,"line_end":1302,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166490,"byte_end":166531,"line_start":1303,"line_end":1303,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166536,"byte_end":166579,"line_start":1304,"line_end":1304,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166584,"byte_end":166587,"line_start":1305,"line_end":1305,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(1..=3);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166592,"byte_end":166630,"line_start":1306,"line_end":1306,"column_start":5,"column_end":43}},{"value":"/ let stream2 = stream::iter(5..=10);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166635,"byte_end":166674,"line_start":1307,"line_end":1307,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166679,"byte_end":166682,"line_start":1308,"line_end":1308,"column_start":5,"column_end":8}},{"value":"/ let vec = stream1.zip(stream2)","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166687,"byte_end":166721,"line_start":1309,"line_end":1309,"column_start":5,"column_end":39}},{"value":"/                  .collect::<Vec<_>>()","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166726,"byte_end":166767,"line_start":1310,"line_end":1310,"column_start":5,"column_end":46}},{"value":"/                  .await;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166772,"byte_end":166800,"line_start":1311,"line_end":1311,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(vec![(1, 5), (2, 6), (3, 7)], vec);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166805,"byte_end":166855,"line_start":1312,"line_end":1312,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166860,"byte_end":166869,"line_start":1313,"line_end":1313,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166874,"byte_end":166881,"line_start":1314,"line_end":1314,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166886,"byte_end":166889,"line_start":1315,"line_end":1315,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2867},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167808,"byte_end":167813,"line_start":1347,"line_end":1347,"column_start":8,"column_end":13},"name":"chain","qualname":"::stream::stream::StreamExt::chain","value":"pub fn chain<St>(Self, St) -> Chain<Self, St> where St: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Adapter for chaining two streams.","sig":null,"attributes":[{"value":"/ Adapter for chaining two streams.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167081,"byte_end":167118,"line_start":1324,"line_end":1324,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167123,"byte_end":167126,"line_start":1325,"line_end":1325,"column_start":5,"column_end":8}},{"value":"/ The resulting stream emits elements from the first stream, and when","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167131,"byte_end":167202,"line_start":1326,"line_end":1326,"column_start":5,"column_end":76}},{"value":"/ first stream reaches the end, emits the elements from the second stream.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167207,"byte_end":167283,"line_start":1327,"line_end":1327,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167288,"byte_end":167291,"line_start":1328,"line_end":1328,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167296,"byte_end":167303,"line_start":1329,"line_end":1329,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167308,"byte_end":167349,"line_start":1330,"line_end":1330,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167354,"byte_end":167397,"line_start":1331,"line_end":1331,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167402,"byte_end":167405,"line_start":1332,"line_end":1332,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(vec![Ok(10), Err(false)]);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167410,"byte_end":167467,"line_start":1333,"line_end":1333,"column_start":5,"column_end":62}},{"value":"/ let stream2 = stream::iter(vec![Err(true), Ok(20)]);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167472,"byte_end":167528,"line_start":1334,"line_end":1334,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167533,"byte_end":167536,"line_start":1335,"line_end":1335,"column_start":5,"column_end":8}},{"value":"/ let stream = stream1.chain(stream2);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167541,"byte_end":167581,"line_start":1336,"line_end":1336,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167586,"byte_end":167589,"line_start":1337,"line_end":1337,"column_start":5,"column_end":8}},{"value":"/ let result: Vec<_> = stream.collect().await;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167594,"byte_end":167642,"line_start":1338,"line_end":1338,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(result, vec![","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167647,"byte_end":167675,"line_start":1339,"line_end":1339,"column_start":5,"column_end":33}},{"value":"/     Ok(10),","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167680,"byte_end":167695,"line_start":1340,"line_end":1340,"column_start":5,"column_end":20}},{"value":"/     Err(false),","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167700,"byte_end":167719,"line_start":1341,"line_end":1341,"column_start":5,"column_end":24}},{"value":"/     Err(true),","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167724,"byte_end":167742,"line_start":1342,"line_end":1342,"column_start":5,"column_end":23}},{"value":"/     Ok(20),","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167747,"byte_end":167762,"line_start":1343,"line_end":1343,"column_start":5,"column_end":20}},{"value":"/ ]);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167767,"byte_end":167774,"line_start":1344,"line_end":1344,"column_start":5,"column_end":12}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167779,"byte_end":167788,"line_start":1345,"line_end":1345,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167793,"byte_end":167800,"line_start":1346,"line_end":1346,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2869},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":168151,"byte_end":168159,"line_start":1358,"line_end":1358,"column_start":8,"column_end":16},"name":"peekable","qualname":"::stream::stream::StreamExt::peekable","value":"pub fn peekable(Self) -> Peekable<Self> where Self: Sized","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Creates a new stream which exposes a `peek` method.","sig":null,"attributes":[{"value":"/ Creates a new stream which exposes a `peek` method.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":168005,"byte_end":168060,"line_start":1355,"line_end":1355,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":168065,"byte_end":168068,"line_start":1356,"line_end":1356,"column_start":5,"column_end":8}},{"value":"/ Calling `peek` returns a reference to the next item in the stream.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":168073,"byte_end":168143,"line_start":1357,"line_end":1357,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2870},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":173106,"byte_end":173113,"line_start":1470,"line_end":1470,"column_start":8,"column_end":15},"name":"inspect","qualname":"::stream::stream::StreamExt::inspect","value":"pub fn inspect<F>(Self, F) -> Inspect<Self, F> where F: FnMut(&Self::Item) ->\n(), Self: Sized","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Do something with each item of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with each item of this stream, afterwards passing it on.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":172803,"byte_end":172876,"line_start":1465,"line_end":1465,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":172881,"byte_end":172884,"line_start":1466,"line_end":1466,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Iterator::inspect` method in the standard","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":172889,"byte_end":172958,"line_start":1467,"line_end":1467,"column_start":5,"column_end":74}},{"value":"/ library where it allows easily inspecting each value as it passes","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":172963,"byte_end":173032,"line_start":1468,"line_end":1468,"column_start":5,"column_end":74}},{"value":"/ through the stream, for example to debug what's going on.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":173037,"byte_end":173098,"line_start":1469,"line_end":1469,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2872},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":173569,"byte_end":173580,"line_start":1483,"line_end":1483,"column_start":8,"column_end":19},"name":"left_stream","qualname":"::stream::stream::StreamExt::left_stream","value":"pub fn left_stream<B>(Self) -> Either<Self, B> where B: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the left-hand variant","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":173290,"byte_end":173365,"line_start":1478,"line_end":1478,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":173370,"byte_end":173391,"line_start":1479,"line_end":1479,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":173396,"byte_end":173399,"line_start":1480,"line_end":1480,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_stream` method to write `if`","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":173404,"byte_end":173484,"line_start":1481,"line_end":1481,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":173489,"byte_end":173561,"line_start":1482,"line_end":1482,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2874},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":174033,"byte_end":174045,"line_start":1496,"line_end":1496,"column_start":8,"column_end":20},"name":"right_stream","qualname":"::stream::stream::StreamExt::right_stream","value":"pub fn right_stream<B>(Self) -> Either<B, Self> where B: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the right-hand variant","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":173754,"byte_end":173830,"line_start":1491,"line_end":1491,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":173835,"byte_end":173856,"line_start":1492,"line_end":1492,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":173861,"byte_end":173864,"line_start":1493,"line_end":1493,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_stream` method to write `if`","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":173869,"byte_end":173948,"line_start":1494,"line_end":1494,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":173953,"byte_end":174025,"line_start":1495,"line_end":1495,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2876},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":174321,"byte_end":174336,"line_start":1506,"line_end":1506,"column_start":8,"column_end":23},"name":"poll_next_unpin","qualname":"::stream::stream::StreamExt::poll_next_unpin","value":"pub fn poll_next_unpin(&mut Self, &mut Context) -> Poll<Option<Self::Item>>\nwhere Self: Unpin","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Stream::poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Stream::poll_next`] on [`Unpin`]","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":174220,"byte_end":174291,"line_start":1504,"line_end":1504,"column_start":5,"column_end":76}},{"value":"/ stream types.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":174296,"byte_end":174313,"line_start":1505,"line_end":1505,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2877},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":176437,"byte_end":176453,"line_start":1561,"line_end":1561,"column_start":8,"column_end":24},"name":"select_next_some","qualname":"::stream::stream::StreamExt::select_next_some","value":"pub fn select_next_some(&mut Self) -> SelectNextSome<, Self> where\nSelf: Unpin + FusedStream","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Returns a [`Future`] that resolves when the next item in this stream is\n ready.","sig":null,"attributes":[{"value":"/ Returns a [`Future`] that resolves when the next item in this stream is","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":174483,"byte_end":174558,"line_start":1513,"line_end":1513,"column_start":5,"column_end":80}},{"value":"/ ready.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":174563,"byte_end":174573,"line_start":1514,"line_end":1514,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":174578,"byte_end":174581,"line_start":1515,"line_end":1515,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`next`][StreamExt::next] method, but it won't","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":174586,"byte_end":174659,"line_start":1516,"line_end":1516,"column_start":5,"column_end":78}},{"value":"/ resolve to [`None`] if used on an empty [`Stream`]. Instead, the","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":174664,"byte_end":174732,"line_start":1517,"line_end":1517,"column_start":5,"column_end":73}},{"value":"/ returned future type will return `true` from","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":174737,"byte_end":174785,"line_start":1518,"line_end":1518,"column_start":5,"column_end":53}},{"value":"/ [`FusedFuture::is_terminated`][] when the [`Stream`] is empty, allowing","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":174790,"byte_end":174865,"line_start":1519,"line_end":1519,"column_start":5,"column_end":80}},{"value":"/ [`select_next_some`][StreamExt::select_next_some] to be easily used with","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":174870,"byte_end":174946,"line_start":1520,"line_end":1520,"column_start":5,"column_end":81}},{"value":"/ the [`select!`] macro.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":174951,"byte_end":174977,"line_start":1521,"line_end":1521,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":174982,"byte_end":174985,"line_start":1522,"line_end":1522,"column_start":5,"column_end":8}},{"value":"/ If the future is polled after this [`Stream`] is empty it will panic.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":174990,"byte_end":175063,"line_start":1523,"line_end":1523,"column_start":5,"column_end":78}},{"value":"/ Using the future with a [`FusedFuture`][]-aware primitive like the","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":175068,"byte_end":175138,"line_start":1524,"line_end":1524,"column_start":5,"column_end":75}},{"value":"/ [`select!`] macro will prevent this.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":175143,"byte_end":175183,"line_start":1525,"line_end":1525,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":175188,"byte_end":175191,"line_start":1526,"line_end":1526,"column_start":5,"column_end":8}},{"value":"/ [`FusedFuture`]: futures_core::future::FusedFuture","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":175196,"byte_end":175250,"line_start":1527,"line_end":1527,"column_start":5,"column_end":59}},{"value":"/ [`FusedFuture::is_terminated`]: futures_core::future::FusedFuture::is_terminated","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":175255,"byte_end":175339,"line_start":1528,"line_end":1528,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":175344,"byte_end":175347,"line_start":1529,"line_end":1529,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":175352,"byte_end":175366,"line_start":1530,"line_end":1530,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":175371,"byte_end":175374,"line_start":1531,"line_end":1531,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":175379,"byte_end":175386,"line_start":1532,"line_end":1532,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":175391,"byte_end":175432,"line_start":1533,"line_end":1533,"column_start":5,"column_end":46}},{"value":"/ use futures::{future, select};","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":175437,"byte_end":175471,"line_start":1534,"line_end":1534,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{StreamExt, FuturesUnordered};","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":175476,"byte_end":175531,"line_start":1535,"line_end":1535,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":175536,"byte_end":175539,"line_start":1536,"line_end":1536,"column_start":5,"column_end":8}},{"value":"/ let mut fut = future::ready(1);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":175544,"byte_end":175579,"line_start":1537,"line_end":1537,"column_start":5,"column_end":40}},{"value":"/ let mut async_tasks = FuturesUnordered::new();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":175584,"byte_end":175634,"line_start":1538,"line_end":1538,"column_start":5,"column_end":55}},{"value":"/ let mut total = 0;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":175639,"byte_end":175661,"line_start":1539,"line_end":1539,"column_start":5,"column_end":27}},{"value":"/ loop {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":175666,"byte_end":175676,"line_start":1540,"line_end":1540,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":175681,"byte_end":175698,"line_start":1541,"line_end":1541,"column_start":5,"column_end":22}},{"value":"/         num = fut => {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":175703,"byte_end":175729,"line_start":1542,"line_end":1542,"column_start":5,"column_end":31}},{"value":"/             // First, the `ready` future completes.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":175734,"byte_end":175789,"line_start":1543,"line_end":1543,"column_start":5,"column_end":60}},{"value":"/             total += num;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":175794,"byte_end":175823,"line_start":1544,"line_end":1544,"column_start":5,"column_end":34}},{"value":"/             // Then we spawn a new task onto `async_tasks`,","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":175828,"byte_end":175891,"line_start":1545,"line_end":1545,"column_start":5,"column_end":68}},{"value":"/             async_tasks.push(async { 5 });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":175896,"byte_end":175942,"line_start":1546,"line_end":1546,"column_start":5,"column_end":51}},{"value":"/         },","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":175947,"byte_end":175961,"line_start":1547,"line_end":1547,"column_start":5,"column_end":19}},{"value":"/         // On the next iteration of the loop, the task we spawned","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":175966,"byte_end":176035,"line_start":1548,"line_end":1548,"column_start":5,"column_end":74}},{"value":"/         // completes.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":176040,"byte_end":176065,"line_start":1549,"line_end":1549,"column_start":5,"column_end":30}},{"value":"/         num = async_tasks.select_next_some() => {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":176070,"byte_end":176123,"line_start":1550,"line_end":1550,"column_start":5,"column_end":58}},{"value":"/             total += num;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":176128,"byte_end":176157,"line_start":1551,"line_end":1551,"column_start":5,"column_end":34}},{"value":"/         }","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":176162,"byte_end":176175,"line_start":1552,"line_end":1552,"column_start":5,"column_end":18}},{"value":"/         // Finally, both the `ready` future and `async_tasks` have","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":176180,"byte_end":176250,"line_start":1553,"line_end":1553,"column_start":5,"column_end":75}},{"value":"/         // finished, so we enter the `complete` branch.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":176255,"byte_end":176314,"line_start":1554,"line_end":1554,"column_start":5,"column_end":64}},{"value":"/         complete => break,","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":176319,"byte_end":176349,"line_start":1555,"line_end":1555,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":176354,"byte_end":176363,"line_start":1556,"line_end":1556,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":176368,"byte_end":176373,"line_start":1557,"line_end":1557,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(total, 6);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":176378,"byte_end":176403,"line_start":1558,"line_end":1558,"column_start":5,"column_end":30}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":176408,"byte_end":176417,"line_start":1559,"line_end":1559,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":176422,"byte_end":176429,"line_start":1560,"line_end":1560,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8904},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/and_then.rs","byte_start":292994,"byte_end":293001,"line_start":14,"line_end":14,"column_start":16,"column_end":23},"name":"AndThen","qualname":"::stream::try_stream::and_then::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":8908},{"krate":0,"index":8909},{"krate":0,"index":8910}],"decl_id":null,"docs":" Stream for the [`and_then`](super::TryStreamExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8968},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":255003,"byte_end":255010,"line_start":30,"line_end":30,"column_start":5,"column_end":12},"name":"ErrInto","qualname":"::stream::try_stream::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":8971}],"decl_id":null,"docs":" Stream for the [`err_into`](super::TryStreamExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9037},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":255258,"byte_end":255267,"line_start":37,"line_end":37,"column_start":5,"column_end":14},"name":"InspectOk","qualname":"::stream::try_stream::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":9040}],"decl_id":null,"docs":" Stream for the [`inspect_ok`](super::TryStreamExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9106},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":255568,"byte_end":255578,"line_start":44,"line_end":44,"column_start":5,"column_end":15},"name":"InspectErr","qualname":"::stream::try_stream::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":9109}],"decl_id":null,"docs":" Stream for the [`inspect_err`](super::TryStreamExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9172},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/into_stream.rs","byte_start":295743,"byte_end":295753,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"name":"IntoStream","qualname":"::stream::try_stream::into_stream::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":9174}],"decl_id":null,"docs":" Stream for the [`into_stream`](super::TryStreamExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9215},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":256004,"byte_end":256009,"line_start":55,"line_end":55,"column_start":5,"column_end":10},"name":"MapOk","qualname":"::stream::try_stream::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":9218}],"decl_id":null,"docs":" Stream for the [`map_ok`](super::TryStreamExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9284},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":256286,"byte_end":256292,"line_start":62,"line_end":62,"column_start":5,"column_end":11},"name":"MapErr","qualname":"::stream::try_stream::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":9287}],"decl_id":null,"docs":" Stream for the [`map_err`](super::TryStreamExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9350},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/or_else.rs","byte_start":297101,"byte_end":297107,"line_start":14,"line_end":14,"column_start":16,"column_end":22},"name":"OrElse","qualname":"::stream::try_stream::or_else::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":9354},{"krate":0,"index":9355},{"krate":0,"index":9356}],"decl_id":null,"docs":" Stream for the [`or_else`](super::TryStreamExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9411},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_next.rs","byte_start":299943,"byte_end":299950,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"TryNext","qualname":"::stream::try_stream::try_next::TryNext","value":"TryNext {  }","parent":null,"children":[{"krate":0,"index":9414}],"decl_id":null,"docs":" Future for the [`try_next`](super::TryStreamExt::try_next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_next`](super::TryStreamExt::try_next) method.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_next.rs","byte_start":299776,"byte_end":299846,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_next.rs","byte_start":299864,"byte_end":299931,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":9419},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_for_each.rs","byte_start":301035,"byte_end":301045,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"name":"TryForEach","qualname":"::stream::try_stream::try_for_each::TryForEach","value":"TryForEach {  }","parent":null,"children":[{"krate":0,"index":9423},{"krate":0,"index":9424},{"krate":0,"index":9425}],"decl_id":null,"docs":" Future for the [`try_for_each`](super::TryStreamExt::try_for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9476},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter.rs","byte_start":302931,"byte_end":302940,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"TryFilter","qualname":"::stream::try_stream::try_filter::TryFilter","value":"TryFilter {  }","parent":null,"children":[{"krate":0,"index":9480},{"krate":0,"index":9481},{"krate":0,"index":9482},{"krate":0,"index":9483}],"decl_id":null,"docs":" Stream for the [`try_filter`](super::TryStreamExt::try_filter)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9541},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter_map.rs","byte_start":306075,"byte_end":306087,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TryFilterMap","qualname":"::stream::try_stream::try_filter_map::TryFilterMap","value":"TryFilterMap {  }","parent":null,"children":[{"krate":0,"index":9545},{"krate":0,"index":9546},{"krate":0,"index":9547}],"decl_id":null,"docs":" Stream for the [`try_filter_map`](super::TryStreamExt::try_filter_map)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9602},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_flatten.rs","byte_start":309092,"byte_end":309102,"line_start":13,"line_end":13,"column_start":16,"column_end":26},"name":"TryFlatten","qualname":"::stream::try_stream::try_flatten::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":9604},{"krate":0,"index":9605}],"decl_id":null,"docs":" Stream for the [`try_flatten`](super::TryStreamExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9646},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_collect.rs","byte_start":311280,"byte_end":311290,"line_start":13,"line_end":13,"column_start":16,"column_end":26},"name":"TryCollect","qualname":"::stream::try_stream::try_collect::TryCollect","value":"TryCollect {  }","parent":null,"children":[{"krate":0,"index":9649},{"krate":0,"index":9650}],"decl_id":null,"docs":" Future for the [`try_collect`](super::TryStreamExt::try_collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9695},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_concat.rs","byte_start":312639,"byte_end":312648,"line_start":12,"line_end":12,"column_start":16,"column_end":25},"name":"TryConcat","qualname":"::stream::try_stream::try_concat::TryConcat","value":"TryConcat {  }","parent":null,"children":[{"krate":0,"index":9697},{"krate":0,"index":9698}],"decl_id":null,"docs":" Future for the [`try_concat`](super::TryStreamExt::try_concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9735},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_fold.rs","byte_start":314062,"byte_end":314069,"line_start":12,"line_end":12,"column_start":16,"column_end":23},"name":"TryFold","qualname":"::stream::try_stream::try_fold::TryFold","value":"TryFold {  }","parent":null,"children":[{"krate":0,"index":9740},{"krate":0,"index":9741},{"krate":0,"index":9742},{"krate":0,"index":9743}],"decl_id":null,"docs":" Future for the [`try_fold`](super::TryStreamExt::try_fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":3619},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":318517,"byte_end":318527,"line_start":59,"line_end":59,"column_start":8,"column_end":18},"name":"try_unfold","qualname":"::stream::try_stream::try_unfold::try_unfold","value":"pub fn try_unfold<T, F, Fut, Item>(T, F) -> TryUnfold<T, F, Fut> where\nF: FnMut(T) -> Fut, Fut: TryFuture<Ok = Option<(Item, T)>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","sig":null,"attributes":[{"value":"/ Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":316660,"byte_end":316736,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":316737,"byte_end":316740,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `TryStream::try_fold()` adapter: while","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":316741,"byte_end":316817,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ `TryStream::try_fold()` reduces a `TryStream` to one single value,","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":316818,"byte_end":316888,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/ `try_unfold()` creates a `TryStream` from a seed value.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":316889,"byte_end":316948,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":316949,"byte_end":316952,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `try_unfold()` will call the provided closure with the provided seed, then","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":316953,"byte_end":317031,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ wait for the returned `TryFuture` to complete with `(a, b)`. It will then","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":317032,"byte_end":317109,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ yield the value `a`, and use `b` as the next internal state.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":317110,"byte_end":317174,"line_start":18,"line_end":18,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":317175,"byte_end":317178,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(TryFuture)`, then the","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":317179,"byte_end":317251,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"/ `try_unfold()` will stop producing items and return `Poll::Ready(None)` in","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":317252,"byte_end":317330,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ future calls to `poll()`.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":317331,"byte_end":317360,"line_start":22,"line_end":22,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":317361,"byte_end":317364,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ In case of error generated by the returned `TryFuture`, the error will be","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":317365,"byte_end":317442,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ returned by the `TryStream`. The `TryStream` will then yield","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":317443,"byte_end":317507,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ `Poll::Ready(None)` in future calls to `poll()`.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":317508,"byte_end":317560,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":317561,"byte_end":317564,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":317565,"byte_end":317642,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":317643,"byte_end":317715,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ `TryFuture` using other library functions working on futures, and","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":317716,"byte_end":317785,"line_start":30,"line_end":30,"column_start":1,"column_end":70}},{"value":"/ `try_unfold()` will turn it into a `TryStream` by repeating the operation.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":317786,"byte_end":317864,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":317865,"byte_end":317868,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":317869,"byte_end":317882,"line_start":33,"line_end":33,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":317883,"byte_end":317886,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":317887,"byte_end":317894,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":317895,"byte_end":317928,"line_start":36,"line_end":36,"column_start":1,"column_end":34}},{"value":"/ # struct SomeError;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":317929,"byte_end":317952,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":317953,"byte_end":317994,"line_start":38,"line_end":38,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":317995,"byte_end":318041,"line_start":39,"line_end":39,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":318042,"byte_end":318045,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::try_unfold(0, |state| async move {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":318046,"byte_end":318105,"line_start":41,"line_end":41,"column_start":1,"column_end":60}},{"value":"/     if state < 0 {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":318106,"byte_end":318128,"line_start":42,"line_end":42,"column_start":1,"column_end":23}},{"value":"/         return Err(SomeError);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":318129,"byte_end":318163,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":318164,"byte_end":318173,"line_start":44,"line_end":44,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":318174,"byte_end":318177,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/     if state <= 2 {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":318178,"byte_end":318201,"line_start":46,"line_end":46,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":318202,"byte_end":318241,"line_start":47,"line_end":47,"column_start":1,"column_end":40}},{"value":"/         let yielded = state * 2;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":318242,"byte_end":318278,"line_start":48,"line_end":48,"column_start":1,"column_end":37}},{"value":"/         Ok(Some((yielded, next_state)))","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":318279,"byte_end":318322,"line_start":49,"line_end":49,"column_start":1,"column_end":44}},{"value":"/     } else {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":318323,"byte_end":318339,"line_start":50,"line_end":50,"column_start":1,"column_end":17}},{"value":"/         Ok(None)","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":318340,"byte_end":318360,"line_start":51,"line_end":51,"column_start":1,"column_end":21}},{"value":"/     }","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":318361,"byte_end":318370,"line_start":52,"line_end":52,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":318371,"byte_end":318378,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":318379,"byte_end":318382,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ let result: Result<Vec<i32>, _> = stream.try_collect().await;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":318383,"byte_end":318448,"line_start":55,"line_end":55,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(result, Ok(vec![0, 2, 4]));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":318449,"byte_end":318491,"line_start":56,"line_end":56,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":318492,"byte_end":318501,"line_start":57,"line_end":57,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":318502,"byte_end":318509,"line_start":58,"line_end":58,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9804},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":318890,"byte_end":318899,"line_start":70,"line_end":70,"column_start":16,"column_end":25},"name":"TryUnfold","qualname":"::stream::try_stream::try_unfold::TryUnfold","value":"TryUnfold {  }","parent":null,"children":[{"krate":0,"index":9808},{"krate":0,"index":9809},{"krate":0,"index":9810}],"decl_id":null,"docs":" Stream for the [`try_unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9861},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_skip_while.rs","byte_start":320807,"byte_end":320819,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TrySkipWhile","qualname":"::stream::try_stream::try_skip_while::TrySkipWhile","value":"TrySkipWhile {  }","parent":null,"children":[{"krate":0,"index":9865},{"krate":0,"index":9866},{"krate":0,"index":9867},{"krate":0,"index":9868},{"krate":0,"index":9869}],"decl_id":null,"docs":" Stream for the [`try_skip_while`](super::TryStreamExt::try_skip_while)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9930},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_take_while.rs","byte_start":324363,"byte_end":324375,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TryTakeWhile","qualname":"::stream::try_stream::try_take_while::TryTakeWhile","value":"TryTakeWhile {  }","parent":null,"children":[{"krate":0,"index":9934},{"krate":0,"index":9935},{"krate":0,"index":9936},{"krate":0,"index":9937},{"krate":0,"index":9938}],"decl_id":null,"docs":" Stream for the [`try_take_while`](super::TryStreamExt::try_take_while)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":3761},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":259501,"byte_end":259513,"line_start":157,"line_end":157,"column_start":11,"column_end":23},"name":"TryStreamExt","qualname":"::stream::try_stream::TryStreamExt","value":"TryStreamExt: TryStream","parent":null,"children":[{"krate":0,"index":3762},{"krate":0,"index":3764},{"krate":0,"index":3767},{"krate":0,"index":3770},{"krate":0,"index":3773},{"krate":0,"index":3776},{"krate":0,"index":3778},{"krate":0,"index":3780},{"krate":0,"index":3781},{"krate":0,"index":3782},{"krate":0,"index":3785},{"krate":0,"index":3788},{"krate":0,"index":3791},{"krate":0,"index":3793},{"krate":0,"index":3796},{"krate":0,"index":3800},{"krate":0,"index":3801},{"krate":0,"index":3805},{"krate":0,"index":3806}],"decl_id":null,"docs":" Adapters specific to `Result`-returning streams\n","sig":null,"attributes":[{"value":"/ Adapters specific to `Result`-returning streams","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":259439,"byte_end":259490,"line_start":156,"line_end":156,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3762},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":260055,"byte_end":260063,"line_start":175,"line_end":175,"column_start":8,"column_end":16},"name":"err_into","qualname":"::stream::try_stream::TryStreamExt::err_into","value":"pub fn err_into<E>(Self) -> ErrInto<Self, E> where Self: Sized,\nSelf::Error: Into<E>","parent":{"krate":0,"index":3761},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which converts the error type\n into the one provided.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which converts the error type","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":259531,"byte_end":259605,"line_start":158,"line_end":158,"column_start":5,"column_end":79}},{"value":"/ into the one provided.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":259610,"byte_end":259636,"line_start":159,"line_end":159,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":259641,"byte_end":259644,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":259649,"byte_end":259663,"line_start":161,"line_end":161,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":259668,"byte_end":259671,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":259676,"byte_end":259683,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":259688,"byte_end":259729,"line_start":164,"line_end":164,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":259734,"byte_end":259780,"line_start":165,"line_end":165,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":259785,"byte_end":259788,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":259793,"byte_end":259813,"line_start":167,"line_end":167,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(()), Err(5i32)])","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":259818,"byte_end":259863,"line_start":168,"line_end":168,"column_start":5,"column_end":50}},{"value":"/         .err_into::<i64>();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":259868,"byte_end":259899,"line_start":169,"line_end":169,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":259904,"byte_end":259907,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":259912,"byte_end":259966,"line_start":171,"line_end":171,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(5i64));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":259971,"byte_end":260022,"line_start":172,"line_end":172,"column_start":5,"column_end":56}},{"value":"/ # })","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":260027,"byte_end":260035,"line_start":173,"line_end":173,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":260040,"byte_end":260047,"line_start":174,"line_end":174,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3764},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":260759,"byte_end":260765,"line_start":200,"line_end":200,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::stream::try_stream::TryStreamExt::map_ok","value":"pub fn map_ok<T, F>(Self, F) -> MapOk<Self, F> where Self: Sized,\nF: FnMut(Self::Ok) -> T","parent":{"krate":0,"index":3761},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the success value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the success value","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":260239,"byte_end":260312,"line_start":183,"line_end":183,"column_start":5,"column_end":78}},{"value":"/ using the provided closure.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":260317,"byte_end":260348,"line_start":184,"line_end":184,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":260353,"byte_end":260356,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":260361,"byte_end":260375,"line_start":186,"line_end":186,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":260380,"byte_end":260383,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":260388,"byte_end":260395,"line_start":188,"line_end":188,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":260400,"byte_end":260441,"line_start":189,"line_end":189,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":260446,"byte_end":260492,"line_start":190,"line_end":190,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":260497,"byte_end":260500,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":260505,"byte_end":260525,"line_start":192,"line_end":192,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":260530,"byte_end":260571,"line_start":193,"line_end":193,"column_start":5,"column_end":46}},{"value":"/         .map_ok(|x| x + 2);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":260576,"byte_end":260607,"line_start":194,"line_end":194,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":260612,"byte_end":260615,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(7)));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":260620,"byte_end":260673,"line_start":196,"line_end":196,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(0));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":260678,"byte_end":260726,"line_start":197,"line_end":197,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":260731,"byte_end":260739,"line_start":198,"line_end":198,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":260744,"byte_end":260751,"line_start":199,"line_end":199,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3767},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":261474,"byte_end":261481,"line_start":225,"line_end":225,"column_start":8,"column_end":15},"name":"map_err","qualname":"::stream::try_stream::TryStreamExt::map_err","value":"pub fn map_err<E, F>(Self, F) -> MapErr<Self, F> where Self: Sized,\nF: FnMut(Self::Error) -> E","parent":{"krate":0,"index":3761},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the error value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the error value","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":260955,"byte_end":261026,"line_start":208,"line_end":208,"column_start":5,"column_end":76}},{"value":"/ using the provided closure.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":261031,"byte_end":261062,"line_start":209,"line_end":209,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":261067,"byte_end":261070,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":261075,"byte_end":261089,"line_start":211,"line_end":211,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":261094,"byte_end":261097,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":261102,"byte_end":261109,"line_start":213,"line_end":213,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":261114,"byte_end":261155,"line_start":214,"line_end":214,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":261160,"byte_end":261206,"line_start":215,"line_end":215,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":261211,"byte_end":261214,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":261219,"byte_end":261239,"line_start":217,"line_end":217,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":261244,"byte_end":261285,"line_start":218,"line_end":218,"column_start":5,"column_end":46}},{"value":"/         .map_err(|x| x + 2);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":261290,"byte_end":261322,"line_start":219,"line_end":219,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":261327,"byte_end":261330,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(5)));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":261335,"byte_end":261388,"line_start":221,"line_end":221,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(2));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":261393,"byte_end":261441,"line_start":222,"line_end":222,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":261446,"byte_end":261454,"line_start":223,"line_end":223,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":261459,"byte_end":261466,"line_start":224,"line_end":224,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3770},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":263086,"byte_end":263094,"line_start":271,"line_end":271,"column_start":8,"column_end":16},"name":"and_then","qualname":"::stream::try_stream::TryStreamExt::and_then","value":"pub fn and_then<Fut, F>(Self, F) -> AndThen<Self, Fut, F> where\nF: FnMut(Self::Ok) -> Fut, Fut: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":3761},"children":[],"decl_id":null,"docs":" Chain on a computation for when a value is ready, passing the successful\n results to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a value is ready, passing the successful","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":261673,"byte_end":261749,"line_start":233,"line_end":233,"column_start":5,"column_end":81}},{"value":"/ results to the provided closure `f`.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":261754,"byte_end":261794,"line_start":234,"line_end":234,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":261799,"byte_end":261802,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work when the next successful","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":261807,"byte_end":261883,"line_start":236,"line_end":236,"column_start":5,"column_end":81}},{"value":"/ value on a stream is ready. The closure provided will be yielded a value","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":261888,"byte_end":261964,"line_start":237,"line_end":237,"column_start":5,"column_end":81}},{"value":"/ when ready, and the returned future will then be run to completion to","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":261969,"byte_end":262042,"line_start":238,"line_end":238,"column_start":5,"column_end":78}},{"value":"/ produce the next value on this stream.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":262047,"byte_end":262089,"line_start":239,"line_end":239,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":262094,"byte_end":262097,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ Any errors produced by this stream will not be passed to the closure,","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":262102,"byte_end":262175,"line_start":241,"line_end":241,"column_start":5,"column_end":78}},{"value":"/ and will be passed through.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":262180,"byte_end":262211,"line_start":242,"line_end":242,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":262216,"byte_end":262219,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `TryFuture` trait","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":262224,"byte_end":262298,"line_start":244,"line_end":244,"column_start":5,"column_end":79}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":262303,"byte_end":262377,"line_start":245,"line_end":245,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":262382,"byte_end":262398,"line_start":246,"line_end":246,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":262403,"byte_end":262406,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":262411,"byte_end":262482,"line_start":248,"line_end":248,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":262487,"byte_end":262513,"line_start":249,"line_end":249,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":262518,"byte_end":262521,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ To process the entire stream and return a single future representing","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":262526,"byte_end":262598,"line_start":251,"line_end":251,"column_start":5,"column_end":77}},{"value":"/ success or error, use `try_for_each` instead.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":262603,"byte_end":262652,"line_start":252,"line_end":252,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":262657,"byte_end":262660,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":262665,"byte_end":262679,"line_start":254,"line_end":254,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":262684,"byte_end":262687,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":262692,"byte_end":262699,"line_start":256,"line_end":256,"column_start":5,"column_end":12}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":262704,"byte_end":262735,"line_start":257,"line_end":257,"column_start":5,"column_end":36}},{"value":"/ use futures::future;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":262740,"byte_end":262764,"line_start":258,"line_end":258,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":262769,"byte_end":262807,"line_start":259,"line_end":259,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":262812,"byte_end":262815,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ let (_tx, rx) = mpsc::channel::<Result<i32, ()>>(1);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":262820,"byte_end":262876,"line_start":261,"line_end":261,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":262881,"byte_end":262884,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ let rx = rx.and_then(|result| {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":262889,"byte_end":262924,"line_start":263,"line_end":263,"column_start":5,"column_end":40}},{"value":"/     future::ok(if result % 2 == 0 {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":262929,"byte_end":262968,"line_start":264,"line_end":264,"column_start":5,"column_end":44}},{"value":"/         Some(result)","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":262973,"byte_end":262997,"line_start":265,"line_end":265,"column_start":5,"column_end":29}},{"value":"/     } else {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":263002,"byte_end":263018,"line_start":266,"line_end":266,"column_start":5,"column_end":21}},{"value":"/         None","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":263023,"byte_end":263039,"line_start":267,"line_end":267,"column_start":5,"column_end":21}},{"value":"/     })","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":263044,"byte_end":263054,"line_start":268,"line_end":268,"column_start":5,"column_end":15}},{"value":"/ });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":263059,"byte_end":263066,"line_start":269,"line_end":269,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":263071,"byte_end":263078,"line_start":270,"line_end":270,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3773},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":264246,"byte_end":264253,"line_start":297,"line_end":297,"column_start":8,"column_end":15},"name":"or_else","qualname":"::stream::try_stream::TryStreamExt::or_else","value":"pub fn or_else<Fut, F>(Self, F) -> OrElse<Self, Fut, F> where\nF: FnMut(Self::Error) -> Fut, Fut: TryFuture<Ok = Self::Ok>, Self: Sized","parent":{"krate":0,"index":3761},"children":[],"decl_id":null,"docs":" Chain on a computation for when an error happens, passing the\n erroneous result to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when an error happens, passing the","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":263347,"byte_end":263412,"line_start":280,"line_end":280,"column_start":5,"column_end":70}},{"value":"/ erroneous result to the provided closure `f`.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":263417,"byte_end":263466,"line_start":281,"line_end":281,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":263471,"byte_end":263474,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work and attempt to recover from","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":263479,"byte_end":263558,"line_start":283,"line_end":283,"column_start":5,"column_end":84}},{"value":"/ an error if one happens. The closure provided will be yielded an error","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":263563,"byte_end":263637,"line_start":284,"line_end":284,"column_start":5,"column_end":79}},{"value":"/ when one appears, and the returned future will then be run to completion","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":263642,"byte_end":263718,"line_start":285,"line_end":285,"column_start":5,"column_end":81}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":263723,"byte_end":263768,"line_start":286,"line_end":286,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":263773,"byte_end":263776,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ Any successful values produced by this stream will not be passed to the","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":263781,"byte_end":263856,"line_start":288,"line_end":288,"column_start":5,"column_end":80}},{"value":"/ closure, and will be passed through.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":263861,"byte_end":263901,"line_start":289,"line_end":289,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":263906,"byte_end":263909,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the [`TryFuture`](futures_core::future::TryFuture) trait","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":263914,"byte_end":264023,"line_start":291,"line_end":291,"column_start":5,"column_end":114}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":264028,"byte_end":264102,"line_start":292,"line_end":292,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":264107,"byte_end":264123,"line_start":293,"line_end":293,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":264128,"byte_end":264131,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":264136,"byte_end":264207,"line_start":295,"line_end":295,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":264212,"byte_end":264238,"line_start":296,"line_end":296,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3776},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":264805,"byte_end":264815,"line_start":312,"line_end":312,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::stream::try_stream::TryStreamExt::inspect_ok","value":"pub fn inspect_ok<F>(Self, F) -> InspectOk<Self, F> where F: FnMut(&Self::Ok)\n-> (), Self: Sized","parent":{"krate":0,"index":3761},"children":[],"decl_id":null,"docs":" Do something with the success value of this stream, afterwards passing\n it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of this stream, afterwards passing","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":264502,"byte_end":264576,"line_start":306,"line_end":306,"column_start":5,"column_end":79}},{"value":"/ it on.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":264581,"byte_end":264591,"line_start":307,"line_end":307,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":264596,"byte_end":264599,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":264604,"byte_end":264674,"line_start":309,"line_end":309,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the success value as it passes through the stream, for","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":264679,"byte_end":264755,"line_start":310,"line_end":310,"column_start":5,"column_end":81}},{"value":"/ example to debug what's going on.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":264760,"byte_end":264797,"line_start":311,"line_end":311,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3778},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":265304,"byte_end":265315,"line_start":325,"line_end":325,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::stream::try_stream::TryStreamExt::inspect_err","value":"pub fn inspect_err<F>(Self, F) -> InspectErr<Self, F> where\nF: FnMut(&Self::Error) -> (), Self: Sized","parent":{"krate":0,"index":3761},"children":[],"decl_id":null,"docs":" Do something with the error value of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of this stream, afterwards passing it on.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":265013,"byte_end":265092,"line_start":320,"line_end":320,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":265097,"byte_end":265100,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":265105,"byte_end":265175,"line_start":322,"line_end":322,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the error value as it passes through the stream, for","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":265180,"byte_end":265254,"line_start":323,"line_end":323,"column_start":5,"column_end":79}},{"value":"/ example to debug what's going on.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":265259,"byte_end":265296,"line_start":324,"line_end":324,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3780},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":266236,"byte_end":266247,"line_start":354,"line_end":354,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::stream::try_stream::TryStreamExt::into_stream","value":"pub fn into_stream(Self) -> IntoStream<Self> where Self: Sized","parent":{"krate":0,"index":3761},"children":[],"decl_id":null,"docs":" Wraps a [`TryStream`] into a type that implements\n [`Stream`](futures_core::stream::Stream)","sig":null,"attributes":[{"value":"/ Wraps a [`TryStream`] into a type that implements","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":265518,"byte_end":265571,"line_start":333,"line_end":333,"column_start":5,"column_end":58}},{"value":"/ [`Stream`](futures_core::stream::Stream)","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":265576,"byte_end":265620,"line_start":334,"line_end":334,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":265625,"byte_end":265628,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ [`TryStream`]s currently do not implement the","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":265633,"byte_end":265682,"line_start":336,"line_end":336,"column_start":5,"column_end":54}},{"value":"/ [`Stream`](futures_core::stream::Stream) trait because of limitations","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":265687,"byte_end":265760,"line_start":337,"line_end":337,"column_start":5,"column_end":78}},{"value":"/ of the compiler.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":265765,"byte_end":265785,"line_start":338,"line_end":338,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":265790,"byte_end":265793,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":265798,"byte_end":265812,"line_start":340,"line_end":340,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":265817,"byte_end":265820,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":265825,"byte_end":265832,"line_start":342,"line_end":342,"column_start":5,"column_end":12}},{"value":"/ use futures::stream::{Stream, TryStream, TryStreamExt};","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":265837,"byte_end":265896,"line_start":343,"line_end":343,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":265901,"byte_end":265904,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":265909,"byte_end":265928,"line_start":345,"line_end":345,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":265933,"byte_end":265951,"line_start":346,"line_end":346,"column_start":5,"column_end":23}},{"value":"/ fn make_try_stream() -> impl TryStream<Ok = T, Error = E> { // ... }","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":265956,"byte_end":266028,"line_start":347,"line_end":347,"column_start":5,"column_end":77}},{"value":"/ # futures::stream::empty()","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":266033,"byte_end":266063,"line_start":348,"line_end":348,"column_start":5,"column_end":35}},{"value":"/ # }","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":266068,"byte_end":266075,"line_start":349,"line_end":349,"column_start":5,"column_end":12}},{"value":"/ fn take_stream(stream: impl Stream<Item = Result<T, E>>) { /* ... */ }","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":266080,"byte_end":266154,"line_start":350,"line_end":350,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":266159,"byte_end":266162,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ take_stream(make_try_stream().into_stream());","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":266167,"byte_end":266216,"line_start":352,"line_end":352,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":266221,"byte_end":266228,"line_start":353,"line_end":353,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3781},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":267142,"byte_end":267150,"line_start":381,"line_end":381,"column_start":8,"column_end":16},"name":"try_next","qualname":"::stream::try_stream::TryStreamExt::try_next","value":"pub fn try_next(&mut Self) -> TryNext<, Self> where Self: Unpin","parent":{"krate":0,"index":3761},"children":[],"decl_id":null,"docs":" Creates a future that attempts to resolve the next item in the stream.\n If an error is encountered before the next item, the error is returned\n instead.","sig":null,"attributes":[{"value":"/ Creates a future that attempts to resolve the next item in the stream.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":266403,"byte_end":266477,"line_start":361,"line_end":361,"column_start":5,"column_end":79}},{"value":"/ If an error is encountered before the next item, the error is returned","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":266482,"byte_end":266556,"line_start":362,"line_end":362,"column_start":5,"column_end":79}},{"value":"/ instead.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":266561,"byte_end":266573,"line_start":363,"line_end":363,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":266578,"byte_end":266581,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Stream::next` combinator, but returns a","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":266586,"byte_end":266653,"line_start":365,"line_end":365,"column_start":5,"column_end":72}},{"value":"/ `Result<Option<T>, E>` rather than an `Option<Result<T, E>>`, making","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":266658,"byte_end":266730,"line_start":366,"line_end":366,"column_start":5,"column_end":77}},{"value":"/ for easy use with the `?` operator.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":266735,"byte_end":266774,"line_start":367,"line_end":367,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":266779,"byte_end":266782,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":266787,"byte_end":266801,"line_start":369,"line_end":369,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":266806,"byte_end":266809,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":266814,"byte_end":266821,"line_start":371,"line_end":371,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":266826,"byte_end":266867,"line_start":372,"line_end":372,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":266872,"byte_end":266918,"line_start":373,"line_end":373,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":266923,"byte_end":266926,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(vec![Ok(()), Err(())]);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":266931,"byte_end":266988,"line_start":375,"line_end":375,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":266993,"byte_end":266996,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":267001,"byte_end":267055,"line_start":377,"line_end":377,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(()));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":267060,"byte_end":267109,"line_start":378,"line_end":378,"column_start":5,"column_end":54}},{"value":"/ # })","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":267114,"byte_end":267122,"line_start":379,"line_end":379,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":267127,"byte_end":267134,"line_start":380,"line_end":380,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3782},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":268502,"byte_end":268514,"line_start":421,"line_end":421,"column_start":8,"column_end":20},"name":"try_for_each","qualname":"::stream::try_stream::TryStreamExt::try_for_each","value":"pub fn try_for_each<Fut, F>(Self, F) -> TryForEach<Self, Fut, F> where\nF: FnMut(Self::Ok) -> Fut, Fut: TryFuture<Ok = (), Error = ()>, Self: Sized","parent":{"krate":0,"index":3761},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided\n asynchronous closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Attempts to run this stream to completion, executing the provided","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":267317,"byte_end":267386,"line_start":388,"line_end":388,"column_start":5,"column_end":74}},{"value":"/ asynchronous closure for each element on the stream.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":267391,"byte_end":267447,"line_start":389,"line_end":389,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":267452,"byte_end":267455,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ The provided closure will be called for each item this stream produces,","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":267460,"byte_end":267535,"line_start":391,"line_end":391,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":267540,"byte_end":267610,"line_start":392,"line_end":392,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":267615,"byte_end":267653,"line_start":393,"line_end":393,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":267658,"byte_end":267661,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ The returned value is a [`Future`](futures_core::future::Future) where the","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":267666,"byte_end":267744,"line_start":395,"line_end":395,"column_start":5,"column_end":83}},{"value":"/ [`Output`](futures_core::future::Future::Output) type is","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":267749,"byte_end":267809,"line_start":396,"line_end":396,"column_start":5,"column_end":65}},{"value":"/ `Result<(), Self::Error>`. If any of the intermediate","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":267814,"byte_end":267871,"line_start":397,"line_end":397,"column_start":5,"column_end":62}},{"value":"/ futures or the stream returns an error, this future will return","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":267876,"byte_end":267943,"line_start":398,"line_end":398,"column_start":5,"column_end":72}},{"value":"/ immediately with an error.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":267948,"byte_end":267978,"line_start":399,"line_end":399,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":267983,"byte_end":267986,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":267991,"byte_end":268005,"line_start":401,"line_end":401,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":268010,"byte_end":268013,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":268018,"byte_end":268025,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":268030,"byte_end":268071,"line_start":404,"line_end":404,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":268076,"byte_end":268100,"line_start":405,"line_end":405,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":268105,"byte_end":268151,"line_start":406,"line_end":406,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":268156,"byte_end":268159,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0i32;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":268164,"byte_end":268185,"line_start":408,"line_end":408,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":268190,"byte_end":268193,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":268198,"byte_end":268203,"line_start":410,"line_end":410,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(Ok(1)).try_for_each(|item| {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":268208,"byte_end":268269,"line_start":411,"line_end":411,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":268274,"byte_end":268296,"line_start":412,"line_end":412,"column_start":5,"column_end":27}},{"value":"/         future::ready(if x == 3 { Err(()) } else { Ok(()) })","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":268301,"byte_end":268365,"line_start":413,"line_end":413,"column_start":5,"column_end":69}},{"value":"/     });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":268370,"byte_end":268381,"line_start":414,"line_end":414,"column_start":5,"column_end":16}},{"value":"/     assert_eq!(fut.await, Err(()));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":268386,"byte_end":268425,"line_start":415,"line_end":415,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":268430,"byte_end":268435,"line_start":416,"line_end":416,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":268440,"byte_end":268443,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":268448,"byte_end":268469,"line_start":418,"line_end":418,"column_start":5,"column_end":26}},{"value":"/ # })","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":268474,"byte_end":268482,"line_start":419,"line_end":419,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":268487,"byte_end":268494,"line_start":420,"line_end":420,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3785},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":269527,"byte_end":269541,"line_start":451,"line_end":451,"column_start":8,"column_end":22},"name":"try_skip_while","qualname":"::stream::try_stream::TryStreamExt::try_skip_while","value":"pub fn try_skip_while<Fut, F>(Self, F) -> TrySkipWhile<Self, Fut, F> where\nF: FnMut(&Self::Ok) -> Fut, Fut: TryFuture<Ok = bool, Error = bool>,\nSelf: Sized","parent":{"krate":0,"index":3761},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":268778,"byte_end":268852,"line_start":430,"line_end":430,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":268857,"byte_end":268880,"line_start":431,"line_end":431,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":268885,"byte_end":268888,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":268893,"byte_end":268924,"line_start":433,"line_end":433,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::skip_while`](crate::stream::StreamExt::skip_while) but exits","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":268929,"byte_end":269006,"line_start":434,"line_end":434,"column_start":5,"column_end":82}},{"value":"/ early if an error occurs.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":269011,"byte_end":269040,"line_start":435,"line_end":435,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":269045,"byte_end":269048,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":269053,"byte_end":269067,"line_start":437,"line_end":437,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":269072,"byte_end":269075,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":269080,"byte_end":269087,"line_start":439,"line_end":439,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":269092,"byte_end":269133,"line_start":440,"line_end":440,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":269138,"byte_end":269162,"line_start":441,"line_end":441,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":269167,"byte_end":269213,"line_start":442,"line_end":442,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":269218,"byte_end":269221,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(3), Ok(2)]);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":269226,"byte_end":269295,"line_start":444,"line_end":444,"column_start":5,"column_end":74}},{"value":"/ let stream = stream.try_skip_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":269300,"byte_end":269370,"line_start":445,"line_end":445,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":269375,"byte_end":269378,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":269383,"byte_end":269450,"line_start":447,"line_end":447,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![3, 2]));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":269455,"byte_end":269494,"line_start":448,"line_end":448,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":269499,"byte_end":269507,"line_start":449,"line_end":449,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":269512,"byte_end":269519,"line_start":450,"line_end":450,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3788},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":270574,"byte_end":270588,"line_start":481,"line_end":481,"column_start":8,"column_end":22},"name":"try_take_while","qualname":"::stream::try_stream::TryStreamExt::try_take_while","value":"pub fn try_take_while<Fut, F>(Self, F) -> TryTakeWhile<Self, Fut, F> where\nF: FnMut(&Self::Ok) -> Fut, Fut: TryFuture<Ok = bool, Error = bool>,\nSelf: Sized","parent":{"krate":0,"index":3761},"children":[],"decl_id":null,"docs":" Take elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements on this stream while the provided asynchronous predicate","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":269818,"byte_end":269892,"line_start":460,"line_end":460,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":269897,"byte_end":269920,"line_start":461,"line_end":461,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":269925,"byte_end":269928,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":269933,"byte_end":269964,"line_start":463,"line_end":463,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::take_while`](crate::stream::StreamExt::take_while) but exits","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":269969,"byte_end":270046,"line_start":464,"line_end":464,"column_start":5,"column_end":82}},{"value":"/ early if an error occurs.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":270051,"byte_end":270080,"line_start":465,"line_end":465,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":270085,"byte_end":270088,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":270093,"byte_end":270107,"line_start":467,"line_end":467,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":270112,"byte_end":270115,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":270120,"byte_end":270127,"line_start":469,"line_end":469,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":270132,"byte_end":270173,"line_start":470,"line_end":470,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":270178,"byte_end":270202,"line_start":471,"line_end":471,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":270207,"byte_end":270253,"line_start":472,"line_end":472,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":270258,"byte_end":270261,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2), Ok(3), Ok(2)]);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":270266,"byte_end":270342,"line_start":474,"line_end":474,"column_start":5,"column_end":81}},{"value":"/ let stream = stream.try_take_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":270347,"byte_end":270417,"line_start":475,"line_end":475,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":270422,"byte_end":270425,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":270430,"byte_end":270497,"line_start":477,"line_end":477,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![1, 2]));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":270502,"byte_end":270541,"line_start":478,"line_end":478,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":270546,"byte_end":270554,"line_start":479,"line_end":479,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":270559,"byte_end":270566,"line_start":480,"line_end":480,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3791},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":273975,"byte_end":273986,"line_start":580,"line_end":580,"column_start":8,"column_end":19},"name":"try_collect","qualname":"::stream::try_stream::TryStreamExt::try_collect","value":"pub fn try_collect<C: Default + Extend<Self::Ok>>(Self) -> TryCollect<Self, C>\nwhere Self: Sized","parent":{"krate":0,"index":3761},"children":[],"decl_id":null,"docs":" Attempt to transform a stream into a collection,\n returning a future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Attempt to transform a stream into a collection,","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":272936,"byte_end":272988,"line_start":550,"line_end":550,"column_start":5,"column_end":57}},{"value":"/ returning a future representing the result of that computation.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":272993,"byte_end":273060,"line_start":551,"line_end":551,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":273065,"byte_end":273068,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ This combinator will collect all successful results of this stream and","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":273073,"byte_end":273147,"line_start":553,"line_end":553,"column_start":5,"column_end":79}},{"value":"/ collect them into the specified collection type. If an error happens then all","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":273152,"byte_end":273233,"line_start":554,"line_end":554,"column_start":5,"column_end":86}},{"value":"/ collected elements will be dropped and the error will be returned.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":273238,"byte_end":273308,"line_start":555,"line_end":555,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":273313,"byte_end":273316,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":273321,"byte_end":273389,"line_start":557,"line_end":557,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":273394,"byte_end":273397,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":273402,"byte_end":273416,"line_start":559,"line_end":559,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":273421,"byte_end":273424,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":273429,"byte_end":273436,"line_start":561,"line_end":561,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":273441,"byte_end":273482,"line_start":562,"line_end":562,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":273487,"byte_end":273518,"line_start":563,"line_end":563,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":273523,"byte_end":273561,"line_start":564,"line_end":564,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":273566,"byte_end":273586,"line_start":565,"line_end":565,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":273591,"byte_end":273594,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":273599,"byte_end":273636,"line_start":567,"line_end":567,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":273641,"byte_end":273644,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":273649,"byte_end":273676,"line_start":569,"line_end":569,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":273681,"byte_end":273705,"line_start":570,"line_end":570,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(Ok(i)).unwrap();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":273710,"byte_end":273756,"line_start":571,"line_end":571,"column_start":5,"column_end":51}},{"value":"/     }","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":273761,"byte_end":273770,"line_start":572,"line_end":572,"column_start":5,"column_end":14}},{"value":"/     tx.unbounded_send(Err(6)).unwrap();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":273775,"byte_end":273818,"line_start":573,"line_end":573,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":273823,"byte_end":273830,"line_start":574,"line_end":574,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":273835,"byte_end":273838,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = rx.try_collect().await;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":273843,"byte_end":273906,"line_start":576,"line_end":576,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(output, Err(6));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":273911,"byte_end":273942,"line_start":577,"line_end":577,"column_start":5,"column_end":36}},{"value":"/ # })","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":273947,"byte_end":273955,"line_start":578,"line_end":578,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":273960,"byte_end":273967,"line_start":579,"line_end":579,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3793},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":277334,"byte_end":277344,"line_start":664,"line_end":664,"column_start":8,"column_end":18},"name":"try_filter","qualname":"::stream::try_stream::TryStreamExt::try_filter","value":"pub fn try_filter<Fut, F>(Self, F) -> TryFilter<Self, Fut, F> where\nFut: Future<Output = bool>, F: FnMut(&Self::Ok) -> Fut, Self: Sized","parent":{"krate":0,"index":3761},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream according to the","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":276046,"byte_end":276119,"line_start":634,"line_end":634,"column_start":5,"column_end":78}},{"value":"/ provided asynchronous closure.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":276124,"byte_end":276158,"line_start":635,"line_end":635,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":276163,"byte_end":276166,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":276171,"byte_end":276246,"line_start":637,"line_end":637,"column_start":5,"column_end":80}},{"value":"/ will be run on them. If the predicate returns a `Future` which resolves","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":276251,"byte_end":276326,"line_start":638,"line_end":638,"column_start":5,"column_end":80}},{"value":"/ to `true`, then the stream will yield the value, but if the predicate","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":276331,"byte_end":276404,"line_start":639,"line_end":639,"column_start":5,"column_end":78}},{"value":"/ return a `Future` which resolves to `false`, then the value will be","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":276409,"byte_end":276480,"line_start":640,"line_end":640,"column_start":5,"column_end":76}},{"value":"/ discarded and the next value will be produced.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":276485,"byte_end":276535,"line_start":641,"line_end":641,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":276540,"byte_end":276543,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":276548,"byte_end":276619,"line_start":643,"line_end":643,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":276624,"byte_end":276627,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":276632,"byte_end":276708,"line_start":645,"line_end":645,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":276713,"byte_end":276783,"line_start":646,"line_end":646,"column_start":5,"column_end":75}},{"value":"/ the standard library.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":276788,"byte_end":276813,"line_start":647,"line_end":647,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":276818,"byte_end":276821,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":276826,"byte_end":276840,"line_start":649,"line_end":649,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":276845,"byte_end":276852,"line_start":650,"line_end":650,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":276857,"byte_end":276898,"line_start":651,"line_end":651,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":276903,"byte_end":276927,"line_start":652,"line_end":652,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":276932,"byte_end":276989,"line_start":653,"line_end":653,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":276994,"byte_end":276997,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(2i32), Ok(3i32), Err(\"error\")]);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":277002,"byte_end":277082,"line_start":655,"line_end":655,"column_start":5,"column_end":85}},{"value":"/ let mut evens = stream.try_filter(|x| {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":277087,"byte_end":277130,"line_start":656,"line_end":656,"column_start":5,"column_end":48}},{"value":"/     future::ready(x % 2 == 0)","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":277135,"byte_end":277168,"line_start":657,"line_end":657,"column_start":5,"column_end":38}},{"value":"/ });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":277173,"byte_end":277180,"line_start":658,"line_end":658,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":277185,"byte_end":277188,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(evens.next().await, Some(Ok(2)));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":277193,"byte_end":277241,"line_start":660,"line_end":660,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(evens.next().await, Some(Err(\"error\")));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":277246,"byte_end":277301,"line_start":661,"line_end":661,"column_start":5,"column_end":60}},{"value":"/ # })","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":277306,"byte_end":277314,"line_start":662,"line_end":662,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":277319,"byte_end":277326,"line_start":663,"line_end":663,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3796},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":278971,"byte_end":278985,"line_start":705,"line_end":705,"column_start":8,"column_end":22},"name":"try_filter_map","qualname":"::stream::try_stream::TryStreamExt::try_filter_map","value":"pub fn try_filter_map<Fut, F, T>(Self, F) -> TryFilterMap<Self, Fut, F> where\nFut: TryFuture<Ok = Option<T>, Error = Option<T>>, F: FnMut(Self::Ok) -> Fut,\nSelf: Sized","parent":{"krate":0,"index":3761},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream while\n simultaneously mapping them to a different type according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream while","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":277595,"byte_end":277657,"line_start":673,"line_end":673,"column_start":5,"column_end":67}},{"value":"/ simultaneously mapping them to a different type according to the","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":277662,"byte_end":277730,"line_start":674,"line_end":674,"column_start":5,"column_end":73}},{"value":"/ provided asynchronous closure.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":277735,"byte_end":277769,"line_start":675,"line_end":675,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":277774,"byte_end":277777,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":277782,"byte_end":277857,"line_start":677,"line_end":677,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":277862,"byte_end":277937,"line_start":678,"line_end":678,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":277942,"byte_end":278018,"line_start":679,"line_end":679,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":278023,"byte_end":278088,"line_start":680,"line_end":680,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":278093,"byte_end":278096,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":278101,"byte_end":278172,"line_start":682,"line_end":682,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":278177,"byte_end":278180,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":278185,"byte_end":278261,"line_start":684,"line_end":684,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":278266,"byte_end":278340,"line_start":685,"line_end":685,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":278345,"byte_end":278370,"line_start":686,"line_end":686,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":278375,"byte_end":278378,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":278383,"byte_end":278397,"line_start":688,"line_end":688,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":278402,"byte_end":278409,"line_start":689,"line_end":689,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":278414,"byte_end":278455,"line_start":690,"line_end":690,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":278460,"byte_end":278517,"line_start":691,"line_end":691,"column_start":5,"column_end":62}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":278522,"byte_end":278547,"line_start":692,"line_end":692,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":278552,"byte_end":278555,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(6i32), Err(\"error\")]);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":278560,"byte_end":278630,"line_start":694,"line_end":694,"column_start":5,"column_end":75}},{"value":"/ let halves = stream.try_filter_map(|x| async move {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":278635,"byte_end":278690,"line_start":695,"line_end":695,"column_start":5,"column_end":60}},{"value":"/     let ret = if x % 2 == 0 { Some(x / 2) } else { None };","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":278695,"byte_end":278757,"line_start":696,"line_end":696,"column_start":5,"column_end":67}},{"value":"/     Ok(ret)","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":278762,"byte_end":278777,"line_start":697,"line_end":697,"column_start":5,"column_end":20}},{"value":"/ });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":278782,"byte_end":278789,"line_start":698,"line_end":698,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":278794,"byte_end":278797,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ pin_mut!(halves);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":278802,"byte_end":278823,"line_start":700,"line_end":700,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(halves.next().await, Some(Ok(3)));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":278828,"byte_end":278877,"line_start":701,"line_end":701,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(halves.next().await, Some(Err(\"error\")));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":278882,"byte_end":278938,"line_start":702,"line_end":702,"column_start":5,"column_end":61}},{"value":"/ # })","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":278943,"byte_end":278951,"line_start":703,"line_end":703,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":278956,"byte_end":278963,"line_start":704,"line_end":704,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3800},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":280677,"byte_end":280688,"line_start":752,"line_end":752,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::stream::try_stream::TryStreamExt::try_flatten","value":"pub fn try_flatten(Self) -> TryFlatten<Self> where Self::Ok: TryStream,\n<Self::Ok as TryStream>::Error: From<Self::Error>, Self: Sized","parent":{"krate":0,"index":3761},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":279262,"byte_end":279327,"line_start":714,"line_end":714,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":279332,"byte_end":279335,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ If this stream's elements are themselves streams then this combinator","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":279340,"byte_end":279413,"line_start":716,"line_end":716,"column_start":5,"column_end":78}},{"value":"/ will flatten out the entire stream to one long chain of elements. Any","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":279418,"byte_end":279491,"line_start":717,"line_end":717,"column_start":5,"column_end":78}},{"value":"/ errors are passed through without looking at them, but otherwise each","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":279496,"byte_end":279569,"line_start":718,"line_end":718,"column_start":5,"column_end":78}},{"value":"/ individual stream will get exhausted before moving on to the next.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":279574,"byte_end":279644,"line_start":719,"line_end":719,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":279649,"byte_end":279652,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":279657,"byte_end":279671,"line_start":721,"line_end":721,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":279676,"byte_end":279679,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":279684,"byte_end":279691,"line_start":723,"line_end":723,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":279696,"byte_end":279737,"line_start":724,"line_end":724,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":279742,"byte_end":279773,"line_start":725,"line_end":725,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":279778,"byte_end":279829,"line_start":726,"line_end":726,"column_start":5,"column_end":56}},{"value":"/ use std::thread;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":279834,"byte_end":279854,"line_start":727,"line_end":727,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":279859,"byte_end":279862,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":279867,"byte_end":279906,"line_start":729,"line_end":729,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":279911,"byte_end":279950,"line_start":730,"line_end":730,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":279955,"byte_end":279994,"line_start":731,"line_end":731,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":279999,"byte_end":280002,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":280007,"byte_end":280034,"line_start":733,"line_end":733,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(Ok(1)).unwrap();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":280039,"byte_end":280082,"line_start":734,"line_end":734,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":280087,"byte_end":280094,"line_start":735,"line_end":735,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":280099,"byte_end":280126,"line_start":736,"line_end":736,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(Ok(2)).unwrap();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":280131,"byte_end":280174,"line_start":737,"line_end":737,"column_start":5,"column_end":48}},{"value":"/     tx2.unbounded_send(Err(3)).unwrap();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":280179,"byte_end":280223,"line_start":738,"line_end":738,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":280228,"byte_end":280235,"line_start":739,"line_end":739,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":280240,"byte_end":280267,"line_start":740,"line_end":740,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(Ok(rx1)).unwrap();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":280272,"byte_end":280317,"line_start":741,"line_end":741,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Ok(rx2)).unwrap();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":280322,"byte_end":280367,"line_start":742,"line_end":742,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Err(4)).unwrap();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":280372,"byte_end":280416,"line_start":743,"line_end":743,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":280421,"byte_end":280428,"line_start":744,"line_end":744,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":280433,"byte_end":280436,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ let mut stream = rx3.try_flatten();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":280441,"byte_end":280480,"line_start":746,"line_end":746,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(1)));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":280485,"byte_end":280534,"line_start":747,"line_end":747,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(2)));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":280539,"byte_end":280588,"line_start":748,"line_end":748,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Err(3)));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":280593,"byte_end":280643,"line_start":749,"line_end":749,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":280648,"byte_end":280657,"line_start":750,"line_end":750,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":280662,"byte_end":280669,"line_start":751,"line_end":751,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3801},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":282280,"byte_end":282288,"line_start":791,"line_end":791,"column_start":8,"column_end":16},"name":"try_fold","qualname":"::stream::try_stream::TryStreamExt::try_fold","value":"pub fn try_fold<T, Fut, F>(Self, T, F) -> TryFold<Self, Fut, T, F> where\nF: FnMut(T, Self::Ok) -> Fut, Fut: TryFuture<Ok = T, Error = T>, Self: Sized","parent":{"krate":0,"index":3761},"children":[],"decl_id":null,"docs":" Attempt to execute an accumulating asynchronous computation over a\n stream, collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Attempt to execute an accumulating asynchronous computation over a","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":280993,"byte_end":281063,"line_start":763,"line_end":763,"column_start":5,"column_end":75}},{"value":"/ stream, collecting all the values into one final result.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":281068,"byte_end":281128,"line_start":764,"line_end":764,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":281133,"byte_end":281136,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":281141,"byte_end":281211,"line_start":766,"line_end":766,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":281216,"byte_end":281292,"line_start":767,"line_end":767,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":281297,"byte_end":281373,"line_start":768,"line_end":768,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":281378,"byte_end":281448,"line_start":769,"line_end":769,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":281453,"byte_end":281479,"line_start":770,"line_end":770,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":281484,"byte_end":281487,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`fold`](crate::stream::StreamExt::fold), but will","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":281492,"byte_end":281572,"line_start":772,"line_end":772,"column_start":5,"column_end":85}},{"value":"/ exit early if an error is encountered in either the stream or the","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":281577,"byte_end":281646,"line_start":773,"line_end":773,"column_start":5,"column_end":74}},{"value":"/ provided closure.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":281651,"byte_end":281672,"line_start":774,"line_end":774,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":281677,"byte_end":281680,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":281685,"byte_end":281699,"line_start":776,"line_end":776,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":281704,"byte_end":281707,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":281712,"byte_end":281719,"line_start":778,"line_end":778,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":281724,"byte_end":281765,"line_start":779,"line_end":779,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":281770,"byte_end":281816,"line_start":780,"line_end":780,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":281821,"byte_end":281824,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2)]);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":281829,"byte_end":281898,"line_start":782,"line_end":782,"column_start":5,"column_end":74}},{"value":"/ let sum = number_stream.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":281903,"byte_end":281980,"line_start":783,"line_end":783,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(sum.await, Ok(3));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":281985,"byte_end":282018,"line_start":784,"line_end":784,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":282023,"byte_end":282026,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ let number_stream_with_err = stream::iter(vec![Ok::<i32, i32>(1), Err(2), Ok(1)]);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":282031,"byte_end":282117,"line_start":786,"line_end":786,"column_start":5,"column_end":91}},{"value":"/ let sum = number_stream_with_err.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":282122,"byte_end":282208,"line_start":787,"line_end":787,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(sum.await, Err(2));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":282213,"byte_end":282247,"line_start":788,"line_end":788,"column_start":5,"column_end":39}},{"value":"/ # })","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":282252,"byte_end":282260,"line_start":789,"line_end":789,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":282265,"byte_end":282272,"line_start":790,"line_end":790,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3805},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":283814,"byte_end":283824,"line_start":834,"line_end":834,"column_start":8,"column_end":18},"name":"try_concat","qualname":"::stream::try_stream::TryStreamExt::try_concat","value":"pub fn try_concat(Self) -> TryConcat<Self> where Self: Sized,\nSelf::Ok: Extend<<<Self as TryStream>::Ok as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":3761},"children":[],"decl_id":null,"docs":" Attempt to concatenate all items of a stream into a single\n extendable destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Attempt to concatenate all items of a stream into a single","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":282568,"byte_end":282630,"line_start":800,"line_end":800,"column_start":5,"column_end":67}},{"value":"/ extendable destination, returning a future representing the end result.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":282635,"byte_end":282710,"line_start":801,"line_end":801,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":282715,"byte_end":282718,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents of all","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":282723,"byte_end":282794,"line_start":803,"line_end":803,"column_start":5,"column_end":76}},{"value":"/ the subsequent successful results of the stream. If the stream is empty,","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":282799,"byte_end":282875,"line_start":804,"line_end":804,"column_start":5,"column_end":81}},{"value":"/ the default value will be returned.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":282880,"byte_end":282919,"line_start":805,"line_end":805,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":282924,"byte_end":282927,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the [`Extend`](std::iter::Extend) trait.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":282932,"byte_end":283018,"line_start":807,"line_end":807,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":283023,"byte_end":283026,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`concat`](crate::stream::StreamExt::concat), but will","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":283031,"byte_end":283115,"line_start":809,"line_end":809,"column_start":5,"column_end":89}},{"value":"/ exit early if an error is encountered in the stream.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":283120,"byte_end":283176,"line_start":810,"line_end":810,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":283181,"byte_end":283184,"line_start":811,"line_end":811,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":283189,"byte_end":283203,"line_start":812,"line_end":812,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":283208,"byte_end":283211,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":283216,"byte_end":283223,"line_start":814,"line_end":814,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":283228,"byte_end":283269,"line_start":815,"line_end":815,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":283274,"byte_end":283305,"line_start":816,"line_end":816,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":283310,"byte_end":283348,"line_start":817,"line_end":817,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":283353,"byte_end":283373,"line_start":818,"line_end":818,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":283378,"byte_end":283381,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded::<Result<Vec<i32>, ()>>();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":283386,"byte_end":283447,"line_start":820,"line_end":820,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":283452,"byte_end":283455,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":283460,"byte_end":283487,"line_start":822,"line_end":822,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":283492,"byte_end":283523,"line_start":823,"line_end":823,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":283528,"byte_end":283554,"line_start":824,"line_end":824,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(Ok(vec![n + 1, n + 2, n + 3])).unwrap();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":283559,"byte_end":283629,"line_start":825,"line_end":825,"column_start":5,"column_end":75}},{"value":"/     }","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":283634,"byte_end":283643,"line_start":826,"line_end":826,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":283648,"byte_end":283655,"line_start":827,"line_end":827,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":283660,"byte_end":283663,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ let result = rx.try_concat().await;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":283668,"byte_end":283707,"line_start":829,"line_end":829,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":283712,"byte_end":283715,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, Ok(vec![7, 8, 9, 4, 5, 6, 1, 2, 3]));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":283720,"byte_end":283780,"line_start":831,"line_end":831,"column_start":5,"column_end":65}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":283785,"byte_end":283794,"line_start":832,"line_end":832,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":283799,"byte_end":283806,"line_start":833,"line_end":833,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3806},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":290014,"byte_end":290033,"line_start":991,"line_end":991,"column_start":8,"column_end":27},"name":"try_poll_next_unpin","qualname":"::stream::try_stream::TryStreamExt::try_poll_next_unpin","value":"pub fn try_poll_next_unpin(&mut Self, &mut Context)\n-> Poll<Option<Result<Self::Ok, Self::Error>>> where Self: Unpin","parent":{"krate":0,"index":3761},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":289906,"byte_end":289984,"line_start":989,"line_end":989,"column_start":5,"column_end":83}},{"value":"/ stream types.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":289989,"byte_end":290006,"line_start":990,"line_end":990,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":9999},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":327839,"byte_end":327843,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":10001}],"decl_id":null,"docs":" Stream for the [`iter`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`iter`] function.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":327717,"byte_end":327754,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":327779,"byte_end":327827,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":3890},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":328361,"byte_end":328365,"line_start":29,"line_end":29,"column_start":8,"column_end":12},"name":"iter","qualname":"::stream::iter::iter","value":"pub fn iter<I>(I) -> Iter<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Iterator` into a `Stream` which is always ready\n to yield the next value.","sig":null,"attributes":[{"value":"/ Converts an `Iterator` into a `Stream` which is always ready","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":327895,"byte_end":327959,"line_start":15,"line_end":15,"column_start":1,"column_end":65}},{"value":"/ to yield the next value.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":327960,"byte_end":327988,"line_start":16,"line_end":16,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":327989,"byte_end":327992,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Iterators in Rust don't express the ability to block, so this adapter","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":327993,"byte_end":328066,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"/ simply always calls `iter.next()` and returns that.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":328067,"byte_end":328122,"line_start":19,"line_end":19,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":328123,"byte_end":328126,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":328127,"byte_end":328134,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":328135,"byte_end":328176,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":328177,"byte_end":328220,"line_start":23,"line_end":23,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":328221,"byte_end":328224,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::iter(vec![17, 19]);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":328225,"byte_end":328269,"line_start":25,"line_end":25,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(vec![17, 19], stream.collect::<Vec<i32>>().await);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":328270,"byte_end":328335,"line_start":26,"line_end":26,"column_start":1,"column_end":66}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":328336,"byte_end":328345,"line_start":27,"line_end":27,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":328346,"byte_end":328353,"line_start":28,"line_end":28,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10008},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":329056,"byte_end":329062,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::stream::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":10010}],"decl_id":null,"docs":" Stream for the [`repeat`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`repeat`] function.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":328932,"byte_end":328971,"line_start":6,"line_end":6,"column_start":1,"column_end":40}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":328996,"byte_end":329044,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":3925},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":329586,"byte_end":329592,"line_start":27,"line_end":27,"column_start":8,"column_end":14},"name":"repeat","qualname":"::stream::repeat::repeat","value":"pub fn repeat<T>(T) -> Repeat<T> where T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Create a stream which produces the same item repeatedly.","sig":null,"attributes":[{"value":"/ Create a stream which produces the same item repeatedly.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":329084,"byte_end":329144,"line_start":13,"line_end":13,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":329145,"byte_end":329148,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The stream never terminates. Note that you likely want to avoid","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":329149,"byte_end":329216,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":329217,"byte_end":329289,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":329290,"byte_end":329347,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":329348,"byte_end":329351,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":329352,"byte_end":329359,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":329360,"byte_end":329401,"line_start":20,"line_end":20,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":329402,"byte_end":329445,"line_start":21,"line_end":21,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":329446,"byte_end":329449,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::repeat(9);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":329450,"byte_end":329485,"line_start":23,"line_end":23,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(vec![9, 9, 9], stream.take(3).collect::<Vec<i32>>().await);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":329486,"byte_end":329560,"line_start":24,"line_end":24,"column_start":1,"column_end":75}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":329561,"byte_end":329570,"line_start":25,"line_end":25,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":329571,"byte_end":329578,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10017},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":330583,"byte_end":330593,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"RepeatWith","qualname":"::stream::repeat_with::RepeatWith","value":"RepeatWith {  }","parent":null,"children":[{"krate":0,"index":10019}],"decl_id":null,"docs":" An stream that repeats elements of type `A` endlessly by\n applying the provided closure `F: FnMut() -> A`.","sig":null,"attributes":[{"value":"/ An stream that repeats elements of type `A` endlessly by","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":330281,"byte_end":330341,"line_start":6,"line_end":6,"column_start":1,"column_end":61}},{"value":"/ applying the provided closure `F: FnMut() -> A`.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":330342,"byte_end":330394,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":330395,"byte_end":330398,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`repeat_with()`] function.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":330399,"byte_end":330462,"line_start":9,"line_end":9,"column_start":1,"column_end":64}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":330463,"byte_end":330498,"line_start":10,"line_end":10,"column_start":1,"column_end":36}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":330523,"byte_end":330571,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":3978},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":332881,"byte_end":332892,"line_start":91,"line_end":91,"column_start":8,"column_end":19},"name":"repeat_with","qualname":"::stream::repeat_with::repeat_with","value":"pub fn repeat_with<A, F: FnMut() -> A>(F) -> RepeatWith<F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream that repeats elements of type `A` endlessly by\n applying the provided closure, the repeater, `F: FnMut() -> A`.","sig":null,"attributes":[{"value":"/ Creates a new stream that repeats elements of type `A` endlessly by","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":331109,"byte_end":331180,"line_start":37,"line_end":37,"column_start":1,"column_end":72}},{"value":"/ applying the provided closure, the repeater, `F: FnMut() -> A`.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":331181,"byte_end":331248,"line_start":38,"line_end":38,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":331249,"byte_end":331252,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ The `repeat_with()` function calls the repeater over and over again.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":331253,"byte_end":331325,"line_start":40,"line_end":40,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":331326,"byte_end":331329,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Infinite stream like `repeat_with()` are often used with adapters like","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":331330,"byte_end":331404,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ [`stream.take()`], in order to make them finite.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":331405,"byte_end":331457,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":331458,"byte_end":331461,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ If the element type of the stream you need implements [`Clone`], and","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":331462,"byte_end":331534,"line_start":45,"line_end":45,"column_start":1,"column_end":73}},{"value":"/ it is OK to keep the source element in memory, you should instead use","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":331535,"byte_end":331608,"line_start":46,"line_end":46,"column_start":1,"column_end":74}},{"value":"/ the [`stream.repeat()`] function.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":331609,"byte_end":331646,"line_start":47,"line_end":47,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":331647,"byte_end":331650,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":331651,"byte_end":331665,"line_start":49,"line_end":49,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":331666,"byte_end":331669,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":331670,"byte_end":331686,"line_start":51,"line_end":51,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":331687,"byte_end":331690,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":331691,"byte_end":331698,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":331699,"byte_end":331740,"line_start":54,"line_end":54,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":331741,"byte_end":331784,"line_start":55,"line_end":55,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":331785,"byte_end":331788,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ // let's assume we have some value of a type that is not `Clone`","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":331789,"byte_end":331857,"line_start":57,"line_end":57,"column_start":1,"column_end":69}},{"value":"/ // or which don't want to have in memory just yet because it is expensive:","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":331858,"byte_end":331936,"line_start":58,"line_end":58,"column_start":1,"column_end":79}},{"value":"/ #[derive(PartialEq, Debug)]","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":331937,"byte_end":331968,"line_start":59,"line_end":59,"column_start":1,"column_end":32}},{"value":"/ struct Expensive;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":331969,"byte_end":331990,"line_start":60,"line_end":60,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":331991,"byte_end":331994,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ // a particular value forever:","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":331995,"byte_end":332029,"line_start":62,"line_end":62,"column_start":1,"column_end":35}},{"value":"/ let mut things = stream::repeat_with(|| Expensive);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":332030,"byte_end":332085,"line_start":63,"line_end":63,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":332086,"byte_end":332089,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":332090,"byte_end":332143,"line_start":65,"line_end":65,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":332144,"byte_end":332197,"line_start":66,"line_end":66,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":332198,"byte_end":332251,"line_start":67,"line_end":67,"column_start":1,"column_end":54}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":332252,"byte_end":332261,"line_start":68,"line_end":68,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":332262,"byte_end":332269,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":332270,"byte_end":332273,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ Using mutation and going finite:","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":332274,"byte_end":332310,"line_start":71,"line_end":71,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":332311,"byte_end":332314,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":332315,"byte_end":332326,"line_start":73,"line_end":73,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":332327,"byte_end":332368,"line_start":74,"line_end":74,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":332369,"byte_end":332412,"line_start":75,"line_end":75,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":332413,"byte_end":332416,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ // From the zeroth to the third power of two:","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":332417,"byte_end":332466,"line_start":77,"line_end":77,"column_start":1,"column_end":50}},{"value":"/ let mut curr = 1;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":332467,"byte_end":332488,"line_start":78,"line_end":78,"column_start":1,"column_end":22}},{"value":"/ let mut pow2 = stream::repeat_with(|| { let tmp = curr; curr *= 2; tmp })","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":332489,"byte_end":332566,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/                     .take(4);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":332567,"byte_end":332600,"line_start":80,"line_end":80,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":332601,"byte_end":332604,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Some(1), pow2.next().await);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":332605,"byte_end":332648,"line_start":82,"line_end":82,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(2), pow2.next().await);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":332649,"byte_end":332692,"line_start":83,"line_end":83,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(4), pow2.next().await);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":332693,"byte_end":332736,"line_start":84,"line_end":84,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(8), pow2.next().await);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":332737,"byte_end":332780,"line_start":85,"line_end":85,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":332781,"byte_end":332784,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ // ... and now we're done","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":332785,"byte_end":332814,"line_start":87,"line_end":87,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(None, pow2.next().await);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":332815,"byte_end":332855,"line_start":88,"line_end":88,"column_start":1,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":332856,"byte_end":332865,"line_start":89,"line_end":89,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":332866,"byte_end":332873,"line_start":90,"line_end":90,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10026},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/empty.rs","byte_start":333283,"byte_end":333288,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":10028}],"decl_id":null,"docs":" Stream for the [`empty`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`empty`] function.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/empty.rs","byte_start":333167,"byte_end":333205,"line_start":7,"line_end":7,"column_start":1,"column_end":39}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/empty.rs","byte_start":333223,"byte_end":333271,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4012},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/empty.rs","byte_start":333457,"byte_end":333462,"line_start":17,"line_end":17,"column_start":8,"column_end":13},"name":"empty","qualname":"::stream::empty::empty","value":"pub fn empty<T>() -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which contains no elements.","sig":null,"attributes":[{"value":"/ Creates a stream which contains no elements.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/empty.rs","byte_start":333327,"byte_end":333375,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/empty.rs","byte_start":333376,"byte_end":333379,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Ready(None)` when polled.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/empty.rs","byte_start":333380,"byte_end":333449,"line_start":16,"line_end":16,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":4064},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":334547,"byte_end":334551,"line_start":20,"line_end":20,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"pub fn once<Fut: Future>(Fut) -> Once<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream of a single element.","sig":null,"attributes":[{"value":"/ Creates a stream of a single element.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":334240,"byte_end":334281,"line_start":9,"line_end":9,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":334282,"byte_end":334285,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":334286,"byte_end":334293,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":334294,"byte_end":334335,"line_start":12,"line_end":12,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":334336,"byte_end":334379,"line_start":13,"line_end":13,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":334380,"byte_end":334383,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::once(async { 17 });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":334384,"byte_end":334428,"line_start":15,"line_end":15,"column_start":1,"column_end":45}},{"value":"/ let collected = stream.collect::<Vec<i32>>().await;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":334429,"byte_end":334484,"line_start":16,"line_end":16,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":334485,"byte_end":334521,"line_start":17,"line_end":17,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":334522,"byte_end":334531,"line_start":18,"line_end":18,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":334532,"byte_end":334539,"line_start":19,"line_end":19,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10032},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":334813,"byte_end":334817,"line_start":28,"line_end":28,"column_start":16,"column_end":20},"name":"Once","qualname":"::stream::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":10034}],"decl_id":null,"docs":" A stream which emits single element and then EOF.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10068},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/pending.rs","byte_start":335993,"byte_end":336000,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Pending","qualname":"::stream::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":10070}],"decl_id":null,"docs":" Stream for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`pending()`] function.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/pending.rs","byte_start":335873,"byte_end":335915,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/pending.rs","byte_start":335933,"byte_end":335981,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4108},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/pending.rs","byte_start":336176,"byte_end":336183,"line_start":17,"line_end":17,"column_start":8,"column_end":15},"name":"pending","qualname":"::stream::pending::pending","value":"pub fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which never returns any elements.","sig":null,"attributes":[{"value":"/ Creates a stream which never returns any elements.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/pending.rs","byte_start":336044,"byte_end":336098,"line_start":14,"line_end":14,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/pending.rs","byte_start":336099,"byte_end":336102,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Pending` when polled.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/pending.rs","byte_start":336103,"byte_end":336168,"line_start":16,"line_end":16,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":4150},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":337026,"byte_end":337032,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::stream::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":4152}],"decl_id":null,"docs":" Stream for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`poll_fn`] function.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":336925,"byte_end":336965,"line_start":9,"line_end":9,"column_start":1,"column_end":41}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":336966,"byte_end":337014,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4158},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":337720,"byte_end":337727,"line_start":41,"line_end":41,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::stream::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) ->\nPoll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream wrapping a function returning `Poll<Option<T>>`.","sig":null,"attributes":[{"value":"/ Creates a new stream wrapping a function returning `Poll<Option<T>>`.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":337232,"byte_end":337305,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":337306,"byte_end":337309,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Polling the returned stream calls the wrapped function.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":337310,"byte_end":337369,"line_start":25,"line_end":25,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":337370,"byte_end":337373,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":337374,"byte_end":337388,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":337389,"byte_end":337392,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":337393,"byte_end":337400,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ use futures::stream::poll_fn;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":337401,"byte_end":337434,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":337435,"byte_end":337463,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":337464,"byte_end":337467,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let mut counter = 1usize;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":337468,"byte_end":337497,"line_start":33,"line_end":33,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":337498,"byte_end":337501,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let read_stream = poll_fn(move |_| -> Poll<Option<String>> {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":337502,"byte_end":337566,"line_start":35,"line_end":35,"column_start":1,"column_end":65}},{"value":"/     if counter == 0 { return Poll::Ready(None); }","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":337567,"byte_end":337620,"line_start":36,"line_end":36,"column_start":1,"column_end":54}},{"value":"/     counter -= 1;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":337621,"byte_end":337642,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/     Poll::Ready(Some(\"Hello, World!\".to_owned()))","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":337643,"byte_end":337696,"line_start":38,"line_end":38,"column_start":1,"column_end":54}},{"value":"/ });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":337697,"byte_end":337704,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":337705,"byte_end":337712,"line_start":40,"line_end":40,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10074},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":338488,"byte_end":338501,"line_start":12,"line_end":12,"column_start":16,"column_end":29},"name":"PollImmediate","qualname":"::stream::poll_immediate::PollImmediate","value":"PollImmediate {  }","parent":null,"children":[{"krate":0,"index":10076}],"decl_id":null,"docs":" Stream for the [poll_immediate](poll_immediate()) function.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":4199},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":340482,"byte_end":340496,"line_start":78,"line_end":78,"column_start":8,"column_end":22},"name":"poll_immediate","qualname":"::stream::poll_immediate::poll_immediate","value":"pub fn poll_immediate<S: Stream>(S) -> PollImmediate<S>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream that always immediately returns [Poll::Ready](core::task::Poll::Ready) when awaiting it.","sig":null,"attributes":[{"value":"/ Creates a new stream that always immediately returns [Poll::Ready](core::task::Poll::Ready) when awaiting it.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":339601,"byte_end":339714,"line_start":53,"line_end":53,"column_start":1,"column_end":114}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":339715,"byte_end":339718,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ This is useful when immediacy is more important than waiting for the next item to be ready.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":339719,"byte_end":339814,"line_start":55,"line_end":55,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":339815,"byte_end":339818,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":339819,"byte_end":339833,"line_start":57,"line_end":57,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":339834,"byte_end":339837,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":339838,"byte_end":339845,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":339846,"byte_end":339887,"line_start":60,"line_end":60,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":339888,"byte_end":339931,"line_start":61,"line_end":61,"column_start":1,"column_end":44}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":339932,"byte_end":339960,"line_start":62,"line_end":62,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":339961,"byte_end":339964,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ let mut r = stream::poll_immediate(Box::pin(stream::iter(1_u32..3)));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":339965,"byte_end":340038,"line_start":64,"line_end":64,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(r.next().await, Some(Poll::Ready(1)));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":340039,"byte_end":340092,"line_start":65,"line_end":65,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(r.next().await, Some(Poll::Ready(2)));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":340093,"byte_end":340146,"line_start":66,"line_end":66,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(r.next().await, None);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":340147,"byte_end":340184,"line_start":67,"line_end":67,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":340185,"byte_end":340188,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ let mut p = stream::poll_immediate(Box::pin(stream::once(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":340189,"byte_end":340257,"line_start":69,"line_end":69,"column_start":1,"column_end":69}},{"value":"/     futures::pending!();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":340258,"byte_end":340286,"line_start":70,"line_end":70,"column_start":1,"column_end":29}},{"value":"/     42_u8","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":340287,"byte_end":340300,"line_start":71,"line_end":71,"column_start":1,"column_end":14}},{"value":"/ })));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":340301,"byte_end":340310,"line_start":72,"line_end":72,"column_start":1,"column_end":10}},{"value":"/ assert_eq!(p.next().await, Some(Poll::Pending));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":340311,"byte_end":340363,"line_start":73,"line_end":73,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(p.next().await, Some(Poll::Ready(42)));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":340364,"byte_end":340418,"line_start":74,"line_end":74,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(p.next().await, None);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":340419,"byte_end":340456,"line_start":75,"line_end":75,"column_start":1,"column_end":38}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":340457,"byte_end":340466,"line_start":76,"line_end":76,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":340467,"byte_end":340474,"line_start":77,"line_end":77,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10113},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":341029,"byte_end":341035,"line_start":12,"line_end":12,"column_start":16,"column_end":22},"name":"Select","qualname":"::stream::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":10116}],"decl_id":null,"docs":" Stream for the [`select()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":4242},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":342061,"byte_end":342067,"line_start":47,"line_end":47,"column_start":8,"column_end":14},"name":"select","qualname":"::stream::select::select","value":"pub fn select<St1, St2>(St1, St2) -> Select<St1, St2> where St1: Stream,\nSt2: Stream<Item = St1::Item>","parent":null,"children":[],"decl_id":null,"docs":" This function will attempt to pull items from both streams. Each\n stream will be polled in a round-robin fashion, and whenever a stream is\n ready to yield an item that item is yielded.","sig":null,"attributes":[{"value":"/ This function will attempt to pull items from both streams. Each","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":341157,"byte_end":341225,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/ stream will be polled in a round-robin fashion, and whenever a stream is","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":341226,"byte_end":341302,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ ready to yield an item that item is yielded.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":341303,"byte_end":341351,"line_start":20,"line_end":20,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":341352,"byte_end":341355,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ After one of the two input streams completes, the remaining one will be","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":341356,"byte_end":341431,"line_start":22,"line_end":22,"column_start":1,"column_end":76}},{"value":"/ polled exclusively. The returned stream completes when both input","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":341432,"byte_end":341501,"line_start":23,"line_end":23,"column_start":1,"column_end":70}},{"value":"/ streams have completed.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":341502,"byte_end":341529,"line_start":24,"line_end":24,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":341530,"byte_end":341533,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes both streams and returns a wrapped","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":341534,"byte_end":341605,"line_start":26,"line_end":26,"column_start":1,"column_end":72}},{"value":"/ version of them.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":341606,"byte_end":341626,"line_start":27,"line_end":27,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":341627,"byte_end":341630,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":341631,"byte_end":341646,"line_start":29,"line_end":29,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":341647,"byte_end":341650,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":341651,"byte_end":341662,"line_start":31,"line_end":31,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":341663,"byte_end":341704,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{ repeat, select, StreamExt };","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":341705,"byte_end":341760,"line_start":33,"line_end":33,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":341761,"byte_end":341764,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let left = repeat(1);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":341765,"byte_end":341790,"line_start":35,"line_end":35,"column_start":1,"column_end":26}},{"value":"/ let right = repeat(2);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":341791,"byte_end":341817,"line_start":36,"line_end":36,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":341818,"byte_end":341821,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let mut out = select(left, right);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":341822,"byte_end":341860,"line_start":38,"line_end":38,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":341861,"byte_end":341864,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ for _ in 0..100 {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":341865,"byte_end":341886,"line_start":40,"line_end":40,"column_start":1,"column_end":22}},{"value":"/     // We should be alternating.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":341887,"byte_end":341923,"line_start":41,"line_end":41,"column_start":1,"column_end":37}},{"value":"/     assert_eq!(1, out.select_next_some().await);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":341924,"byte_end":341976,"line_start":42,"line_end":42,"column_start":1,"column_end":53}},{"value":"/     assert_eq!(2, out.select_next_some().await);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":341977,"byte_end":342029,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":342030,"byte_end":342035,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":342036,"byte_end":342045,"line_start":45,"line_end":45,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":342046,"byte_end":342053,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4249},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":342536,"byte_end":342543,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Select<St1, St2>>::get_ref","value":"pub fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":342428,"byte_end":342502,"line_start":62,"line_end":62,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":342507,"byte_end":342524,"line_start":63,"line_end":63,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":4250},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":342871,"byte_end":342878,"line_start":73,"line_end":73,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Select<St1, St2>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":342609,"byte_end":342677,"line_start":68,"line_end":68,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":342682,"byte_end":342713,"line_start":69,"line_end":69,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":342718,"byte_end":342721,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":342726,"byte_end":342799,"line_start":71,"line_end":71,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":342804,"byte_end":342859,"line_start":72,"line_end":72,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":4251},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":343225,"byte_end":343236,"line_start":82,"line_end":82,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Select<St1, St2>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":342956,"byte_end":343031,"line_start":77,"line_end":77,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":343036,"byte_end":343067,"line_start":78,"line_end":78,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":343072,"byte_end":343075,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":343080,"byte_end":343153,"line_start":80,"line_end":80,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":343158,"byte_end":343213,"line_start":81,"line_end":81,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":4252},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":343610,"byte_end":343620,"line_start":91,"line_end":91,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Select<St1, St2>>::into_inner","value":"pub fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":343374,"byte_end":343437,"line_start":87,"line_end":87,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":343442,"byte_end":343445,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":343450,"byte_end":343522,"line_start":89,"line_end":89,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":343527,"byte_end":343598,"line_start":90,"line_end":90,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10159},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":344562,"byte_end":344566,"line_start":12,"line_end":12,"column_start":5,"column_end":9},"name":"Left","qualname":"::stream::select_with_strategy::PollNext::Left","value":"PollNext::Left","parent":{"krate":0,"index":10158},"children":[],"decl_id":null,"docs":" Poll the first stream.\n","sig":null,"attributes":[{"value":"/ Poll the first stream.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":344531,"byte_end":344557,"line_start":11,"line_end":11,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10161},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":344604,"byte_end":344609,"line_start":14,"line_end":14,"column_start":5,"column_end":10},"name":"Right","qualname":"::stream::select_with_strategy::PollNext::Right","value":"PollNext::Right","parent":{"krate":0,"index":10158},"children":[],"decl_id":null,"docs":" Poll the second stream.\n","sig":null,"attributes":[{"value":"/ Poll the second stream.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":344572,"byte_end":344599,"line_start":13,"line_end":13,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":10158},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":344516,"byte_end":344524,"line_start":10,"line_end":10,"column_start":10,"column_end":18},"name":"PollNext","qualname":"::stream::select_with_strategy::PollNext","value":"pub enum PollNext { Left, Right, }","parent":null,"children":[{"krate":0,"index":10159},{"krate":0,"index":10161}],"decl_id":null,"docs":" Type to tell [`SelectWithStrategy`] which stream to poll next.\n","sig":null,"attributes":[{"value":"/ Type to tell [`SelectWithStrategy`] which stream to poll next.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":344389,"byte_end":344455,"line_start":8,"line_end":8,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":4305},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":344690,"byte_end":344696,"line_start":19,"line_end":19,"column_start":12,"column_end":18},"name":"toggle","qualname":"<PollNext>::toggle","value":"pub fn toggle(&mut Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Toggle the value and return the old one.\n","sig":null,"attributes":[{"value":"/ Toggle the value and return the old one.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":344634,"byte_end":344678,"line_start":18,"line_end":18,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":10177},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":345168,"byte_end":345186,"line_start":40,"line_end":40,"column_start":16,"column_end":34},"name":"SelectWithStrategy","qualname":"::stream::select_with_strategy::SelectWithStrategy","value":"SelectWithStrategy {  }","parent":null,"children":[{"krate":0,"index":10182},{"krate":0,"index":10183},{"krate":0,"index":10184},{"krate":0,"index":10185}],"decl_id":null,"docs":" Stream for the [`select_with_strategy()`] function. See function docs for details.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":4308},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":347478,"byte_end":347498,"line_start":111,"line_end":111,"column_start":8,"column_end":28},"name":"select_with_strategy","qualname":"::stream::select_with_strategy::select_with_strategy","value":"pub fn select_with_strategy<St1, St2, Clos, State>(St1, St2, Clos)\n-> SelectWithStrategy<St1, St2, Clos, State> where St1: Stream,\nSt2: Stream<Item = St1::Item>, Clos: FnMut(&mut State) -> PollNext,\nState: Default","parent":null,"children":[],"decl_id":null,"docs":" This function will attempt to pull items from both streams. You provide a\n closure to tell [`SelectWithStrategy`] which stream to poll. The closure can\n store state on `SelectWithStrategy` to which it will receive a `&mut` on every\n invocation. This allows basing the strategy on prior choices.","sig":null,"attributes":[{"value":"/ This function will attempt to pull items from both streams. You provide a","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":345349,"byte_end":345426,"line_start":50,"line_end":50,"column_start":1,"column_end":78}},{"value":"/ closure to tell [`SelectWithStrategy`] which stream to poll. The closure can","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":345427,"byte_end":345507,"line_start":51,"line_end":51,"column_start":1,"column_end":81}},{"value":"/ store state on `SelectWithStrategy` to which it will receive a `&mut` on every","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":345508,"byte_end":345590,"line_start":52,"line_end":52,"column_start":1,"column_end":83}},{"value":"/ invocation. This allows basing the strategy on prior choices.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":345591,"byte_end":345656,"line_start":53,"line_end":53,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":345657,"byte_end":345660,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ After one of the two input streams completes, the remaining one will be","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":345661,"byte_end":345736,"line_start":55,"line_end":55,"column_start":1,"column_end":76}},{"value":"/ polled exclusively. The returned stream completes when both input","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":345737,"byte_end":345806,"line_start":56,"line_end":56,"column_start":1,"column_end":70}},{"value":"/ streams have completed.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":345807,"byte_end":345834,"line_start":57,"line_end":57,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":345835,"byte_end":345838,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes both streams and returns a wrapped","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":345839,"byte_end":345910,"line_start":59,"line_end":59,"column_start":1,"column_end":72}},{"value":"/ version of them.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":345911,"byte_end":345931,"line_start":60,"line_end":60,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":345932,"byte_end":345935,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":345936,"byte_end":345951,"line_start":62,"line_end":62,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":345952,"byte_end":345955,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ ### Priority","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":345956,"byte_end":345972,"line_start":64,"line_end":64,"column_start":1,"column_end":17}},{"value":"/ This example shows how to always prioritize the left stream.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":345973,"byte_end":346037,"line_start":65,"line_end":65,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":346038,"byte_end":346041,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":346042,"byte_end":346053,"line_start":67,"line_end":67,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":346054,"byte_end":346095,"line_start":68,"line_end":68,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{ repeat, select_with_strategy, PollNext, StreamExt };","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":346096,"byte_end":346175,"line_start":69,"line_end":69,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":346176,"byte_end":346179,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ let left = repeat(1);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":346180,"byte_end":346205,"line_start":71,"line_end":71,"column_start":1,"column_end":26}},{"value":"/ let right = repeat(2);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":346206,"byte_end":346232,"line_start":72,"line_end":72,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":346233,"byte_end":346236,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ // We don't need any state, so let's make it an empty tuple.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":346237,"byte_end":346301,"line_start":74,"line_end":74,"column_start":1,"column_end":65}},{"value":"/ // We must provide some type here, as there is no way for the compiler","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":346302,"byte_end":346376,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"/ // to infer it. As we don't need to capture variables, we can just","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":346377,"byte_end":346447,"line_start":76,"line_end":76,"column_start":1,"column_end":71}},{"value":"/ // use a function pointer instead of a closure.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":346448,"byte_end":346499,"line_start":77,"line_end":77,"column_start":1,"column_end":52}},{"value":"/ fn prio_left(_: &mut ()) -> PollNext { PollNext::Left }","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":346500,"byte_end":346559,"line_start":78,"line_end":78,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":346560,"byte_end":346563,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ let mut out = select_with_strategy(left, right, prio_left);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":346564,"byte_end":346627,"line_start":80,"line_end":80,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":346628,"byte_end":346631,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ for _ in 0..100 {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":346632,"byte_end":346653,"line_start":82,"line_end":82,"column_start":1,"column_end":22}},{"value":"/     // Whenever we poll out, we will alwas get `1`.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":346654,"byte_end":346709,"line_start":83,"line_end":83,"column_start":1,"column_end":56}},{"value":"/     assert_eq!(1, out.select_next_some().await);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":346710,"byte_end":346762,"line_start":84,"line_end":84,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":346763,"byte_end":346768,"line_start":85,"line_end":85,"column_start":1,"column_end":6}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":346769,"byte_end":346778,"line_start":86,"line_end":86,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":346779,"byte_end":346786,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":346787,"byte_end":346790,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ ### Round Robin","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":346791,"byte_end":346810,"line_start":89,"line_end":89,"column_start":1,"column_end":20}},{"value":"/ This example shows how to select from both streams round robin.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":346811,"byte_end":346878,"line_start":90,"line_end":90,"column_start":1,"column_end":68}},{"value":"/ Note: this special case is provided by [`futures-util::stream::select`].","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":346879,"byte_end":346955,"line_start":91,"line_end":91,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":346956,"byte_end":346959,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":346960,"byte_end":346971,"line_start":93,"line_end":93,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":346972,"byte_end":347013,"line_start":94,"line_end":94,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{ repeat, select_with_strategy, PollNext, StreamExt };","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":347014,"byte_end":347093,"line_start":95,"line_end":95,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":347094,"byte_end":347097,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ let left = repeat(1);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":347098,"byte_end":347123,"line_start":97,"line_end":97,"column_start":1,"column_end":26}},{"value":"/ let right = repeat(2);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":347124,"byte_end":347150,"line_start":98,"line_end":98,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":347151,"byte_end":347154,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ let rrobin = |last: &mut PollNext| last.toggle();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":347155,"byte_end":347208,"line_start":100,"line_end":100,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":347209,"byte_end":347212,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ let mut out = select_with_strategy(left, right, rrobin);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":347213,"byte_end":347273,"line_start":102,"line_end":102,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":347274,"byte_end":347277,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ for _ in 0..100 {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":347278,"byte_end":347299,"line_start":104,"line_end":104,"column_start":1,"column_end":22}},{"value":"/     // We should be alternating now.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":347300,"byte_end":347340,"line_start":105,"line_end":105,"column_start":1,"column_end":41}},{"value":"/     assert_eq!(1, out.select_next_some().await);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":347341,"byte_end":347393,"line_start":106,"line_end":106,"column_start":1,"column_end":53}},{"value":"/     assert_eq!(2, out.select_next_some().await);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":347394,"byte_end":347446,"line_start":107,"line_end":107,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":347447,"byte_end":347452,"line_start":108,"line_end":108,"column_start":1,"column_end":6}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":347453,"byte_end":347462,"line_start":109,"line_end":109,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":347463,"byte_end":347470,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4318},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":348115,"byte_end":348122,"line_start":133,"line_end":133,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<SelectWithStrategy<St1, St2, Clos, State>>::get_ref","value":"pub fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":348007,"byte_end":348081,"line_start":131,"line_end":131,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":348086,"byte_end":348103,"line_start":132,"line_end":132,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":4319},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":348478,"byte_end":348485,"line_start":142,"line_end":142,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<SelectWithStrategy<St1, St2, Clos, State>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":348216,"byte_end":348284,"line_start":137,"line_end":137,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":348289,"byte_end":348320,"line_start":138,"line_end":138,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":348325,"byte_end":348328,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":348333,"byte_end":348406,"line_start":140,"line_end":140,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":348411,"byte_end":348466,"line_start":141,"line_end":141,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":4320},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":348860,"byte_end":348871,"line_start":151,"line_end":151,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<SelectWithStrategy<St1, St2, Clos, State>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":348591,"byte_end":348666,"line_start":146,"line_end":146,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":348671,"byte_end":348702,"line_start":147,"line_end":147,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":348707,"byte_end":348710,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":348715,"byte_end":348788,"line_start":149,"line_end":149,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":348793,"byte_end":348848,"line_start":150,"line_end":150,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":4321},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":349277,"byte_end":349287,"line_start":160,"line_end":160,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SelectWithStrategy<St1, St2, Clos, State>>::into_inner","value":"pub fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":349041,"byte_end":349104,"line_start":156,"line_end":156,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":349109,"byte_end":349112,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":349117,"byte_end":349189,"line_start":158,"line_end":158,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":349194,"byte_end":349265,"line_start":159,"line_end":159,"column_start":5,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":4390},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":352965,"byte_end":352971,"line_start":50,"line_end":50,"column_start":8,"column_end":14},"name":"unfold","qualname":"::stream::unfold::unfold","value":"pub fn unfold<T, F, Fut, Item>(T, F) -> Unfold<T, F, Fut> where F: FnMut(T) ->\nFut, Fut: Future<Output = Option<(Item, T)>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Stream` from a seed and a closure returning a `Future`.","sig":null,"attributes":[{"value":"/ Creates a `Stream` from a seed and a closure returning a `Future`.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":351523,"byte_end":351593,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":351594,"byte_end":351597,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `Stream::fold()` adapter: while","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":351598,"byte_end":351667,"line_start":13,"line_end":13,"column_start":1,"column_end":70}},{"value":"/ `Stream::fold()` reduces a `Stream` to one single value, `unfold()` creates a","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":351668,"byte_end":351749,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/ `Stream` from a seed value.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":351750,"byte_end":351781,"line_start":15,"line_end":15,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":351782,"byte_end":351785,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ `unfold()` will call the provided closure with the provided seed, then wait","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":351786,"byte_end":351865,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ for the returned `Future` to complete with `(a, b)`. It will then yield the","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":351866,"byte_end":351945,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ value `a`, and use `b` as the next internal state.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":351946,"byte_end":352000,"line_start":19,"line_end":19,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":352001,"byte_end":352004,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(Future)`, then the `unfold()`","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":352005,"byte_end":352085,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ will stop producing items and return `Poll::Ready(None)` in future","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":352086,"byte_end":352156,"line_start":22,"line_end":22,"column_start":1,"column_end":71}},{"value":"/ calls to `poll()`.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":352157,"byte_end":352179,"line_start":23,"line_end":23,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":352180,"byte_end":352183,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":352184,"byte_end":352261,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":352262,"byte_end":352334,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ `Future` using other library functions working on futures, and `unfold()`","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":352335,"byte_end":352412,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ will turn it into a `Stream` by repeating the operation.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":352413,"byte_end":352473,"line_start":28,"line_end":28,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":352474,"byte_end":352477,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":352478,"byte_end":352491,"line_start":30,"line_end":30,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":352492,"byte_end":352495,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":352496,"byte_end":352503,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":352504,"byte_end":352545,"line_start":33,"line_end":33,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":352546,"byte_end":352589,"line_start":34,"line_end":34,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":352590,"byte_end":352593,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::unfold(0, |state| async move {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":352594,"byte_end":352649,"line_start":36,"line_end":36,"column_start":1,"column_end":56}},{"value":"/     if state <= 2 {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":352650,"byte_end":352673,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":352674,"byte_end":352713,"line_start":38,"line_end":38,"column_start":1,"column_end":40}},{"value":"/         let yielded = state  * 2;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":352714,"byte_end":352751,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/         Some((yielded, next_state))","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":352752,"byte_end":352791,"line_start":40,"line_end":40,"column_start":1,"column_end":40}},{"value":"/     } else {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":352792,"byte_end":352808,"line_start":41,"line_end":41,"column_start":1,"column_end":17}},{"value":"/         None","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":352809,"byte_end":352825,"line_start":42,"line_end":42,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":352826,"byte_end":352835,"line_start":43,"line_end":43,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":352836,"byte_end":352843,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":352844,"byte_end":352847,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ let result = stream.collect::<Vec<i32>>().await;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":352848,"byte_end":352900,"line_start":46,"line_end":46,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(result, vec![0, 2, 4]);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":352901,"byte_end":352939,"line_start":47,"line_end":47,"column_start":1,"column_end":39}},{"value":"/ # });","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":352940,"byte_end":352949,"line_start":48,"line_end":48,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":352950,"byte_end":352957,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10246},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":353318,"byte_end":353324,"line_start":61,"line_end":61,"column_start":16,"column_end":22},"name":"Unfold","qualname":"::stream::unfold::Unfold","value":"Unfold {  }","parent":null,"children":[{"krate":0,"index":10250},{"krate":0,"index":10251}],"decl_id":null,"docs":" Stream for the [`unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13684325,"byte_end":13684334,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Mod","id":{"krate":0,"index":4436},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","parent":null,"children":[{"krate":0,"index":4437},{"krate":0,"index":4438},{"krate":0,"index":4441},{"krate":0,"index":4444},{"krate":0,"index":4447},{"krate":0,"index":4450},{"krate":0,"index":4453},{"krate":0,"index":4454},{"krate":0,"index":4457},{"krate":0,"index":4460},{"krate":0,"index":4463},{"krate":0,"index":4466},{"krate":0,"index":4469},{"krate":0,"index":4472},{"krate":0,"index":4475},{"krate":0,"index":4478},{"krate":0,"index":4481},{"krate":0,"index":4495},{"krate":0,"index":4496},{"krate":0,"index":4499}],"decl_id":null,"docs":" Tools for working with tasks.","sig":null,"attributes":[{"value":"/ Tools for working with tasks.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":354863,"byte_end":354896,"line_start":1,"line_end":1,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":354897,"byte_end":354900,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":354901,"byte_end":354926,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":354927,"byte_end":354930,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - [`Spawn`], a trait for spawning new tasks.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":354931,"byte_end":354979,"line_start":5,"line_end":5,"column_start":1,"column_end":49}},{"value":"/ - [`Context`], a context of an asynchronous task,","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":354980,"byte_end":355033,"line_start":6,"line_end":6,"column_start":1,"column_end":54}},{"value":"/   including a handle for waking up the task.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":355034,"byte_end":355082,"line_start":7,"line_end":7,"column_start":1,"column_end":49}},{"value":"/ - [`Waker`], a handle for waking up a task.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":355083,"byte_end":355130,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":355131,"byte_end":355134,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The remaining types and traits in the module are used for implementing","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":355135,"byte_end":355209,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ executors or dealing with synchronization issues around task wakeup.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":355210,"byte_end":355282,"line_start":11,"line_end":11,"column_start":1,"column_end":73}}]},{"kind":"Trait","id":{"krate":0,"index":4493},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":356532,"byte_end":356540,"line_start":20,"line_end":20,"column_start":11,"column_end":19},"name":"SpawnExt","qualname":"::task::spawn::SpawnExt","value":"SpawnExt: Spawn","parent":null,"children":[],"decl_id":null,"docs":" Extension trait for `Spawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `Spawn`.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":356489,"byte_end":356521,"line_start":19,"line_end":19,"column_start":1,"column_end":33}}]},{"kind":"Trait","id":{"krate":0,"index":4494},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":359296,"byte_end":359309,"line_start":97,"line_end":97,"column_start":11,"column_end":24},"name":"LocalSpawnExt","qualname":"::task::spawn::LocalSpawnExt","value":"LocalSpawnExt: LocalSpawn","parent":null,"children":[],"decl_id":null,"docs":" Extension trait for `LocalSpawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `LocalSpawn`.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":359248,"byte_end":359285,"line_start":96,"line_end":96,"column_start":1,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":4502},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"never","qualname":"::never","value":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","parent":null,"children":[{"krate":0,"index":4503}],"decl_id":null,"docs":" This module contains the `Never` type.","sig":null,"attributes":[{"value":"/ This module contains the `Never` type.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":361768,"byte_end":361810,"line_start":1,"line_end":1,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":361811,"byte_end":361814,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Values of this type can never be created and will never exist.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":361815,"byte_end":361881,"line_start":3,"line_end":3,"column_start":1,"column_end":67}}]},{"kind":"Type","id":{"krate":0,"index":4503},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":362518,"byte_end":362523,"line_start":18,"line_end":18,"column_start":10,"column_end":15},"name":"Never","qualname":"::never::Never","value":"core::convert::Infallible","parent":null,"children":[],"decl_id":null,"docs":" A type with no possible values.","sig":null,"attributes":[{"value":"/ A type with no possible values.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":361883,"byte_end":361918,"line_start":5,"line_end":5,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":361919,"byte_end":361922,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This is used to indicate values which can never be created, such as the","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":361923,"byte_end":361998,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ error type of infallible futures.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":361999,"byte_end":362036,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":362037,"byte_end":362040,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This type is a stable equivalent to the `!` type from `std`.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":362041,"byte_end":362105,"line_start":10,"line_end":10,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":362106,"byte_end":362109,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is currently an alias for [`std::convert::Infallible`], but in","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":362110,"byte_end":362181,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ the future it may be an alias for [`!`][never].","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":362182,"byte_end":362233,"line_start":13,"line_end":13,"column_start":1,"column_end":52}},{"value":"/ See [\"Future compatibility\" section of `std::convert::Infallible`][infallible] for more.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":362234,"byte_end":362326,"line_start":14,"line_end":14,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":362327,"byte_end":362330,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [never]: https://doc.rust-lang.org/nightly/std/primitive.never.html","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":362331,"byte_end":362402,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/ [infallible]: https://doc.rust-lang.org/nightly/std/convert/enum.Infallible.html#future-compatibility","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":362403,"byte_end":362508,"line_start":17,"line_end":17,"column_start":1,"column_end":106}}]},{"kind":"Trait","id":{"krate":0,"index":4515},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":362626,"byte_end":362633,"line_start":4,"line_end":4,"column_start":11,"column_end":18},"name":"FnOnce1","qualname":"::fns::FnOnce1","value":"FnOnce1<A>","parent":null,"children":[{"krate":0,"index":4517},{"krate":0,"index":4518}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4517},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":362648,"byte_end":362654,"line_start":5,"line_end":5,"column_start":10,"column_end":16},"name":"Output","qualname":"::fns::FnOnce1::Output","value":"type Output;","parent":{"krate":0,"index":4515},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4518},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":362663,"byte_end":362672,"line_start":6,"line_end":6,"column_start":8,"column_end":17},"name":"call_once","qualname":"::fns::FnOnce1::call_once","value":"pub fn call_once(Self, A) -> Self::Output","parent":{"krate":0,"index":4515},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":4525},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":362865,"byte_end":362871,"line_start":19,"line_end":19,"column_start":11,"column_end":17},"name":"FnMut1","qualname":"::fns::FnMut1","value":"FnMut1<A>: FnOnce1<A>","parent":null,"children":[{"krate":0,"index":4527}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4527},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":362896,"byte_end":362904,"line_start":20,"line_end":20,"column_start":8,"column_end":16},"name":"call_mut","qualname":"::fns::FnMut1::call_mut","value":"pub fn call_mut(&mut Self, A) -> Self::Output","parent":{"krate":0,"index":4525},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4542},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":364210,"byte_end":364214,"line_start":74,"line_end":74,"column_start":12,"column_end":16},"name":"OkFn","qualname":"::fns::OkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10317},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":364570,"byte_end":364577,"line_start":92,"line_end":92,"column_start":12,"column_end":19},"name":"ChainFn","qualname":"::fns::ChainFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10338},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":365311,"byte_end":365324,"line_start":127,"line_end":127,"column_start":12,"column_end":25},"name":"MergeResultFn","qualname":"::fns::MergeResultFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10354},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":365666,"byte_end":365675,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"InspectFn","qualname":"::fns::InspectFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10369},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":366630,"byte_end":366637,"line_start":179,"line_end":179,"column_start":12,"column_end":19},"name":"MapOkFn","qualname":"::fns::MapOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10384},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":367348,"byte_end":367356,"line_start":211,"line_end":211,"column_start":12,"column_end":20},"name":"MapErrFn","qualname":"::fns::MapErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10399},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":368076,"byte_end":368087,"line_start":243,"line_end":243,"column_start":12,"column_end":23},"name":"InspectOkFn","qualname":"::fns::InspectOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10411},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":368972,"byte_end":368984,"line_start":281,"line_end":281,"column_start":12,"column_end":24},"name":"InspectErrFn","qualname":"::fns::InspectErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10423},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":370132,"byte_end":370146,"line_start":324,"line_end":324,"column_start":12,"column_end":26},"name":"UnwrapOrElseFn","qualname":"::fns::UnwrapOrElseFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4706},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":370911,"byte_end":370917,"line_start":355,"line_end":355,"column_start":12,"column_end":18},"name":"IntoFn","qualname":"::fns::IntoFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/flatten.rs","byte_start":35483,"byte_end":35490,"line_start":20,"line_end":20,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/flatten.rs","byte_start":35620,"byte_end":35627,"line_start":26,"line_end":26,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/flatten.rs","byte_start":35852,"byte_end":35859,"line_start":39,"line_end":39,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/flatten.rs","byte_start":36633,"byte_end":36640,"line_start":64,"line_end":64,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/flatten.rs","byte_start":36865,"byte_end":36872,"line_start":77,"line_end":77,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":39886,"byte_end":39890,"line_start":17,"line_end":17,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":39997,"byte_end":40001,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":41730,"byte_end":41734,"line_start":74,"line_end":74,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":41847,"byte_end":41851,"line_start":80,"line_end":80,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":172},{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/map.rs","byte_start":42829,"byte_end":42832,"line_start":25,"line_end":25,"column_start":14,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/map.rs","byte_start":43001,"byte_end":43004,"line_start":32,"line_end":32,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/map.rs","byte_start":43266,"byte_end":43269,"line_start":45,"line_end":45,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":214},{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":18634,"byte_end":18635,"line_start":119,"line_end":119,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/into_future.rs","byte_start":66076,"byte_end":66086,"line_start":16,"line_end":16,"column_start":11,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":378}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/into_future.rs","byte_start":66237,"byte_end":66247,"line_start":23,"line_end":23,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":381}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/into_future.rs","byte_start":66370,"byte_end":66380,"line_start":29,"line_end":29,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":384},{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten.rs","byte_start":67089,"byte_end":67099,"line_start":20,"line_end":20,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":426}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten.rs","byte_start":67229,"byte_end":67239,"line_start":26,"line_end":26,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":429}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten.rs","byte_start":67482,"byte_end":67492,"line_start":39,"line_end":39,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":432},{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten.rs","byte_start":68445,"byte_end":68455,"line_start":67,"line_end":67,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten.rs","byte_start":68698,"byte_end":68708,"line_start":80,"line_end":80,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":439},{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten_err.rs","byte_start":72032,"byte_end":72045,"line_start":17,"line_end":17,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten_err.rs","byte_start":72175,"byte_end":72188,"line_start":23,"line_end":23,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten_err.rs","byte_start":72431,"byte_end":72444,"line_start":36,"line_end":36,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":477},{"krate":0,"index":478}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":48622,"byte_end":48625,"line_start":134,"line_end":134,"column_start":48,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":73753,"byte_end":73757,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":74353,"byte_end":74357,"line_start":42,"line_end":42,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":587}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":74501,"byte_end":74505,"line_start":51,"line_end":51,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":591},{"krate":0,"index":592}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":75108,"byte_end":75115,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":626}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":75676,"byte_end":75683,"line_start":40,"line_end":40,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":631},{"krate":0,"index":632}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":75828,"byte_end":75835,"line_start":48,"line_end":48,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":75861,"byte_end":75868,"line_start":50,"line_end":50,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":637}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":76622,"byte_end":76631,"line_start":24,"line_end":24,"column_start":37,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":77234,"byte_end":77243,"line_start":47,"line_end":47,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":678},{"krate":0,"index":679}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":78341,"byte_end":78350,"line_start":79,"line_end":79,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":682}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":78551,"byte_end":78560,"line_start":88,"line_end":88,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":685},{"krate":0,"index":686}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":79880,"byte_end":79892,"line_start":25,"line_end":25,"column_start":40,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":80118,"byte_end":80130,"line_start":32,"line_end":32,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":730},{"krate":0,"index":731}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":81243,"byte_end":81255,"line_start":64,"line_end":64,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":734}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":81459,"byte_end":81471,"line_start":73,"line_end":73,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":737},{"krate":0,"index":738}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/option.rs","byte_start":83121,"byte_end":83133,"line_start":34,"line_end":34,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":769}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/option.rs","byte_start":83231,"byte_end":83243,"line_start":40,"line_end":40,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":772},{"krate":0,"index":773}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/option.rs","byte_start":83557,"byte_end":83569,"line_start":51,"line_end":51,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":776}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/option.rs","byte_start":83756,"byte_end":83768,"line_start":60,"line_end":60,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":779}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":84206,"byte_end":84212,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":84906,"byte_end":84912,"line_start":43,"line_end":43,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":813}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":85054,"byte_end":85060,"line_start":49,"line_end":49,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":817},{"krate":0,"index":818}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":85788,"byte_end":85801,"line_start":19,"line_end":19,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":856},{"krate":0,"index":857}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":86367,"byte_end":86380,"line_start":40,"line_end":40,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":860}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":87400,"byte_end":87413,"line_start":70,"line_end":70,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":864},{"krate":0,"index":865}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":89585,"byte_end":89590,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":899}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":89769,"byte_end":89774,"line_start":19,"line_end":19,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":89806,"byte_end":89811,"line_start":21,"line_end":21,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":904}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":89908,"byte_end":89913,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":907},{"krate":0,"index":908}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":96994,"byte_end":97000,"line_start":14,"line_end":14,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":99436,"byte_end":99442,"line_start":94,"line_end":94,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1045},{"krate":0,"index":1046}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":100146,"byte_end":100152,"line_start":116,"line_end":116,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1050}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":108111,"byte_end":108120,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":109959,"byte_end":109968,"line_start":61,"line_end":61,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1170},{"krate":0,"index":1171}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":111763,"byte_end":111769,"line_start":35,"line_end":35,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1207}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":112108,"byte_end":112114,"line_start":46,"line_end":46,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1212}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":112499,"byte_end":112505,"line_start":58,"line_end":58,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1217}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":112886,"byte_end":112892,"line_start":70,"line_end":70,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1220}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":113133,"byte_end":113139,"line_start":80,"line_end":80,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1224},{"krate":0,"index":1225}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":113478,"byte_end":113484,"line_start":95,"line_end":95,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1229}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":113760,"byte_end":113766,"line_start":108,"line_end":108,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1233},{"krate":0,"index":1234},{"krate":0,"index":1235}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":114301,"byte_end":114307,"line_start":130,"line_end":130,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1239}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/chain.rs","byte_start":177157,"byte_end":177162,"line_start":20,"line_end":20,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1336}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/chain.rs","byte_start":177388,"byte_end":177393,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1340}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/chain.rs","byte_start":177602,"byte_end":177607,"line_start":40,"line_end":40,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1344},{"krate":0,"index":1345},{"krate":0,"index":1346}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/collect.rs","byte_start":179203,"byte_end":179210,"line_start":20,"line_end":20,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1387},{"krate":0,"index":1388}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/collect.rs","byte_start":179475,"byte_end":179482,"line_start":30,"line_end":30,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1392}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/collect.rs","byte_start":179660,"byte_end":179667,"line_start":40,"line_end":40,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1396},{"krate":0,"index":1397}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/unzip.rs","byte_start":180693,"byte_end":180698,"line_start":21,"line_end":21,"column_start":50,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1439},{"krate":0,"index":1440}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/unzip.rs","byte_start":181092,"byte_end":181097,"line_start":32,"line_end":32,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1447}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/unzip.rs","byte_start":181347,"byte_end":181352,"line_start":43,"line_end":43,"column_start":41,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1454},{"krate":0,"index":1455}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/concat.rs","byte_start":182477,"byte_end":182483,"line_start":19,"line_end":19,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1492}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/concat.rs","byte_start":182703,"byte_end":182709,"line_start":29,"line_end":29,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1495},{"krate":0,"index":1496}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/concat.rs","byte_start":183417,"byte_end":183423,"line_start":54,"line_end":54,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1499}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/count.rs","byte_start":184149,"byte_end":184154,"line_start":19,"line_end":19,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1539}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/count.rs","byte_start":184375,"byte_end":184380,"line_start":28,"line_end":28,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1542}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/count.rs","byte_start":184512,"byte_end":184517,"line_start":34,"line_end":34,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1545}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/count.rs","byte_start":184635,"byte_end":184640,"line_start":40,"line_end":40,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1548},{"krate":0,"index":1549}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/cycle.rs","byte_start":185446,"byte_end":185451,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1582}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/cycle.rs","byte_start":185607,"byte_end":185612,"line_start":28,"line_end":28,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1585},{"krate":0,"index":1586},{"krate":0,"index":1587}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/cycle.rs","byte_start":186361,"byte_end":186366,"line_start":56,"line_end":56,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1590}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/enumerate.rs","byte_start":187114,"byte_end":187123,"line_start":20,"line_end":20,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1620},{"krate":0,"index":7457},{"krate":0,"index":7458},{"krate":0,"index":7459},{"krate":0,"index":7460}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/enumerate.rs","byte_start":187309,"byte_end":187318,"line_start":28,"line_end":28,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1623}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/enumerate.rs","byte_start":187436,"byte_end":187445,"line_start":34,"line_end":34,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1626},{"krate":0,"index":1627},{"krate":0,"index":1628}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter.rs","byte_start":188886,"byte_end":188892,"line_start":27,"line_end":27,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1669}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter.rs","byte_start":189365,"byte_end":189371,"line_start":43,"line_end":43,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1675},{"krate":0,"index":7522},{"krate":0,"index":7523},{"krate":0,"index":7524},{"krate":0,"index":7525}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter.rs","byte_start":189694,"byte_end":189700,"line_start":56,"line_end":56,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1680}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter.rs","byte_start":190037,"byte_end":190043,"line_start":68,"line_end":68,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1686},{"krate":0,"index":1687},{"krate":0,"index":1688}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter_map.rs","byte_start":192215,"byte_end":192224,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1729}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter_map.rs","byte_start":192521,"byte_end":192530,"line_start":37,"line_end":37,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1734},{"krate":0,"index":7583},{"krate":0,"index":7584},{"krate":0,"index":7585},{"krate":0,"index":7586}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter_map.rs","byte_start":192797,"byte_end":192806,"line_start":50,"line_end":50,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1740}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter_map.rs","byte_start":193073,"byte_end":193082,"line_start":61,"line_end":61,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1746},{"krate":0,"index":1747},{"krate":0,"index":1748}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/flatten.rs","byte_start":195184,"byte_end":195191,"line_start":21,"line_end":21,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1779},{"krate":0,"index":7636},{"krate":0,"index":7637},{"krate":0,"index":7638},{"krate":0,"index":7639}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/flatten.rs","byte_start":195360,"byte_end":195367,"line_start":29,"line_end":29,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1782}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/flatten.rs","byte_start":195559,"byte_end":195566,"line_start":39,"line_end":39,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1785},{"krate":0,"index":1786}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fold.rs","byte_start":197080,"byte_end":197084,"line_start":22,"line_end":22,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1822}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fold.rs","byte_start":197440,"byte_end":197444,"line_start":37,"line_end":37,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1828}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fold.rs","byte_start":197705,"byte_end":197709,"line_start":48,"line_end":48,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1834}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fold.rs","byte_start":197944,"byte_end":197948,"line_start":59,"line_end":59,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1840},{"krate":0,"index":1841}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/any.rs","byte_start":199537,"byte_end":199540,"line_start":22,"line_end":22,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1879}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/any.rs","byte_start":199870,"byte_end":199873,"line_start":36,"line_end":36,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1884}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/any.rs","byte_start":200126,"byte_end":200129,"line_start":47,"line_end":47,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1889}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/any.rs","byte_start":200358,"byte_end":200361,"line_start":58,"line_end":58,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1894},{"krate":0,"index":1895}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/all.rs","byte_start":202113,"byte_end":202116,"line_start":22,"line_end":22,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1933}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/all.rs","byte_start":202446,"byte_end":202449,"line_start":36,"line_end":36,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1938}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/all.rs","byte_start":202701,"byte_end":202704,"line_start":47,"line_end":47,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1943}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/all.rs","byte_start":202933,"byte_end":202936,"line_start":58,"line_end":58,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1948},{"krate":0,"index":1949}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/for_each.rs","byte_start":204690,"byte_end":204697,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1991}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/for_each.rs","byte_start":204990,"byte_end":204997,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1996}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/for_each.rs","byte_start":205228,"byte_end":205235,"line_start":45,"line_end":45,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2001}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/for_each.rs","byte_start":205474,"byte_end":205481,"line_start":56,"line_end":56,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2006},{"krate":0,"index":2007}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fuse.rs","byte_start":206582,"byte_end":206586,"line_start":20,"line_end":20,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2037},{"krate":0,"index":2038},{"krate":0,"index":7983},{"krate":0,"index":7984},{"krate":0,"index":7985},{"krate":0,"index":7986}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fuse.rs","byte_start":207083,"byte_end":207087,"line_start":37,"line_end":37,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2041}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fuse.rs","byte_start":207185,"byte_end":207189,"line_start":43,"line_end":43,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2044},{"krate":0,"index":2045},{"krate":0,"index":2046}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":208391,"byte_end":208403,"line_start":15,"line_end":15,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2079},{"krate":0,"index":2080},{"krate":0,"index":2081},{"krate":0,"index":2082},{"krate":0,"index":2083}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":210893,"byte_end":210905,"line_start":73,"line_end":73,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2086}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":211025,"byte_end":211037,"line_start":79,"line_end":79,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2089},{"krate":0,"index":2090}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/map.rs","byte_start":211922,"byte_end":211925,"line_start":22,"line_end":22,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2127}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/map.rs","byte_start":212114,"byte_end":212117,"line_start":31,"line_end":31,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2131},{"krate":0,"index":8107},{"krate":0,"index":8108},{"krate":0,"index":8109},{"krate":0,"index":8110}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/map.rs","byte_start":212286,"byte_end":212289,"line_start":39,"line_end":39,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2135}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/map.rs","byte_start":212457,"byte_end":212460,"line_start":49,"line_end":49,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2139},{"krate":0,"index":2140},{"krate":0,"index":2142}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/next.rs","byte_start":213572,"byte_end":213576,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/next.rs","byte_start":213627,"byte_end":213631,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2179}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/next.rs","byte_start":213782,"byte_end":213786,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2182}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/next.rs","byte_start":213925,"byte_end":213929,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2185},{"krate":0,"index":2186}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/select_next_some.rs","byte_start":214580,"byte_end":214594,"line_start":16,"line_end":16,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2220}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/select_next_some.rs","byte_start":214745,"byte_end":214759,"line_start":22,"line_end":22,"column_start":56,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":2223}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/select_next_some.rs","byte_start":214903,"byte_end":214917,"line_start":28,"line_end":28,"column_start":51,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":2226},{"krate":0,"index":2227}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":216228,"byte_end":216236,"line_start":29,"line_end":29,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2280},{"krate":0,"index":8250},{"krate":0,"index":8251},{"krate":0,"index":8252},{"krate":0,"index":8253},{"krate":0,"index":2281},{"krate":0,"index":2282},{"krate":0,"index":2283},{"krate":0,"index":2284},{"krate":0,"index":2285},{"krate":0,"index":2287}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":221733,"byte_end":221741,"line_start":189,"line_end":189,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2292}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":221883,"byte_end":221891,"line_start":195,"line_end":195,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2295},{"krate":0,"index":2296},{"krate":0,"index":2297}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":223050,"byte_end":223054,"line_start":237,"line_end":237,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2300}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":223299,"byte_end":223303,"line_start":247,"line_end":247,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2303}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":223414,"byte_end":223418,"line_start":253,"line_end":253,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2307},{"krate":0,"index":2308}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":224115,"byte_end":224122,"line_start":279,"line_end":279,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2311}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":224370,"byte_end":224377,"line_start":289,"line_end":289,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2314}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":224488,"byte_end":224495,"line_start":295,"line_end":295,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2318},{"krate":0,"index":2319}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":225215,"byte_end":225221,"line_start":321,"line_end":321,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2323}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":225573,"byte_end":225579,"line_start":332,"line_end":332,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2329}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":225848,"byte_end":225854,"line_start":343,"line_end":343,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2334},{"krate":0,"index":2335}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":227115,"byte_end":227123,"line_start":381,"line_end":381,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2339}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":227443,"byte_end":227451,"line_start":394,"line_end":394,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2344}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":227635,"byte_end":227643,"line_start":405,"line_end":405,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2348},{"krate":0,"index":2349}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":228014,"byte_end":228024,"line_start":423,"line_end":423,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2359},{"krate":0,"index":2360}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip.rs","byte_start":228689,"byte_end":228693,"line_start":20,"line_end":20,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2403},{"krate":0,"index":8474},{"krate":0,"index":8475},{"krate":0,"index":8476},{"krate":0,"index":8477}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip.rs","byte_start":228884,"byte_end":228888,"line_start":28,"line_end":28,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2406}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip.rs","byte_start":229006,"byte_end":229010,"line_start":34,"line_end":34,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2409},{"krate":0,"index":2410},{"krate":0,"index":2411}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip_while.rs","byte_start":230607,"byte_end":230616,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2450}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip_while.rs","byte_start":231068,"byte_end":231077,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2455},{"krate":0,"index":8543},{"krate":0,"index":8544},{"krate":0,"index":8545},{"krate":0,"index":8546}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip_while.rs","byte_start":231403,"byte_end":231412,"line_start":54,"line_end":54,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2460}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip_while.rs","byte_start":231660,"byte_end":231669,"line_start":65,"line_end":65,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2465},{"krate":0,"index":2466},{"krate":0,"index":2467}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take.rs","byte_start":233969,"byte_end":233973,"line_start":21,"line_end":21,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2500},{"krate":0,"index":8587},{"krate":0,"index":8588},{"krate":0,"index":8589},{"krate":0,"index":8590}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take.rs","byte_start":234146,"byte_end":234150,"line_start":29,"line_end":29,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2503},{"krate":0,"index":2504},{"krate":0,"index":2505}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take.rs","byte_start":235122,"byte_end":235126,"line_start":68,"line_end":68,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2508}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_while.rs","byte_start":236149,"byte_end":236158,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2546}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_while.rs","byte_start":236606,"byte_end":236615,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2551},{"krate":0,"index":8656},{"krate":0,"index":8657},{"krate":0,"index":8658},{"krate":0,"index":8659}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_while.rs","byte_start":236934,"byte_end":236943,"line_start":54,"line_end":54,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2556},{"krate":0,"index":2557},{"krate":0,"index":2558}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_while.rs","byte_start":238462,"byte_end":238471,"line_start":104,"line_end":104,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2563}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":239855,"byte_end":239864,"line_start":30,"line_end":30,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2600}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":240152,"byte_end":240161,"line_start":41,"line_end":41,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2604},{"krate":0,"index":8713},{"krate":0,"index":8714},{"krate":0,"index":8715},{"krate":0,"index":8716},{"krate":0,"index":2605},{"krate":0,"index":2606},{"krate":0,"index":2607}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":242278,"byte_end":242287,"line_start":111,"line_end":111,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2611},{"krate":0,"index":2612},{"krate":0,"index":2613}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":243319,"byte_end":243328,"line_start":150,"line_end":150,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2617}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/then.rs","byte_start":244270,"byte_end":244274,"line_start":23,"line_end":23,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2655}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/then.rs","byte_start":244525,"byte_end":244529,"line_start":33,"line_end":33,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2660},{"krate":0,"index":8774},{"krate":0,"index":8775},{"krate":0,"index":8776},{"krate":0,"index":8777}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/then.rs","byte_start":244775,"byte_end":244779,"line_start":45,"line_end":45,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2665}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/then.rs","byte_start":245005,"byte_end":245009,"line_start":56,"line_end":56,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2670},{"krate":0,"index":2671},{"krate":0,"index":2672}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":246891,"byte_end":246894,"line_start":22,"line_end":22,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2710},{"krate":0,"index":2711},{"krate":0,"index":2712},{"krate":0,"index":2713},{"krate":0,"index":2714}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":248480,"byte_end":248483,"line_start":61,"line_end":61,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2718}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":248678,"byte_end":248681,"line_start":71,"line_end":71,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2722},{"krate":0,"index":2723},{"krate":0,"index":2724}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/scan.rs","byte_start":251389,"byte_end":251393,"line_start":28,"line_end":28,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2768}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/scan.rs","byte_start":251879,"byte_end":251883,"line_start":45,"line_end":45,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2775}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/scan.rs","byte_start":252047,"byte_end":252051,"line_start":52,"line_end":52,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2782},{"krate":0,"index":8900},{"krate":0,"index":8901},{"krate":0,"index":8902},{"krate":0,"index":8903}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/scan.rs","byte_start":252413,"byte_end":252417,"line_start":65,"line_end":65,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2789},{"krate":0,"index":2790},{"krate":0,"index":2791}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/scan.rs","byte_start":253644,"byte_end":253648,"line_start":108,"line_end":108,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2798}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":130067,"byte_end":130068,"line_start":226,"line_end":226,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/and_then.rs","byte_start":293150,"byte_end":293157,"line_start":23,"line_end":23,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3078}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/and_then.rs","byte_start":293450,"byte_end":293457,"line_start":36,"line_end":36,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3083},{"krate":0,"index":8961},{"krate":0,"index":8962},{"krate":0,"index":8963},{"krate":0,"index":8964}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/and_then.rs","byte_start":293738,"byte_end":293745,"line_start":49,"line_end":49,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3088},{"krate":0,"index":3089},{"krate":0,"index":3090}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/and_then.rs","byte_start":294888,"byte_end":294895,"line_start":85,"line_end":85,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3095}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/into_stream.rs","byte_start":295813,"byte_end":295823,"line_start":18,"line_end":18,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3125},{"krate":0,"index":9208},{"krate":0,"index":9209},{"krate":0,"index":9210},{"krate":0,"index":9211}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/into_stream.rs","byte_start":296016,"byte_end":296026,"line_start":27,"line_end":27,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":3128}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/into_stream.rs","byte_start":296147,"byte_end":296157,"line_start":33,"line_end":33,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3131},{"krate":0,"index":3132},{"krate":0,"index":3133}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/or_else.rs","byte_start":297256,"byte_end":297262,"line_start":23,"line_end":23,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3174}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/or_else.rs","byte_start":297554,"byte_end":297560,"line_start":36,"line_end":36,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3179},{"krate":0,"index":9407},{"krate":0,"index":9408},{"krate":0,"index":9409},{"krate":0,"index":9410}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/or_else.rs","byte_start":297838,"byte_end":297844,"line_start":49,"line_end":49,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3184},{"krate":0,"index":3185},{"krate":0,"index":3186}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/or_else.rs","byte_start":299121,"byte_end":299127,"line_start":89,"line_end":89,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3191}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_next.rs","byte_start":300031,"byte_end":300038,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_next.rs","byte_start":300092,"byte_end":300099,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3228}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_next.rs","byte_start":300262,"byte_end":300269,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":3231}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_next.rs","byte_start":300411,"byte_end":300418,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3234},{"krate":0,"index":3235}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_for_each.rs","byte_start":301194,"byte_end":301204,"line_start":21,"line_end":21,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3273}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_for_each.rs","byte_start":301500,"byte_end":301510,"line_start":34,"line_end":34,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3278}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_for_each.rs","byte_start":301755,"byte_end":301765,"line_start":45,"line_end":45,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3283},{"krate":0,"index":3284}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter.rs","byte_start":303164,"byte_end":303173,"line_start":27,"line_end":27,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3325}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter.rs","byte_start":303569,"byte_end":303578,"line_start":42,"line_end":42,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3330},{"krate":0,"index":9537},{"krate":0,"index":9538},{"krate":0,"index":9539},{"krate":0,"index":9540}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter.rs","byte_start":303821,"byte_end":303830,"line_start":53,"line_end":53,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3335}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter.rs","byte_start":304087,"byte_end":304096,"line_start":64,"line_end":64,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3340},{"krate":0,"index":3341},{"krate":0,"index":3342}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter_map.rs","byte_start":306237,"byte_end":306249,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3383}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter_map.rs","byte_start":306549,"byte_end":306561,"line_start":37,"line_end":37,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3388},{"krate":0,"index":9598},{"krate":0,"index":9599},{"krate":0,"index":9600},{"krate":0,"index":9601}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter_map.rs","byte_start":306758,"byte_end":306770,"line_start":45,"line_end":45,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3394}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter_map.rs","byte_start":307048,"byte_end":307060,"line_start":56,"line_end":56,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3400},{"krate":0,"index":3401},{"krate":0,"index":3402}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_flatten.rs","byte_start":309244,"byte_end":309254,"line_start":24,"line_end":24,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3435},{"krate":0,"index":9642},{"krate":0,"index":9643},{"krate":0,"index":9644},{"krate":0,"index":9645}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_flatten.rs","byte_start":309519,"byte_end":309529,"line_start":37,"line_end":37,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3438}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_flatten.rs","byte_start":309775,"byte_end":309785,"line_start":48,"line_end":48,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3441},{"krate":0,"index":3442}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_collect.rs","byte_start":311394,"byte_end":311404,"line_start":20,"line_end":20,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3483}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_collect.rs","byte_start":311544,"byte_end":311554,"line_start":26,"line_end":26,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3487}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_collect.rs","byte_start":311742,"byte_end":311752,"line_start":36,"line_end":36,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3491},{"krate":0,"index":3492}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_concat.rs","byte_start":312750,"byte_end":312759,"line_start":19,"line_end":19,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3521}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_concat.rs","byte_start":312978,"byte_end":312987,"line_start":29,"line_end":29,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3524},{"krate":0,"index":3525}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_fold.rs","byte_start":314250,"byte_end":314257,"line_start":22,"line_end":22,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3567}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_fold.rs","byte_start":314616,"byte_end":314623,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3573}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_fold.rs","byte_start":314903,"byte_end":314910,"line_start":48,"line_end":48,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3579}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_fold.rs","byte_start":315164,"byte_end":315171,"line_start":59,"line_end":59,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3585},{"krate":0,"index":3586}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":319034,"byte_end":319043,"line_start":78,"line_end":78,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3628}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":319305,"byte_end":319314,"line_start":88,"line_end":88,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3634},{"krate":0,"index":3635}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_skip_while.rs","byte_start":321060,"byte_end":321072,"line_start":26,"line_end":26,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3680}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_skip_while.rs","byte_start":321528,"byte_end":321540,"line_start":42,"line_end":42,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3685},{"krate":0,"index":9926},{"krate":0,"index":9927},{"krate":0,"index":9928},{"krate":0,"index":9929}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_skip_while.rs","byte_start":321880,"byte_end":321892,"line_start":55,"line_end":55,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3690},{"krate":0,"index":3691},{"krate":0,"index":3692}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_skip_while.rs","byte_start":323391,"byte_end":323403,"line_start":100,"line_end":100,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3697}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_take_while.rs","byte_start":324631,"byte_end":324643,"line_start":29,"line_end":29,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3738}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_take_while.rs","byte_start":325095,"byte_end":325107,"line_start":45,"line_end":45,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3743},{"krate":0,"index":9995},{"krate":0,"index":9996},{"krate":0,"index":9997},{"krate":0,"index":9998}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_take_while.rs","byte_start":325445,"byte_end":325457,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3748},{"krate":0,"index":3749},{"krate":0,"index":3750}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_take_while.rs","byte_start":327064,"byte_end":327076,"line_start":109,"line_end":109,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3755}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":259433,"byte_end":259434,"line_start":154,"line_end":154,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":327883,"byte_end":327887,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":328509,"byte_end":328513,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3894},{"krate":0,"index":3895},{"krate":0,"index":3896}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":329704,"byte_end":329710,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":329737,"byte_end":329743,"line_start":36,"line_end":36,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3931},{"krate":0,"index":3932},{"krate":0,"index":3933}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":330051,"byte_end":330057,"line_start":51,"line_end":51,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3936}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":330654,"byte_end":330664,"line_start":17,"line_end":17,"column_start":36,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":330708,"byte_end":330718,"line_start":19,"line_end":19,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3971},{"krate":0,"index":3972},{"krate":0,"index":3973}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":331032,"byte_end":331042,"line_start":31,"line_end":31,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3977}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/empty.rs","byte_start":333562,"byte_end":333567,"line_start":21,"line_end":21,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/empty.rs","byte_start":333599,"byte_end":333604,"line_start":23,"line_end":23,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4018}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/empty.rs","byte_start":333689,"byte_end":333694,"line_start":29,"line_end":29,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4021},{"krate":0,"index":4022},{"krate":0,"index":4023}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/empty.rs","byte_start":333943,"byte_end":333948,"line_start":41,"line_end":41,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4026}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":334887,"byte_end":334891,"line_start":34,"line_end":34,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4068}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":335020,"byte_end":335024,"line_start":40,"line_end":40,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4071},{"krate":0,"index":4072},{"krate":0,"index":4073}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":335629,"byte_end":335633,"line_start":63,"line_end":63,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4076}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/pending.rs","byte_start":336292,"byte_end":336299,"line_start":21,"line_end":21,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/pending.rs","byte_start":336331,"byte_end":336338,"line_start":23,"line_end":23,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4114}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/pending.rs","byte_start":336423,"byte_end":336430,"line_start":29,"line_end":29,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4117},{"krate":0,"index":4118},{"krate":0,"index":4119}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/pending.rs","byte_start":336675,"byte_end":336682,"line_start":41,"line_end":41,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4122}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":337069,"byte_end":337075,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":337106,"byte_end":337112,"line_start":17,"line_end":17,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4157}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":337877,"byte_end":337883,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4164},{"krate":0,"index":4165}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":338579,"byte_end":338592,"line_start":18,"line_end":18,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4193},{"krate":0,"index":4194},{"krate":0,"index":4195}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":339505,"byte_end":339518,"line_start":47,"line_end":47,"column_start":40,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4198}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":342405,"byte_end":342411,"line_start":61,"line_end":61,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4249},{"krate":0,"index":4250},{"krate":0,"index":4251},{"krate":0,"index":4252}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":343715,"byte_end":343721,"line_start":96,"line_end":96,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4256}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":343900,"byte_end":343906,"line_start":106,"line_end":106,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4260},{"krate":0,"index":4261}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":344619,"byte_end":344627,"line_start":17,"line_end":17,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4305}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":344924,"byte_end":344932,"line_start":31,"line_end":31,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4307}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":347959,"byte_end":347977,"line_start":130,"line_end":130,"column_start":29,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4318},{"krate":0,"index":4319},{"krate":0,"index":4320},{"krate":0,"index":4321}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":349426,"byte_end":349444,"line_start":165,"line_end":165,"column_start":45,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":4327}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":349724,"byte_end":349742,"line_start":176,"line_end":176,"column_start":40,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":4333},{"krate":0,"index":4334}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":350854,"byte_end":350872,"line_start":216,"line_end":216,"column_start":44,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":4343}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":353443,"byte_end":353449,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4399}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":353689,"byte_end":353695,"line_start":78,"line_end":78,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4405}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":353975,"byte_end":353981,"line_start":92,"line_end":92,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4411},{"krate":0,"index":4412}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":356404,"byte_end":356406,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":356461,"byte_end":356463,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":362736,"byte_end":362737,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4523},{"krate":0,"index":4524}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":362972,"byte_end":362973,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4532}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":363243,"byte_end":363244,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4540}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":364260,"byte_end":364264,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4548}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":364358,"byte_end":364362,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4552},{"krate":0,"index":4553}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":364621,"byte_end":364628,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4558},{"krate":0,"index":4559}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":364851,"byte_end":364858,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4564}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":365049,"byte_end":365056,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4569}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":365361,"byte_end":365374,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":4575},{"krate":0,"index":4576}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":365791,"byte_end":365800,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4581},{"krate":0,"index":4582}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":366084,"byte_end":366093,"line_start":155,"line_end":155,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4587}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":366355,"byte_end":366364,"line_start":165,"line_end":165,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4592}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":366686,"byte_end":366693,"line_start":181,"line_end":181,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":4599},{"krate":0,"index":4600}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":366912,"byte_end":366919,"line_start":190,"line_end":190,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4606}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":367097,"byte_end":367104,"line_start":198,"line_end":198,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4612}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":367405,"byte_end":367413,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4620},{"krate":0,"index":4621}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":367636,"byte_end":367644,"line_start":222,"line_end":222,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":4627}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":367826,"byte_end":367834,"line_start":230,"line_end":230,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4633}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":368144,"byte_end":368155,"line_start":245,"line_end":245,"column_start":49,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4642},{"krate":0,"index":4643}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":368415,"byte_end":368426,"line_start":256,"line_end":256,"column_start":48,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":4649}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":368663,"byte_end":368674,"line_start":266,"line_end":266,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4655}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":369041,"byte_end":369053,"line_start":283,"line_end":283,"column_start":49,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":4663},{"krate":0,"index":4664}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":369314,"byte_end":369326,"line_start":294,"line_end":294,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4670}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":369564,"byte_end":369576,"line_start":304,"line_end":304,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4676}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":370195,"byte_end":370209,"line_start":326,"line_end":326,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":4689},{"krate":0,"index":4690}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":370432,"byte_end":370446,"line_start":335,"line_end":335,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":4696}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":370647,"byte_end":370661,"line_start":343,"line_end":343,"column_start":37,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":4702}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":370967,"byte_end":370973,"line_start":357,"line_end":357,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4712}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":371066,"byte_end":371072,"line_start":362,"line_end":362,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4716},{"krate":0,"index":4717}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/unfold_state.rs","byte_start":371677,"byte_end":371688,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4728},{"krate":0,"index":4729}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":10623,"byte_end":10629,"line_start":294,"line_end":294,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":14}},{"kind":"Mod","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":10727,"byte_end":10733,"line_start":298,"line_end":298,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1259}},{"kind":"Mod","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":11000,"byte_end":11004,"line_start":309,"line_end":309,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":4436}},{"kind":"Mod","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":11015,"byte_end":11020,"line_start":311,"line_end":311,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":4502}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/flatten.rs","byte_start":35483,"byte_end":35490,"line_start":20,"line_end":20,"column_start":18,"column_end":25},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":4730},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/flatten.rs","byte_start":35620,"byte_end":35627,"line_start":26,"line_end":26,"column_start":27,"column_end":34},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":4730},"to":{"krate":4,"index":27}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/flatten.rs","byte_start":35852,"byte_end":35859,"line_start":39,"line_end":39,"column_start":22,"column_end":29},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":4730},"to":{"krate":1,"index":13093}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/flatten.rs","byte_start":36633,"byte_end":36640,"line_start":64,"line_end":64,"column_start":27,"column_end":34},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":4730},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/flatten.rs","byte_start":36865,"byte_end":36872,"line_start":77,"line_end":77,"column_start":22,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":4730},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":39886,"byte_end":39890,"line_start":17,"line_end":17,"column_start":11,"column_end":15},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":4777},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":39997,"byte_end":40001,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":4777},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":41730,"byte_end":41734,"line_start":74,"line_end":74,"column_start":35,"column_end":39},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":4777},"to":{"krate":4,"index":27}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":41847,"byte_end":41851,"line_start":80,"line_end":80,"column_start":30,"column_end":34},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":4777},"to":{"krate":1,"index":13093}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/map.rs","byte_start":42829,"byte_end":42832,"line_start":25,"line_end":25,"column_start":14,"column_end":17},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":4813},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/map.rs","byte_start":43001,"byte_end":43004,"line_start":32,"line_end":32,"column_start":33,"column_end":36},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":4813},"to":{"krate":4,"index":27}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/map.rs","byte_start":43266,"byte_end":43269,"line_start":45,"line_end":45,"column_start":28,"column_end":31},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":4813},"to":{"krate":1,"index":13093}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":18634,"byte_end":18635,"line_start":119,"line_end":119,"column_start":31,"column_end":32},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":220},"to":{"krate":0,"index":221}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":18766,"byte_end":18772,"line_start":123,"line_end":123,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":13093},"to":{"krate":0,"index":221}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/into_future.rs","byte_start":66076,"byte_end":66086,"line_start":16,"line_end":16,"column_start":11,"column_end":21},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":5365},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/into_future.rs","byte_start":66237,"byte_end":66247,"line_start":23,"line_end":23,"column_start":52,"column_end":62},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":5365},"to":{"krate":4,"index":27}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/into_future.rs","byte_start":66370,"byte_end":66380,"line_start":29,"line_end":29,"column_start":33,"column_end":43},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":5365},"to":{"krate":1,"index":13093}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten.rs","byte_start":67089,"byte_end":67099,"line_start":20,"line_end":20,"column_start":18,"column_end":28},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":5401},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten.rs","byte_start":67229,"byte_end":67239,"line_start":26,"line_end":26,"column_start":27,"column_end":37},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":5401},"to":{"krate":4,"index":27}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten.rs","byte_start":67482,"byte_end":67492,"line_start":39,"line_end":39,"column_start":22,"column_end":32},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":5401},"to":{"krate":1,"index":13093}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten.rs","byte_start":68445,"byte_end":68455,"line_start":67,"line_end":67,"column_start":27,"column_end":37},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":5401},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten.rs","byte_start":68698,"byte_end":68708,"line_start":80,"line_end":80,"column_start":22,"column_end":32},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":5401},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten_err.rs","byte_start":72032,"byte_end":72045,"line_start":17,"line_end":17,"column_start":18,"column_end":31},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":5448},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten_err.rs","byte_start":72175,"byte_end":72188,"line_start":23,"line_end":23,"column_start":27,"column_end":40},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":5448},"to":{"krate":4,"index":27}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten_err.rs","byte_start":72431,"byte_end":72444,"line_start":36,"line_end":36,"column_start":22,"column_end":35},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":5448},"to":{"krate":1,"index":13093}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":48622,"byte_end":48625,"line_start":134,"line_end":134,"column_start":48,"column_end":51},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":483},"to":{"krate":0,"index":484}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":48708,"byte_end":48717,"line_start":137,"line_end":137,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":4,"index":44},"to":{"krate":0,"index":484}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":73753,"byte_end":73757,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":6315},"to":{"krate":1,"index":3098}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":74353,"byte_end":74357,"line_start":42,"line_end":42,"column_start":28,"column_end":32},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":6315},"to":{"krate":4,"index":27}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":74501,"byte_end":74505,"line_start":51,"line_end":51,"column_start":23,"column_end":27},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":6315},"to":{"krate":1,"index":13093}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":75108,"byte_end":75115,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":6321},"to":{"krate":4,"index":27}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":75676,"byte_end":75683,"line_start":40,"line_end":40,"column_start":20,"column_end":27},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":6321},"to":{"krate":1,"index":13093}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":75828,"byte_end":75835,"line_start":48,"line_end":48,"column_start":19,"column_end":26},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":6321},"to":{"krate":1,"index":3098}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":75861,"byte_end":75868,"line_start":50,"line_end":50,"column_start":19,"column_end":26},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":6321},"to":{"krate":1,"index":2679}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":76622,"byte_end":76631,"line_start":24,"line_end":24,"column_start":37,"column_end":46},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":6327},"to":{"krate":1,"index":3098}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":77234,"byte_end":77243,"line_start":47,"line_end":47,"column_start":19,"column_end":28},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":6327},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":78341,"byte_end":78350,"line_start":79,"line_end":79,"column_start":35,"column_end":44},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":6327},"to":{"krate":4,"index":27}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":78551,"byte_end":78560,"line_start":88,"line_end":88,"column_start":30,"column_end":39},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":6327},"to":{"krate":1,"index":13093}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":79880,"byte_end":79892,"line_start":25,"line_end":25,"column_start":40,"column_end":52},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":6340},"to":{"krate":1,"index":3098}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":80118,"byte_end":80130,"line_start":32,"line_end":32,"column_start":22,"column_end":34},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":6340},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":81243,"byte_end":81255,"line_start":64,"line_end":64,"column_start":38,"column_end":50},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":6340},"to":{"krate":4,"index":27}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":81459,"byte_end":81471,"line_start":73,"line_end":73,"column_start":33,"column_end":45},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":6340},"to":{"krate":1,"index":13093}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/option.rs","byte_start":83121,"byte_end":83133,"line_start":34,"line_end":34,"column_start":21,"column_end":33},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":6353},"to":{"krate":1,"index":3035}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/option.rs","byte_start":83231,"byte_end":83243,"line_start":40,"line_end":40,"column_start":28,"column_end":40},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":6353},"to":{"krate":1,"index":13093}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/option.rs","byte_start":83557,"byte_end":83569,"line_start":51,"line_end":51,"column_start":38,"column_end":50},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":6353},"to":{"krate":4,"index":27}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/option.rs","byte_start":83756,"byte_end":83768,"line_start":60,"line_end":60,"column_start":29,"column_end":41},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":6353},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":84206,"byte_end":84212,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":803},"to":{"krate":1,"index":3098}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":84906,"byte_end":84912,"line_start":43,"line_end":43,"column_start":24,"column_end":30},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":803},"to":{"krate":1,"index":9680}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":85054,"byte_end":85060,"line_start":49,"line_end":49,"column_start":23,"column_end":29},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":803},"to":{"krate":1,"index":13093}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":85788,"byte_end":85801,"line_start":19,"line_end":19,"column_start":23,"column_end":36},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":6392},"to":{"krate":1,"index":13093}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":86367,"byte_end":86380,"line_start":40,"line_end":40,"column_start":33,"column_end":46},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":6392},"to":{"krate":4,"index":27}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":87400,"byte_end":87413,"line_start":70,"line_end":70,"column_start":23,"column_end":36},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":6392},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":89585,"byte_end":89590,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":6431},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":89769,"byte_end":89774,"line_start":19,"line_end":19,"column_start":19,"column_end":24},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":6431},"to":{"krate":1,"index":3098}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":89806,"byte_end":89811,"line_start":21,"line_end":21,"column_start":25,"column_end":30},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":6431},"to":{"krate":4,"index":27}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":89908,"byte_end":89913,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":6431},"to":{"krate":1,"index":13093}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":96994,"byte_end":97000,"line_start":14,"line_end":14,"column_start":36,"column_end":42},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":6785},"to":{"krate":1,"index":3098}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":99436,"byte_end":99442,"line_start":94,"line_end":94,"column_start":23,"column_end":29},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":6785},"to":{"krate":1,"index":13093}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":100146,"byte_end":100152,"line_start":116,"line_end":116,"column_start":28,"column_end":34},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":6785},"to":{"krate":4,"index":27}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":108111,"byte_end":108120,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":7115},"to":{"krate":1,"index":3098}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":109959,"byte_end":109968,"line_start":61,"line_end":61,"column_start":37,"column_end":46},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":7115},"to":{"krate":1,"index":13093}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":111763,"byte_end":111769,"line_start":35,"line_end":35,"column_start":12,"column_end":18},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":7123},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":112108,"byte_end":112114,"line_start":46,"line_end":46,"column_start":15,"column_end":21},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":7123},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":112499,"byte_end":112505,"line_start":58,"line_end":58,"column_start":15,"column_end":21},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":7123},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":112886,"byte_end":112892,"line_start":70,"line_end":70,"column_start":9,"column_end":15},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":7123},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":113133,"byte_end":113139,"line_start":80,"line_end":80,"column_start":23,"column_end":29},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":7123},"to":{"krate":1,"index":13093}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":113478,"byte_end":113484,"line_start":95,"line_end":95,"column_start":28,"column_end":34},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":7123},"to":{"krate":4,"index":27}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":113760,"byte_end":113766,"line_start":108,"line_end":108,"column_start":23,"column_end":29},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":7123},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":114301,"byte_end":114307,"line_start":130,"line_end":130,"column_start":28,"column_end":34},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":7123},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/chain.rs","byte_start":177157,"byte_end":177162,"line_start":20,"line_end":20,"column_start":16,"column_end":21},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":7140},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/chain.rs","byte_start":177388,"byte_end":177393,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":7140},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/chain.rs","byte_start":177602,"byte_end":177607,"line_start":40,"line_end":40,"column_start":27,"column_end":32},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":7140},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/collect.rs","byte_start":179203,"byte_end":179210,"line_start":20,"line_end":20,"column_start":30,"column_end":37},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":7189},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/collect.rs","byte_start":179475,"byte_end":179482,"line_start":30,"line_end":30,"column_start":29,"column_end":36},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":7189},"to":{"krate":4,"index":27}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/collect.rs","byte_start":179660,"byte_end":179667,"line_start":40,"line_end":40,"column_start":24,"column_end":31},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":7189},"to":{"krate":1,"index":13093}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/unzip.rs","byte_start":180693,"byte_end":180698,"line_start":21,"line_end":21,"column_start":50,"column_end":55},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":7238},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/unzip.rs","byte_start":181092,"byte_end":181097,"line_start":32,"line_end":32,"column_start":46,"column_end":51},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":7238},"to":{"krate":4,"index":27}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/unzip.rs","byte_start":181347,"byte_end":181352,"line_start":43,"line_end":43,"column_start":41,"column_end":46},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":7238},"to":{"krate":1,"index":13093}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/concat.rs","byte_start":182477,"byte_end":182483,"line_start":19,"line_end":19,"column_start":10,"column_end":16},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":7300},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/concat.rs","byte_start":182703,"byte_end":182709,"line_start":29,"line_end":29,"column_start":21,"column_end":27},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":7300},"to":{"krate":1,"index":13093}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/concat.rs","byte_start":183417,"byte_end":183423,"line_start":54,"line_end":54,"column_start":26,"column_end":32},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":7300},"to":{"krate":4,"index":27}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/count.rs","byte_start":184149,"byte_end":184154,"line_start":19,"line_end":19,"column_start":25,"column_end":30},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":7340},"to":{"krate":1,"index":9680}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/count.rs","byte_start":184375,"byte_end":184380,"line_start":28,"line_end":28,"column_start":18,"column_end":23},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":7340},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/count.rs","byte_start":184512,"byte_end":184517,"line_start":34,"line_end":34,"column_start":39,"column_end":44},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":7340},"to":{"krate":4,"index":27}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/count.rs","byte_start":184635,"byte_end":184640,"line_start":40,"line_end":40,"column_start":29,"column_end":34},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":7340},"to":{"krate":1,"index":13093}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/cycle.rs","byte_start":185446,"byte_end":185451,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":7377},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/cycle.rs","byte_start":185607,"byte_end":185612,"line_start":28,"line_end":28,"column_start":21,"column_end":26},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":7377},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/cycle.rs","byte_start":186361,"byte_end":186366,"line_start":56,"line_end":56,"column_start":26,"column_end":31},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":7377},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/enumerate.rs","byte_start":187114,"byte_end":187123,"line_start":20,"line_end":20,"column_start":18,"column_end":27},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":7417},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/enumerate.rs","byte_start":187309,"byte_end":187318,"line_start":28,"line_end":28,"column_start":48,"column_end":57},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":7417},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/enumerate.rs","byte_start":187436,"byte_end":187445,"line_start":34,"line_end":34,"column_start":29,"column_end":38},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":7417},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter.rs","byte_start":188886,"byte_end":188892,"line_start":27,"line_end":27,"column_start":33,"column_end":39},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":7461},"to":{"krate":1,"index":9680}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter.rs","byte_start":189365,"byte_end":189371,"line_start":43,"line_end":43,"column_start":18,"column_end":24},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":7461},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter.rs","byte_start":189694,"byte_end":189700,"line_start":56,"line_end":56,"column_start":34,"column_end":40},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":7461},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter.rs","byte_start":190037,"byte_end":190043,"line_start":68,"line_end":68,"column_start":29,"column_end":35},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":7461},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter_map.rs","byte_start":192215,"byte_end":192224,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":7526},"to":{"krate":1,"index":9680}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter_map.rs","byte_start":192521,"byte_end":192530,"line_start":37,"line_end":37,"column_start":18,"column_end":27},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":7526},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter_map.rs","byte_start":192797,"byte_end":192806,"line_start":50,"line_end":50,"column_start":37,"column_end":46},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":7526},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter_map.rs","byte_start":193073,"byte_end":193082,"line_start":61,"line_end":61,"column_start":32,"column_end":41},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":7526},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/flatten.rs","byte_start":195184,"byte_end":195191,"line_start":21,"line_end":21,"column_start":13,"column_end":20},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":7587},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/flatten.rs","byte_start":195360,"byte_end":195367,"line_start":29,"line_end":29,"column_start":26,"column_end":33},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":7587},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/flatten.rs","byte_start":195559,"byte_end":195566,"line_start":39,"line_end":39,"column_start":21,"column_end":28},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":7587},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fold.rs","byte_start":197080,"byte_end":197084,"line_start":22,"line_end":22,"column_start":36,"column_end":40},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":7695},"to":{"krate":1,"index":9680}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fold.rs","byte_start":197440,"byte_end":197444,"line_start":37,"line_end":37,"column_start":21,"column_end":25},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":7695},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fold.rs","byte_start":197705,"byte_end":197709,"line_start":48,"line_end":48,"column_start":37,"column_end":41},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":7695},"to":{"krate":4,"index":27}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fold.rs","byte_start":197944,"byte_end":197948,"line_start":59,"line_end":59,"column_start":32,"column_end":36},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":7695},"to":{"krate":1,"index":13093}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/any.rs","byte_start":199537,"byte_end":199540,"line_start":22,"line_end":22,"column_start":33,"column_end":36},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":7764},"to":{"krate":1,"index":9680}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/any.rs","byte_start":199870,"byte_end":199873,"line_start":36,"line_end":36,"column_start":18,"column_end":21},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":7764},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/any.rs","byte_start":200126,"byte_end":200129,"line_start":47,"line_end":47,"column_start":34,"column_end":37},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":7764},"to":{"krate":4,"index":27}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/any.rs","byte_start":200358,"byte_end":200361,"line_start":58,"line_end":58,"column_start":29,"column_end":32},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":7764},"to":{"krate":1,"index":13093}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/all.rs","byte_start":202113,"byte_end":202116,"line_start":22,"line_end":22,"column_start":33,"column_end":36},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":7825},"to":{"krate":1,"index":9680}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/all.rs","byte_start":202446,"byte_end":202449,"line_start":36,"line_end":36,"column_start":18,"column_end":21},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":7825},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/all.rs","byte_start":202701,"byte_end":202704,"line_start":47,"line_end":47,"column_start":34,"column_end":37},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":7825},"to":{"krate":4,"index":27}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/all.rs","byte_start":202933,"byte_end":202936,"line_start":58,"line_end":58,"column_start":29,"column_end":32},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":7825},"to":{"krate":1,"index":13093}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/for_each.rs","byte_start":204690,"byte_end":204697,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":7886},"to":{"krate":1,"index":9680}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/for_each.rs","byte_start":204990,"byte_end":204997,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":7886},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/for_each.rs","byte_start":205228,"byte_end":205235,"line_start":45,"line_end":45,"column_start":34,"column_end":41},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":7886},"to":{"krate":4,"index":27}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/for_each.rs","byte_start":205474,"byte_end":205481,"line_start":56,"line_end":56,"column_start":29,"column_end":36},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":7886},"to":{"krate":1,"index":13093}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fuse.rs","byte_start":206582,"byte_end":206586,"line_start":20,"line_end":20,"column_start":10,"column_end":14},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":7943},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fuse.rs","byte_start":207083,"byte_end":207087,"line_start":37,"line_end":37,"column_start":33,"column_end":37},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":7943},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fuse.rs","byte_start":207185,"byte_end":207189,"line_start":43,"line_end":43,"column_start":28,"column_end":32},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":7943},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":208391,"byte_end":208403,"line_start":15,"line_end":15,"column_start":26,"column_end":38},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":7987},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":210893,"byte_end":210905,"line_start":73,"line_end":73,"column_start":42,"column_end":54},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":7987},"to":{"krate":4,"index":27}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":211025,"byte_end":211037,"line_start":79,"line_end":79,"column_start":37,"column_end":49},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":7987},"to":{"krate":1,"index":13093}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/map.rs","byte_start":211922,"byte_end":211925,"line_start":22,"line_end":22,"column_start":28,"column_end":31},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":8062},"to":{"krate":1,"index":9680}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/map.rs","byte_start":212114,"byte_end":212117,"line_start":31,"line_end":31,"column_start":13,"column_end":16},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":8062},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/map.rs","byte_start":212286,"byte_end":212289,"line_start":39,"line_end":39,"column_start":29,"column_end":32},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":8062},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/map.rs","byte_start":212457,"byte_end":212460,"line_start":49,"line_end":49,"column_start":24,"column_end":27},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":8062},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/next.rs","byte_start":213572,"byte_end":213576,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":8194},"to":{"krate":1,"index":3098}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/next.rs","byte_start":213627,"byte_end":213631,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":8194},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/next.rs","byte_start":213782,"byte_end":213786,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":8194},"to":{"krate":4,"index":27}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/next.rs","byte_start":213925,"byte_end":213929,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":8194},"to":{"krate":1,"index":13093}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/select_next_some.rs","byte_start":214580,"byte_end":214594,"line_start":16,"line_end":16,"column_start":22,"column_end":36},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":8202},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/select_next_some.rs","byte_start":214745,"byte_end":214759,"line_start":22,"line_end":22,"column_start":56,"column_end":70},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":8202},"to":{"krate":4,"index":27}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/select_next_some.rs","byte_start":214903,"byte_end":214917,"line_start":28,"line_end":28,"column_start":51,"column_end":65},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":8202},"to":{"krate":1,"index":13093}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":216228,"byte_end":216236,"line_start":29,"line_end":29,"column_start":18,"column_end":26},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":8210},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":221733,"byte_end":221741,"line_start":189,"line_end":189,"column_start":34,"column_end":42},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":8210},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":221883,"byte_end":221891,"line_start":195,"line_end":195,"column_start":28,"column_end":36},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":8210},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":223050,"byte_end":223054,"line_start":237,"line_end":237,"column_start":25,"column_end":29},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":8254},"to":{"krate":1,"index":9680}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":223299,"byte_end":223303,"line_start":247,"line_end":247,"column_start":34,"column_end":38},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":8254},"to":{"krate":4,"index":27}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":223414,"byte_end":223418,"line_start":253,"line_end":253,"column_start":25,"column_end":29},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":8254},"to":{"krate":1,"index":13093}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":224115,"byte_end":224122,"line_start":279,"line_end":279,"column_start":25,"column_end":32},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":8295},"to":{"krate":1,"index":9680}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":224370,"byte_end":224377,"line_start":289,"line_end":289,"column_start":34,"column_end":41},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":8295},"to":{"krate":4,"index":27}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":224488,"byte_end":224495,"line_start":295,"line_end":295,"column_start":25,"column_end":32},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":8295},"to":{"krate":1,"index":13093}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":225215,"byte_end":225221,"line_start":321,"line_end":321,"column_start":28,"column_end":34},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":8336},"to":{"krate":1,"index":9680}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":225573,"byte_end":225579,"line_start":332,"line_end":332,"column_start":29,"column_end":35},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":8336},"to":{"krate":4,"index":27}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":225848,"byte_end":225854,"line_start":343,"line_end":343,"column_start":24,"column_end":30},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":8336},"to":{"krate":1,"index":13093}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":227115,"byte_end":227123,"line_start":381,"line_end":381,"column_start":28,"column_end":36},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":8385},"to":{"krate":1,"index":9680}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":227443,"byte_end":227451,"line_start":394,"line_end":394,"column_start":29,"column_end":37},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":8385},"to":{"krate":4,"index":27}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":227635,"byte_end":227643,"line_start":405,"line_end":405,"column_start":24,"column_end":32},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":8385},"to":{"krate":1,"index":13093}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":228014,"byte_end":228024,"line_start":423,"line_end":423,"column_start":34,"column_end":44},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":2350},"to":{"krate":0,"index":4515}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip.rs","byte_start":228689,"byte_end":228693,"line_start":20,"line_end":20,"column_start":18,"column_end":22},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":8434},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip.rs","byte_start":228884,"byte_end":228888,"line_start":28,"line_end":28,"column_start":39,"column_end":43},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":8434},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip.rs","byte_start":229006,"byte_end":229010,"line_start":34,"line_end":34,"column_start":29,"column_end":33},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":8434},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip_while.rs","byte_start":230607,"byte_end":230616,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":8478},"to":{"krate":1,"index":9680}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip_while.rs","byte_start":231068,"byte_end":231077,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":8478},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip_while.rs","byte_start":231403,"byte_end":231412,"line_start":54,"line_end":54,"column_start":34,"column_end":43},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":8478},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip_while.rs","byte_start":231660,"byte_end":231669,"line_start":65,"line_end":65,"column_start":29,"column_end":38},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":8478},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take.rs","byte_start":233969,"byte_end":233973,"line_start":21,"line_end":21,"column_start":18,"column_end":22},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":8547},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take.rs","byte_start":234146,"byte_end":234150,"line_start":29,"line_end":29,"column_start":21,"column_end":25},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":8547},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take.rs","byte_start":235122,"byte_end":235126,"line_start":68,"line_end":68,"column_start":26,"column_end":30},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":8547},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_while.rs","byte_start":236149,"byte_end":236158,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":8591},"to":{"krate":1,"index":9680}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_while.rs","byte_start":236606,"byte_end":236615,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":8591},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_while.rs","byte_start":236934,"byte_end":236943,"line_start":54,"line_end":54,"column_start":29,"column_end":38},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":8591},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_while.rs","byte_start":238462,"byte_end":238471,"line_start":104,"line_end":104,"column_start":34,"column_end":43},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":8591},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":239855,"byte_end":239864,"line_start":30,"line_end":30,"column_start":30,"column_end":39},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":8660},"to":{"krate":1,"index":9680}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":240152,"byte_end":240161,"line_start":41,"line_end":41,"column_start":15,"column_end":24},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":8660},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":242278,"byte_end":242287,"line_start":111,"line_end":111,"column_start":26,"column_end":35},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":8660},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":243319,"byte_end":243328,"line_start":150,"line_end":150,"column_start":31,"column_end":40},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":8660},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/then.rs","byte_start":244270,"byte_end":244274,"line_start":23,"line_end":23,"column_start":33,"column_end":37},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":8717},"to":{"krate":1,"index":9680}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/then.rs","byte_start":244525,"byte_end":244529,"line_start":33,"line_end":33,"column_start":18,"column_end":22},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":8717},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/then.rs","byte_start":244775,"byte_end":244779,"line_start":45,"line_end":45,"column_start":34,"column_end":38},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":8717},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/then.rs","byte_start":245005,"byte_end":245009,"line_start":56,"line_end":56,"column_start":29,"column_end":33},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":8717},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":246891,"byte_end":246894,"line_start":22,"line_end":22,"column_start":32,"column_end":35},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":8778},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":248480,"byte_end":248483,"line_start":61,"line_end":61,"column_start":32,"column_end":35},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":8778},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":248678,"byte_end":248681,"line_start":71,"line_end":71,"column_start":27,"column_end":30},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":8778},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/scan.rs","byte_start":251389,"byte_end":251393,"line_start":28,"line_end":28,"column_start":36,"column_end":40},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":8835},"to":{"krate":1,"index":9680}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/scan.rs","byte_start":251879,"byte_end":251883,"line_start":45,"line_end":45,"column_start":29,"column_end":33},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":8835},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/scan.rs","byte_start":252047,"byte_end":252051,"line_start":52,"line_end":52,"column_start":24,"column_end":28},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":8835},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/scan.rs","byte_start":252413,"byte_end":252417,"line_start":65,"line_end":65,"column_start":35,"column_end":39},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":8835},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/scan.rs","byte_start":253644,"byte_end":253648,"line_start":108,"line_end":108,"column_start":40,"column_end":44},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":8835},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":130067,"byte_end":130068,"line_start":226,"line_end":226,"column_start":31,"column_end":32},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":2803},"to":{"krate":0,"index":2804}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":130211,"byte_end":130217,"line_start":230,"line_end":230,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":4,"index":96},"to":{"krate":0,"index":2804}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/and_then.rs","byte_start":293150,"byte_end":293157,"line_start":23,"line_end":23,"column_start":33,"column_end":40},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":8904},"to":{"krate":1,"index":9680}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/and_then.rs","byte_start":293450,"byte_end":293457,"line_start":36,"line_end":36,"column_start":18,"column_end":25},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":8904},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/and_then.rs","byte_start":293738,"byte_end":293745,"line_start":49,"line_end":49,"column_start":29,"column_end":36},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":8904},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/and_then.rs","byte_start":294888,"byte_end":294895,"line_start":85,"line_end":85,"column_start":34,"column_end":41},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":8904},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/into_stream.rs","byte_start":295813,"byte_end":295823,"line_start":18,"line_end":18,"column_start":10,"column_end":20},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":9172},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/into_stream.rs","byte_start":296016,"byte_end":296026,"line_start":27,"line_end":27,"column_start":51,"column_end":61},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":9172},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/into_stream.rs","byte_start":296147,"byte_end":296157,"line_start":33,"line_end":33,"column_start":32,"column_end":42},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":9172},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/or_else.rs","byte_start":297256,"byte_end":297262,"line_start":23,"line_end":23,"column_start":33,"column_end":39},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":9350},"to":{"krate":1,"index":9680}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/or_else.rs","byte_start":297554,"byte_end":297560,"line_start":36,"line_end":36,"column_start":18,"column_end":24},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":9350},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/or_else.rs","byte_start":297838,"byte_end":297844,"line_start":49,"line_end":49,"column_start":29,"column_end":35},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":9350},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/or_else.rs","byte_start":299121,"byte_end":299127,"line_start":89,"line_end":89,"column_start":34,"column_end":40},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":9350},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_next.rs","byte_start":300031,"byte_end":300038,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":9411},"to":{"krate":1,"index":3098}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_next.rs","byte_start":300092,"byte_end":300099,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":9411},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_next.rs","byte_start":300262,"byte_end":300269,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":9411},"to":{"krate":4,"index":27}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_next.rs","byte_start":300411,"byte_end":300418,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":9411},"to":{"krate":1,"index":13093}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_for_each.rs","byte_start":301194,"byte_end":301204,"line_start":21,"line_end":21,"column_start":33,"column_end":43},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":9419},"to":{"krate":1,"index":9680}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_for_each.rs","byte_start":301500,"byte_end":301510,"line_start":34,"line_end":34,"column_start":18,"column_end":28},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":9419},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_for_each.rs","byte_start":301755,"byte_end":301765,"line_start":45,"line_end":45,"column_start":29,"column_end":39},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":9419},"to":{"krate":1,"index":13093}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter.rs","byte_start":303164,"byte_end":303173,"line_start":27,"line_end":27,"column_start":33,"column_end":42},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":9476},"to":{"krate":1,"index":9680}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter.rs","byte_start":303569,"byte_end":303578,"line_start":42,"line_end":42,"column_start":18,"column_end":27},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":9476},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter.rs","byte_start":303821,"byte_end":303830,"line_start":53,"line_end":53,"column_start":34,"column_end":43},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":9476},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter.rs","byte_start":304087,"byte_end":304096,"line_start":64,"line_end":64,"column_start":29,"column_end":38},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":9476},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter_map.rs","byte_start":306237,"byte_end":306249,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":9541},"to":{"krate":1,"index":9680}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter_map.rs","byte_start":306549,"byte_end":306561,"line_start":37,"line_end":37,"column_start":18,"column_end":30},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":9541},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter_map.rs","byte_start":306758,"byte_end":306770,"line_start":45,"line_end":45,"column_start":37,"column_end":49},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":9541},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter_map.rs","byte_start":307048,"byte_end":307060,"line_start":56,"line_end":56,"column_start":32,"column_end":44},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":9541},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_flatten.rs","byte_start":309244,"byte_end":309254,"line_start":24,"line_end":24,"column_start":10,"column_end":20},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":9602},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_flatten.rs","byte_start":309519,"byte_end":309529,"line_start":37,"line_end":37,"column_start":26,"column_end":36},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":9602},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_flatten.rs","byte_start":309775,"byte_end":309785,"line_start":48,"line_end":48,"column_start":21,"column_end":31},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":9602},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_collect.rs","byte_start":311394,"byte_end":311404,"line_start":20,"line_end":20,"column_start":33,"column_end":43},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":9646},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_collect.rs","byte_start":311544,"byte_end":311554,"line_start":26,"line_end":26,"column_start":29,"column_end":39},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":9646},"to":{"krate":4,"index":27}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_collect.rs","byte_start":311742,"byte_end":311752,"line_start":36,"line_end":36,"column_start":24,"column_end":34},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":9646},"to":{"krate":1,"index":13093}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_concat.rs","byte_start":312750,"byte_end":312759,"line_start":19,"line_end":19,"column_start":10,"column_end":19},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":9695},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_concat.rs","byte_start":312978,"byte_end":312987,"line_start":29,"line_end":29,"column_start":21,"column_end":30},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":9695},"to":{"krate":1,"index":13093}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_fold.rs","byte_start":314250,"byte_end":314257,"line_start":22,"line_end":22,"column_start":36,"column_end":43},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":9735},"to":{"krate":1,"index":9680}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_fold.rs","byte_start":314616,"byte_end":314623,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":9735},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_fold.rs","byte_start":314903,"byte_end":314910,"line_start":48,"line_end":48,"column_start":37,"column_end":44},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":9735},"to":{"krate":4,"index":27}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_fold.rs","byte_start":315164,"byte_end":315171,"line_start":59,"line_end":59,"column_start":32,"column_end":39},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":9735},"to":{"krate":1,"index":13093}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":319034,"byte_end":319043,"line_start":78,"line_end":78,"column_start":32,"column_end":41},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":9804},"to":{"krate":1,"index":9680}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":319305,"byte_end":319314,"line_start":88,"line_end":88,"column_start":34,"column_end":43},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":9804},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_skip_while.rs","byte_start":321060,"byte_end":321072,"line_start":26,"line_end":26,"column_start":33,"column_end":45},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":9861},"to":{"krate":1,"index":9680}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_skip_while.rs","byte_start":321528,"byte_end":321540,"line_start":42,"line_end":42,"column_start":18,"column_end":30},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":9861},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_skip_while.rs","byte_start":321880,"byte_end":321892,"line_start":55,"line_end":55,"column_start":29,"column_end":41},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":9861},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_skip_while.rs","byte_start":323391,"byte_end":323403,"line_start":100,"line_end":100,"column_start":34,"column_end":46},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":9861},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_take_while.rs","byte_start":324631,"byte_end":324643,"line_start":29,"line_end":29,"column_start":33,"column_end":45},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":9930},"to":{"krate":1,"index":9680}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_take_while.rs","byte_start":325095,"byte_end":325107,"line_start":45,"line_end":45,"column_start":18,"column_end":30},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":9930},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_take_while.rs","byte_start":325445,"byte_end":325457,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":9930},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_take_while.rs","byte_start":327064,"byte_end":327076,"line_start":109,"line_end":109,"column_start":34,"column_end":46},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":9930},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":259433,"byte_end":259434,"line_start":154,"line_end":154,"column_start":46,"column_end":47},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":3760},"to":{"krate":0,"index":3761}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":259515,"byte_end":259524,"line_start":157,"line_end":157,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":4,"index":127},"to":{"krate":0,"index":3761}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":327883,"byte_end":327887,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":9999},"to":{"krate":1,"index":3098}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":328509,"byte_end":328513,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":9999},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":329704,"byte_end":329710,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":10008},"to":{"krate":1,"index":3098}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":329737,"byte_end":329743,"line_start":36,"line_end":36,"column_start":20,"column_end":26},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":10008},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":330051,"byte_end":330057,"line_start":51,"line_end":51,"column_start":25,"column_end":31},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":10008},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":330654,"byte_end":330664,"line_start":17,"line_end":17,"column_start":36,"column_end":46},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":10017},"to":{"krate":1,"index":3098}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":330708,"byte_end":330718,"line_start":19,"line_end":19,"column_start":37,"column_end":47},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":10017},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":331032,"byte_end":331042,"line_start":31,"line_end":31,"column_start":42,"column_end":52},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":10017},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/empty.rs","byte_start":333562,"byte_end":333567,"line_start":21,"line_end":21,"column_start":19,"column_end":24},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":10026},"to":{"krate":1,"index":3098}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/empty.rs","byte_start":333599,"byte_end":333604,"line_start":23,"line_end":23,"column_start":25,"column_end":30},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":10026},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/empty.rs","byte_start":333689,"byte_end":333694,"line_start":29,"line_end":29,"column_start":20,"column_end":25},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":10026},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/empty.rs","byte_start":333943,"byte_end":333948,"line_start":41,"line_end":41,"column_start":19,"column_end":24},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":10026},"to":{"krate":1,"index":2679}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":334887,"byte_end":334891,"line_start":34,"line_end":34,"column_start":11,"column_end":15},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":10032},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":335020,"byte_end":335024,"line_start":40,"line_end":40,"column_start":30,"column_end":34},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":10032},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":335629,"byte_end":335633,"line_start":63,"line_end":63,"column_start":35,"column_end":39},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":10032},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/pending.rs","byte_start":336292,"byte_end":336299,"line_start":21,"line_end":21,"column_start":19,"column_end":26},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":10068},"to":{"krate":1,"index":3098}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/pending.rs","byte_start":336331,"byte_end":336338,"line_start":23,"line_end":23,"column_start":25,"column_end":32},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":10068},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/pending.rs","byte_start":336423,"byte_end":336430,"line_start":29,"line_end":29,"column_start":20,"column_end":27},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":10068},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/pending.rs","byte_start":336675,"byte_end":336682,"line_start":41,"line_end":41,"column_start":19,"column_end":26},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":10068},"to":{"krate":1,"index":2679}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":337069,"byte_end":337075,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":4150},"to":{"krate":1,"index":3098}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":337106,"byte_end":337112,"line_start":17,"line_end":17,"column_start":24,"column_end":30},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":4150},"to":{"krate":1,"index":9680}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":337877,"byte_end":337883,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":4150},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":338579,"byte_end":338592,"line_start":18,"line_end":18,"column_start":23,"column_end":36},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":10074},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":339505,"byte_end":339518,"line_start":47,"line_end":47,"column_start":40,"column_end":53},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":10074},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":342405,"byte_end":342411,"line_start":61,"line_end":61,"column_start":16,"column_end":22},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":10113},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":343715,"byte_end":343721,"line_start":96,"line_end":96,"column_start":32,"column_end":38},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":10113},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":343900,"byte_end":343906,"line_start":106,"line_end":106,"column_start":27,"column_end":33},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":10113},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":344619,"byte_end":344627,"line_start":17,"line_end":17,"column_start":6,"column_end":14},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":10158},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":344924,"byte_end":344932,"line_start":31,"line_end":31,"column_start":18,"column_end":26},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":10158},"to":{"krate":1,"index":3035}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":347959,"byte_end":347977,"line_start":130,"line_end":130,"column_start":29,"column_end":47},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":10177},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":349426,"byte_end":349444,"line_start":165,"line_end":165,"column_start":45,"column_end":63},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":10177},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":349724,"byte_end":349742,"line_start":176,"line_end":176,"column_start":40,"column_end":58},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":10177},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":350854,"byte_end":350872,"line_start":216,"line_end":216,"column_start":44,"column_end":62},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":10177},"to":{"krate":1,"index":9680}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":353443,"byte_end":353449,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":10246},"to":{"krate":1,"index":9680}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":353689,"byte_end":353695,"line_start":78,"line_end":78,"column_start":39,"column_end":45},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":10246},"to":{"krate":4,"index":110}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":353975,"byte_end":353981,"line_start":92,"line_end":92,"column_start":34,"column_end":40},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":10246},"to":{"krate":4,"index":96}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":356404,"byte_end":356406,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":4490},"to":{"krate":0,"index":4493}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":356461,"byte_end":356463,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":4492},"to":{"krate":0,"index":4494}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":356542,"byte_end":356547,"line_start":20,"line_end":20,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":22,"index":15},"to":{"krate":0,"index":4493}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":359311,"byte_end":359321,"line_start":97,"line_end":97,"column_start":26,"column_end":36},"kind":"SuperTrait","from":{"krate":22,"index":18},"to":{"krate":0,"index":4494}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":362736,"byte_end":362737,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":4520},"to":{"krate":0,"index":4515}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":362876,"byte_end":362883,"line_start":19,"line_end":19,"column_start":22,"column_end":29},"kind":"SuperTrait","from":{"krate":0,"index":4515},"to":{"krate":0,"index":4525}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":362972,"byte_end":362973,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":4529},"to":{"krate":0,"index":4525}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":363159,"byte_end":363165,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":4525},"to":{"krate":0,"index":4533}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":363243,"byte_end":363244,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":4537},"to":{"krate":0,"index":4533}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":364260,"byte_end":364264,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":4542},"to":{"krate":1,"index":3035}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":364358,"byte_end":364362,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":4542},"to":{"krate":0,"index":4515}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":364621,"byte_end":364628,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":10317},"to":{"krate":0,"index":4515}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":364851,"byte_end":364858,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":10317},"to":{"krate":0,"index":4525}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":365049,"byte_end":365056,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":10317},"to":{"krate":0,"index":4533}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":365361,"byte_end":365374,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":10338},"to":{"krate":0,"index":4515}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":365791,"byte_end":365800,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":10354},"to":{"krate":0,"index":4515}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":366084,"byte_end":366093,"line_start":155,"line_end":155,"column_start":26,"column_end":35},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":10354},"to":{"krate":0,"index":4525}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":366355,"byte_end":366364,"line_start":165,"line_end":165,"column_start":23,"column_end":32},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":10354},"to":{"krate":0,"index":4533}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":366686,"byte_end":366693,"line_start":181,"line_end":181,"column_start":41,"column_end":48},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":10369},"to":{"krate":0,"index":4515}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":366912,"byte_end":366919,"line_start":190,"line_end":190,"column_start":40,"column_end":47},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":10369},"to":{"krate":0,"index":4525}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":367097,"byte_end":367104,"line_start":198,"line_end":198,"column_start":37,"column_end":44},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":10369},"to":{"krate":0,"index":4533}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":367405,"byte_end":367413,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":10384},"to":{"krate":0,"index":4515}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":367636,"byte_end":367644,"line_start":222,"line_end":222,"column_start":40,"column_end":48},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":10384},"to":{"krate":0,"index":4525}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":367826,"byte_end":367834,"line_start":230,"line_end":230,"column_start":37,"column_end":45},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":10384},"to":{"krate":0,"index":4533}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":368144,"byte_end":368155,"line_start":245,"line_end":245,"column_start":49,"column_end":60},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":10399},"to":{"krate":0,"index":4515}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":368415,"byte_end":368426,"line_start":256,"line_end":256,"column_start":48,"column_end":59},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":10399},"to":{"krate":0,"index":4525}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":368663,"byte_end":368674,"line_start":266,"line_end":266,"column_start":45,"column_end":56},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":10399},"to":{"krate":0,"index":4533}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":369041,"byte_end":369053,"line_start":283,"line_end":283,"column_start":49,"column_end":61},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":10411},"to":{"krate":0,"index":4515}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":369314,"byte_end":369326,"line_start":294,"line_end":294,"column_start":48,"column_end":60},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":10411},"to":{"krate":0,"index":4525}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":369564,"byte_end":369576,"line_start":304,"line_end":304,"column_start":45,"column_end":57},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":10411},"to":{"krate":0,"index":4533}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":370195,"byte_end":370209,"line_start":326,"line_end":326,"column_start":41,"column_end":55},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":10423},"to":{"krate":0,"index":4515}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":370432,"byte_end":370446,"line_start":335,"line_end":335,"column_start":40,"column_end":54},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":10423},"to":{"krate":0,"index":4525}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":370647,"byte_end":370661,"line_start":343,"line_end":343,"column_start":37,"column_end":51},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":10423},"to":{"krate":0,"index":4533}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":370967,"byte_end":370973,"line_start":357,"line_end":357,"column_start":21,"column_end":27},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":4706},"to":{"krate":1,"index":3035}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":371066,"byte_end":371072,"line_start":362,"line_end":362,"column_start":27,"column_end":33},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":4706},"to":{"krate":0,"index":4515}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/unfold_state.rs","byte_start":371677,"byte_end":371688,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":10456},"to":{"krate":4294967295,"index":4294967295}}]}