{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0","program":"/Users/Seb/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","quick_xml","/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"encoding\"","--cfg","feature=\"encoding_rs\"","-C","metadata=9d1654f80a13d697","-C","extra-filename=-9d1654f80a13d697","--out-dir","/Users/Seb/Documents/GitHub/new_website/rs/target/rls/debug/deps","-L","dependency=/Users/Seb/Documents/GitHub/new_website/rs/target/rls/debug/deps","--extern","encoding_rs=/Users/Seb/Documents/GitHub/new_website/rs/target/rls/debug/deps/libencoding_rs-5e280f731423e9e9.rmeta","--extern","memchr=/Users/Seb/Documents/GitHub/new_website/rs/target/rls/debug/deps/libmemchr-f3c35657ce2a6513.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/Seb/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/Seb/Documents/GitHub/new_website/rs/target/rls/debug/deps/libquick_xml-9d1654f80a13d697.rmeta"},"prelude":{"crate_id":{"name":"quick_xml","disambiguator":[7184542662336578125,0]},"crate_root":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src","external_crates":[{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[18005471550560613154,0]}},{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5950131627965951498,0]}},{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[2741719692070475021,0]}},{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[2794630430347630357,0]}},{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[11571400143354356751,0]}},{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[7193487377502419209,0]}},{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3984647143510438201,0]}},{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12184698882915890589,0]}},{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[11618273138748747847,0]}},{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10066305145840536466,0]}},{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[6325594472561512306,0]}},{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17413800936977720645,0]}},{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[13105407555381832082,0]}},{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[2532692864303013170,0]}},{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[3831727617617568246,0]}},{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[14168850698196268560,0]}},{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[14481778817480203751,0]}},{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[3413086096283251618,0]}},{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[5901939098322418461,0]}},{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","num":20,"id":{"name":"encoding_rs","disambiguator":[13759386543286360421,0]}},{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","num":21,"id":{"name":"cfg_if","disambiguator":[12504399371578558457,0]}},{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","num":22,"id":{"name":"memchr","disambiguator":[9049664270536720304,0]}}],"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":0,"byte_end":4913,"line_start":1,"line_end":144,"column_start":1,"column_end":24}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":36},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":4624,"byte_end":4630,"line_start":130,"line_end":130,"column_start":23,"column_end":29},"alias_span":null,"name":"escape","value":"","parent":{"krate":0,"index":49}},{"kind":"Use","ref_id":{"krate":0,"index":39},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":4632,"byte_end":4640,"line_start":130,"line_end":130,"column_start":31,"column_end":39},"alias_span":null,"name":"unescape","value":"","parent":{"krate":0,"index":49}},{"kind":"Use","ref_id":{"krate":0,"index":40},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":4642,"byte_end":4655,"line_start":130,"line_end":130,"column_start":41,"column_end":54},"alias_span":null,"name":"unescape_with","value":"","parent":{"krate":0,"index":49}},{"kind":"Use","ref_id":{"krate":0,"index":544},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":4850,"byte_end":4855,"line_start":142,"line_end":142,"column_start":18,"column_end":23},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":10},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":4857,"byte_end":4863,"line_start":142,"line_end":142,"column_start":25,"column_end":31},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":707},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":4882,"byte_end":4888,"line_start":143,"line_end":143,"column_start":17,"column_end":23},"alias_span":null,"name":"Reader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":760},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":4906,"byte_end":4912,"line_start":144,"line_end":144,"column_start":17,"column_end":23},"alias_span":null,"name":"Writer","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":0,"byte_end":4913,"line_start":1,"line_end":144,"column_start":1,"column_end":24},"name":"","qualname":"::","value":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":16},{"krate":0,"index":49},{"krate":0,"index":67},{"krate":0,"index":333},{"krate":0,"index":499},{"krate":0,"index":501},{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":535},{"krate":0,"index":538},{"krate":0,"index":541}],"decl_id":null,"docs":" High performance XML reader/writer.","sig":null,"attributes":[{"value":"/ High performance XML reader/writer.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":0,"byte_end":39,"line_start":1,"line_end":1,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":40,"byte_end":43,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ## Description","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":44,"byte_end":62,"line_start":3,"line_end":3,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":63,"byte_end":66,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - `Reader`: a low level xml pull-reader where buffer allocation/clearing is left to user","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":67,"byte_end":159,"line_start":5,"line_end":5,"column_start":1,"column_end":93}},{"value":"/ - `Writer`: a xml writer. Can be nested with readers if you want to transform xmls","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":160,"byte_end":246,"line_start":6,"line_end":6,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":247,"byte_end":250,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":251,"byte_end":266,"line_start":8,"line_end":8,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":267,"byte_end":270,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ ### Reader","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":271,"byte_end":285,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":286,"byte_end":289,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":290,"byte_end":301,"line_start":12,"line_end":12,"column_start":1,"column_end":12}},{"value":"/ use quick_xml::Reader;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":302,"byte_end":328,"line_start":13,"line_end":13,"column_start":1,"column_end":27}},{"value":"/ use quick_xml::events::Event;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":329,"byte_end":362,"line_start":14,"line_end":14,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":363,"byte_end":366,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ let xml = r#\"<tag1 att1 = \"test\">","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":367,"byte_end":404,"line_start":16,"line_end":16,"column_start":1,"column_end":38}},{"value":"/                 <tag2><!--Test comment-->Test</tag2>","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":405,"byte_end":461,"line_start":17,"line_end":17,"column_start":1,"column_end":57}},{"value":"/                 <tag2>","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":462,"byte_end":488,"line_start":18,"line_end":18,"column_start":1,"column_end":27}},{"value":"/                     Test 2","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":489,"byte_end":519,"line_start":19,"line_end":19,"column_start":1,"column_end":31}},{"value":"/                 </tag2>","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":520,"byte_end":547,"line_start":20,"line_end":20,"column_start":1,"column_end":28}},{"value":"/             </tag1>\"#;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":548,"byte_end":574,"line_start":21,"line_end":21,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":575,"byte_end":578,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ let mut reader = Reader::from_str(xml);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":579,"byte_end":622,"line_start":23,"line_end":23,"column_start":1,"column_end":44}},{"value":"/ reader.trim_text(true);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":623,"byte_end":650,"line_start":24,"line_end":24,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":651,"byte_end":654,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let mut count = 0;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":655,"byte_end":677,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/ let mut txt = Vec::new();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":678,"byte_end":707,"line_start":27,"line_end":27,"column_start":1,"column_end":30}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":708,"byte_end":737,"line_start":28,"line_end":28,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":738,"byte_end":741,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ // The `Reader` does not implement `Iterator` because it outputs borrowed data (`Cow`s)","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":742,"byte_end":833,"line_start":30,"line_end":30,"column_start":1,"column_end":92}},{"value":"/ loop {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":834,"byte_end":844,"line_start":31,"line_end":31,"column_start":1,"column_end":11}},{"value":"/     match reader.read_event(&mut buf) {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":845,"byte_end":888,"line_start":32,"line_end":32,"column_start":1,"column_end":44}},{"value":"/     // for triggering namespaced events, use this instead:","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":889,"byte_end":951,"line_start":33,"line_end":33,"column_start":1,"column_end":63}},{"value":"/     // match reader.read_namespaced_event(&mut buf) {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":952,"byte_end":1009,"line_start":34,"line_end":34,"column_start":1,"column_end":58}},{"value":"/         Ok(Event::Start(ref e)) => {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":1010,"byte_end":1050,"line_start":35,"line_end":35,"column_start":1,"column_end":41}},{"value":"/         // for namespaced:","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":1051,"byte_end":1081,"line_start":36,"line_end":36,"column_start":1,"column_end":31}},{"value":"/         // Ok((ref namespace_value, Event::Start(ref e)))","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":1082,"byte_end":1143,"line_start":37,"line_end":37,"column_start":1,"column_end":62}},{"value":"/             match e.name() {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":1144,"byte_end":1176,"line_start":38,"line_end":38,"column_start":1,"column_end":33}},{"value":"/                 b\"tag1\" => println!(\"attributes values: {:?}\",","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":1177,"byte_end":1243,"line_start":39,"line_end":39,"column_start":1,"column_end":67}},{"value":"/                                     e.attributes().map(|a| a.unwrap().value)","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":1244,"byte_end":1324,"line_start":40,"line_end":40,"column_start":1,"column_end":81}},{"value":"/                                     .collect::<Vec<_>>()),","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":1325,"byte_end":1387,"line_start":41,"line_end":41,"column_start":1,"column_end":63}},{"value":"/                 b\"tag2\" => count += 1,","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":1388,"byte_end":1430,"line_start":42,"line_end":42,"column_start":1,"column_end":43}},{"value":"/                 _ => (),","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":1431,"byte_end":1459,"line_start":43,"line_end":43,"column_start":1,"column_end":29}},{"value":"/             }","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":1460,"byte_end":1477,"line_start":44,"line_end":44,"column_start":1,"column_end":18}},{"value":"/         },","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":1478,"byte_end":1492,"line_start":45,"line_end":45,"column_start":1,"column_end":15}},{"value":"/         // unescape and decode the text event using the reader encoding","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":1493,"byte_end":1568,"line_start":46,"line_end":46,"column_start":1,"column_end":76}},{"value":"/         Ok(Event::Text(e)) => txt.push(e.unescape_and_decode(&reader).unwrap()),","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":1569,"byte_end":1653,"line_start":47,"line_end":47,"column_start":1,"column_end":85}},{"value":"/         Ok(Event::Eof) => break, // exits the loop when reaching end of file","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":1654,"byte_end":1734,"line_start":48,"line_end":48,"column_start":1,"column_end":81}},{"value":"/         Err(e) => panic!(\"Error at position {}: {:?}\", reader.buffer_position(), e),","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":1735,"byte_end":1823,"line_start":49,"line_end":49,"column_start":1,"column_end":89}},{"value":"/         _ => (), // There are several other `Event`s we do not consider here","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":1824,"byte_end":1904,"line_start":50,"line_end":50,"column_start":1,"column_end":81}},{"value":"/     }","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":1905,"byte_end":1914,"line_start":51,"line_end":51,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":1915,"byte_end":1918,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/     // if we don't keep a borrow elsewhere, we can clear the buffer to keep memory usage low","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":1919,"byte_end":2015,"line_start":53,"line_end":53,"column_start":1,"column_end":97}},{"value":"/     buf.clear();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":2016,"byte_end":2036,"line_start":54,"line_end":54,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":2037,"byte_end":2042,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":2043,"byte_end":2050,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":2051,"byte_end":2054,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ### Writer","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":2055,"byte_end":2069,"line_start":58,"line_end":58,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":2070,"byte_end":2073,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":2074,"byte_end":2085,"line_start":60,"line_end":60,"column_start":1,"column_end":12}},{"value":"/ use quick_xml::Writer;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":2086,"byte_end":2112,"line_start":61,"line_end":61,"column_start":1,"column_end":27}},{"value":"/ use quick_xml::events::{Event, BytesEnd, BytesStart};","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":2113,"byte_end":2170,"line_start":62,"line_end":62,"column_start":1,"column_end":58}},{"value":"/ use quick_xml::Reader;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":2171,"byte_end":2197,"line_start":63,"line_end":63,"column_start":1,"column_end":27}},{"value":"/ use std::io::Cursor;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":2198,"byte_end":2222,"line_start":64,"line_end":64,"column_start":1,"column_end":25}},{"value":"/ use std::iter;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":2223,"byte_end":2241,"line_start":65,"line_end":65,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":2242,"byte_end":2245,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ let xml = r#\"<this_tag k1=\"v1\" k2=\"v2\"><child>text</child></this_tag>\"#;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":2246,"byte_end":2322,"line_start":67,"line_end":67,"column_start":1,"column_end":77}},{"value":"/ let mut reader = Reader::from_str(xml);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":2323,"byte_end":2366,"line_start":68,"line_end":68,"column_start":1,"column_end":44}},{"value":"/ reader.trim_text(true);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":2367,"byte_end":2394,"line_start":69,"line_end":69,"column_start":1,"column_end":28}},{"value":"/ let mut writer = Writer::new(Cursor::new(Vec::new()));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":2395,"byte_end":2453,"line_start":70,"line_end":70,"column_start":1,"column_end":59}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":2454,"byte_end":2483,"line_start":71,"line_end":71,"column_start":1,"column_end":30}},{"value":"/ loop {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":2484,"byte_end":2494,"line_start":72,"line_end":72,"column_start":1,"column_end":11}},{"value":"/     match reader.read_event(&mut buf) {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":2495,"byte_end":2538,"line_start":73,"line_end":73,"column_start":1,"column_end":44}},{"value":"/         Ok(Event::Start(ref e)) if e.name() == b\"this_tag\" => {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":2539,"byte_end":2606,"line_start":74,"line_end":74,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":2607,"byte_end":2610,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/             // crates a new element ... alternatively we could reuse `e` by calling","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":2611,"byte_end":2698,"line_start":76,"line_end":76,"column_start":1,"column_end":88}},{"value":"/             // `e.into_owned()`","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":2699,"byte_end":2734,"line_start":77,"line_end":77,"column_start":1,"column_end":36}},{"value":"/             let mut elem = BytesStart::owned(b\"my_elem\".to_vec(), \"my_elem\".len());","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":2735,"byte_end":2822,"line_start":78,"line_end":78,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":2823,"byte_end":2826,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/             // collect existing attributes","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":2827,"byte_end":2873,"line_start":80,"line_end":80,"column_start":1,"column_end":47}},{"value":"/             elem.extend_attributes(e.attributes().map(|attr| attr.unwrap()));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":2874,"byte_end":2955,"line_start":81,"line_end":81,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":2956,"byte_end":2959,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/             // copy existing attributes, adds a new my-key=\"some value\" attribute","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":2960,"byte_end":3045,"line_start":83,"line_end":83,"column_start":1,"column_end":86}},{"value":"/             elem.push_attribute((\"my-key\", \"some value\"));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":3046,"byte_end":3108,"line_start":84,"line_end":84,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":3109,"byte_end":3112,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/             // writes the event to the writer","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":3113,"byte_end":3162,"line_start":86,"line_end":86,"column_start":1,"column_end":50}},{"value":"/             assert!(writer.write_event(Event::Start(elem)).is_ok());","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":3163,"byte_end":3235,"line_start":87,"line_end":87,"column_start":1,"column_end":73}},{"value":"/         },","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":3236,"byte_end":3250,"line_start":88,"line_end":88,"column_start":1,"column_end":15}},{"value":"/         Ok(Event::End(ref e)) if e.name() == b\"this_tag\" => {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":3251,"byte_end":3316,"line_start":89,"line_end":89,"column_start":1,"column_end":66}},{"value":"/             assert!(writer.write_event(Event::End(BytesEnd::borrowed(b\"my_elem\"))).is_ok());","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":3317,"byte_end":3413,"line_start":90,"line_end":90,"column_start":1,"column_end":97}},{"value":"/         },","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":3414,"byte_end":3428,"line_start":91,"line_end":91,"column_start":1,"column_end":15}},{"value":"/         Ok(Event::Eof) => break,","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":3429,"byte_end":3465,"line_start":92,"line_end":92,"column_start":1,"column_end":37}},{"value":"/         Ok(e) => assert!(writer.write_event(e).is_ok()),","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":3466,"byte_end":3526,"line_start":93,"line_end":93,"column_start":1,"column_end":61}},{"value":"/         // or using the buffer","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":3527,"byte_end":3561,"line_start":94,"line_end":94,"column_start":1,"column_end":35}},{"value":"/         // Ok(e) => assert!(writer.write(&buf).is_ok()),","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":3562,"byte_end":3622,"line_start":95,"line_end":95,"column_start":1,"column_end":61}},{"value":"/         Err(e) => panic!(\"Error at position {}: {:?}\", reader.buffer_position(), e),","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":3623,"byte_end":3711,"line_start":96,"line_end":96,"column_start":1,"column_end":89}},{"value":"/     }","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":3712,"byte_end":3721,"line_start":97,"line_end":97,"column_start":1,"column_end":10}},{"value":"/     buf.clear();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":3722,"byte_end":3742,"line_start":98,"line_end":98,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":3743,"byte_end":3748,"line_start":99,"line_end":99,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":3749,"byte_end":3752,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ let result = writer.into_inner().into_inner();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":3753,"byte_end":3803,"line_start":101,"line_end":101,"column_start":1,"column_end":51}},{"value":"/ let expected = r#\"<my_elem k1=\"v1\" k2=\"v2\" my-key=\"some value\"><child>text</child></my_elem>\"#;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":3804,"byte_end":3903,"line_start":102,"line_end":102,"column_start":1,"column_end":100}},{"value":"/ assert_eq!(result, expected.as_bytes());","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":3904,"byte_end":3948,"line_start":103,"line_end":103,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":3949,"byte_end":3956,"line_start":104,"line_end":104,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":3957,"byte_end":3960,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ # Features","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":3961,"byte_end":3975,"line_start":106,"line_end":106,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":3976,"byte_end":3979,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ quick-xml supports 2 additional features, non activated by default:","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":3980,"byte_end":4051,"line_start":108,"line_end":108,"column_start":1,"column_end":72}},{"value":"/ - `encoding`: support non utf8 xmls","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":4052,"byte_end":4091,"line_start":109,"line_end":109,"column_start":1,"column_end":40}},{"value":"/ - `serialize`: support serde `Serialize`/`Deserialize`","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":4092,"byte_end":4150,"line_start":110,"line_end":110,"column_start":1,"column_end":59}},{"value":"forbid(unsafe_code)","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":4151,"byte_end":4174,"line_start":111,"line_end":111,"column_start":1,"column_end":24}},{"value":"deny(missing_docs)","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":4175,"byte_end":4197,"line_start":112,"line_end":112,"column_start":1,"column_end":23}},{"value":"recursion_limit = \"1024\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":4198,"byte_end":4226,"line_start":113,"line_end":113,"column_start":1,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":545},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":5038,"byte_end":5040,"line_start":7,"line_end":7,"column_start":5,"column_end":7},"name":"Io","qualname":"::errors::Error::Io","value":"Error::Io(::std::io::Error)","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" IO error\n","sig":null,"attributes":[{"value":"/ IO error","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":5021,"byte_end":5033,"line_start":6,"line_end":6,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":548},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":5083,"byte_end":5087,"line_start":9,"line_end":9,"column_start":5,"column_end":9},"name":"Utf8","qualname":"::errors::Error::Utf8","value":"Error::Utf8(::std::str::Utf8Error)","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Utf8 error\n","sig":null,"attributes":[{"value":"/ Utf8 error","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":5064,"byte_end":5078,"line_start":8,"line_end":8,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":551},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":5147,"byte_end":5160,"line_start":11,"line_end":11,"column_start":5,"column_end":18},"name":"UnexpectedEof","qualname":"::errors::Error::UnexpectedEof","value":"Error::UnexpectedEof(String)","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Unexpected End of File\n","sig":null,"attributes":[{"value":"/ Unexpected End of File","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":5116,"byte_end":5142,"line_start":10,"line_end":10,"column_start":5,"column_end":31}}]},{"kind":"StructVariant","id":{"krate":0,"index":554},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":5201,"byte_end":5217,"line_start":13,"line_end":13,"column_start":5,"column_end":21},"name":"EndEventMismatch","qualname":"::errors::Error::EndEventMismatch","value":"Error::EndEventMismatch { expected, found }","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" End event mismatch\n","sig":null,"attributes":[{"value":"/ End event mismatch","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":5174,"byte_end":5196,"line_start":12,"line_end":12,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":557},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":5364,"byte_end":5379,"line_start":20,"line_end":20,"column_start":5,"column_end":20},"name":"UnexpectedToken","qualname":"::errors::Error::UnexpectedToken","value":"Error::UnexpectedToken(String)","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Unexpected token\n","sig":null,"attributes":[{"value":"/ Unexpected token","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":5339,"byte_end":5359,"line_start":19,"line_end":19,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":560},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":5416,"byte_end":5430,"line_start":22,"line_end":22,"column_start":5,"column_end":19},"name":"UnexpectedBang","qualname":"::errors::Error::UnexpectedBang","value":"Error::UnexpectedBang","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Unexpected <!>\n","sig":null,"attributes":[{"value":"/ Unexpected <!>","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":5393,"byte_end":5411,"line_start":21,"line_end":21,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":562},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":5483,"byte_end":5495,"line_start":24,"line_end":24,"column_start":5,"column_end":17},"name":"TextNotFound","qualname":"::errors::Error::TextNotFound","value":"Error::TextNotFound","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Text not found, expected `Event::Text`\n","sig":null,"attributes":[{"value":"/ Text not found, expected `Event::Text`","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":5436,"byte_end":5478,"line_start":23,"line_end":23,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":564},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":5562,"byte_end":5583,"line_start":26,"line_end":26,"column_start":5,"column_end":26},"name":"XmlDeclWithoutVersion","qualname":"::errors::Error::XmlDeclWithoutVersion","value":"Error::XmlDeclWithoutVersion(Option<String>)","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" `Event::XmlDecl` must start with *version* attribute\n","sig":null,"attributes":[{"value":"/ `Event::XmlDecl` must start with *version* attribute","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":5501,"byte_end":5557,"line_start":25,"line_end":25,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":567},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":5643,"byte_end":5656,"line_start":28,"line_end":28,"column_start":5,"column_end":18},"name":"NameWithQuote","qualname":"::errors::Error::NameWithQuote","value":"Error::NameWithQuote(usize)","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Attribute Name contains quote\n","sig":null,"attributes":[{"value":"/ Attribute Name contains quote","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":5605,"byte_end":5638,"line_start":27,"line_end":27,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":570},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":5716,"byte_end":5729,"line_start":30,"line_end":30,"column_start":5,"column_end":18},"name":"NoEqAfterName","qualname":"::errors::Error::NoEqAfterName","value":"Error::NoEqAfterName(usize)","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Attribute key not followed by with `=`\n","sig":null,"attributes":[{"value":"/ Attribute key not followed by with `=`","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":5669,"byte_end":5711,"line_start":29,"line_end":29,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":573},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":5777,"byte_end":5790,"line_start":32,"line_end":32,"column_start":5,"column_end":18},"name":"UnquotedValue","qualname":"::errors::Error::UnquotedValue","value":"Error::UnquotedValue(usize)","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Attribute value not quoted\n","sig":null,"attributes":[{"value":"/ Attribute value not quoted","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":5742,"byte_end":5772,"line_start":31,"line_end":31,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":576},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":5831,"byte_end":5850,"line_start":34,"line_end":34,"column_start":5,"column_end":24},"name":"DuplicatedAttribute","qualname":"::errors::Error::DuplicatedAttribute","value":"Error::DuplicatedAttribute(usize, usize)","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Duplicate attribute\n","sig":null,"attributes":[{"value":"/ Duplicate attribute","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":5803,"byte_end":5826,"line_start":33,"line_end":33,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":580},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":5891,"byte_end":5902,"line_start":36,"line_end":36,"column_start":5,"column_end":16},"name":"EscapeError","qualname":"::errors::Error::EscapeError","value":"Error::EscapeError(::escape::EscapeError)","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Escape error\n","sig":null,"attributes":[{"value":"/ Escape error","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":5870,"byte_end":5886,"line_start":35,"line_end":35,"column_start":5,"column_end":21}}]},{"kind":"Enum","id":{"krate":0,"index":544},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":5009,"byte_end":5014,"line_start":5,"line_end":5,"column_start":10,"column_end":15},"name":"Error","qualname":"::errors::Error","value":"pub enum Error {\n    Io(::std::io::Error),\n    Utf8(::std::str::Utf8Error),\n    UnexpectedEof(String),\n    EndEventMismatch {\n            expected: String,\n            found: String,\n        },\n    UnexpectedToken(String),\n    UnexpectedBang,\n    TextNotFound,\n    XmlDeclWithoutVersion(Option<String>),\n    NameWithQuote(usize),\n    NoEqAfterName(usize),\n    UnquotedValue(usize),\n    DuplicatedAttribute(usize, usize),\n    EscapeError(::escape::EscapeError),\n}","parent":null,"children":[{"krate":0,"index":545},{"krate":0,"index":548},{"krate":0,"index":551},{"krate":0,"index":554},{"krate":0,"index":557},{"krate":0,"index":560},{"krate":0,"index":562},{"krate":0,"index":564},{"krate":0,"index":567},{"krate":0,"index":570},{"krate":0,"index":573},{"krate":0,"index":576},{"krate":0,"index":580}],"decl_id":null,"docs":" The error type used by this crate.\n","sig":null,"attributes":[{"value":"/ The error type used by this crate.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":4944,"byte_end":4982,"line_start":3,"line_end":3,"column_start":1,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":10},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":6446,"byte_end":6452,"line_start":58,"line_end":58,"column_start":10,"column_end":16},"name":"Result","qualname":"::errors::Result","value":"::std::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" A specialized `Result` type where the error is hard-wired to [`Error`].","sig":null,"attributes":[{"value":"/ A specialized `Result` type where the error is hard-wired to [`Error`].","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":6326,"byte_end":6401,"line_start":55,"line_end":55,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":6402,"byte_end":6405,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [`Error`]: enum.Error.html","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":6406,"byte_end":6436,"line_start":57,"line_end":57,"column_start":1,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":586},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/escapei.rs","byte_start":12333,"byte_end":12347,"line_start":10,"line_end":10,"column_start":5,"column_end":19},"name":"EntityWithNull","qualname":"::escapei::EscapeError::EntityWithNull","value":"EscapeError::EntityWithNull(::std::ops::Range<usize>)","parent":{"krate":0,"index":585},"children":[],"decl_id":null,"docs":" Entity with Null character\n","sig":null,"attributes":[{"value":"/ Entity with Null character","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/escapei.rs","byte_start":12298,"byte_end":12328,"line_start":9,"line_end":9,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":589},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/escapei.rs","byte_start":12414,"byte_end":12432,"line_start":12,"line_end":12,"column_start":5,"column_end":23},"name":"UnrecognizedSymbol","qualname":"::escapei::EscapeError::UnrecognizedSymbol","value":"EscapeError::UnrecognizedSymbol(::std::ops::Range<usize>, ::std::result::Result<String, ::std::string::FromUtf8Error>)","parent":{"krate":0,"index":585},"children":[],"decl_id":null,"docs":" Unrecognized escape symbol\n","sig":null,"attributes":[{"value":"/ Unrecognized escape symbol","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/escapei.rs","byte_start":12379,"byte_end":12409,"line_start":11,"line_end":11,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":593},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/escapei.rs","byte_start":12582,"byte_end":12600,"line_start":17,"line_end":17,"column_start":5,"column_end":23},"name":"UnterminatedEntity","qualname":"::escapei::EscapeError::UnterminatedEntity","value":"EscapeError::UnterminatedEntity(::std::ops::Range<usize>)","parent":{"krate":0,"index":585},"children":[],"decl_id":null,"docs":" Cannot find `;` after `&`\n","sig":null,"attributes":[{"value":"/ Cannot find `;` after `&`","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/escapei.rs","byte_start":12548,"byte_end":12577,"line_start":16,"line_end":16,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":596},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/escapei.rs","byte_start":12668,"byte_end":12686,"line_start":19,"line_end":19,"column_start":5,"column_end":23},"name":"TooLongHexadecimal","qualname":"::escapei::EscapeError::TooLongHexadecimal","value":"EscapeError::TooLongHexadecimal","parent":{"krate":0,"index":585},"children":[],"decl_id":null,"docs":" Cannot convert Hexa to utf8\n","sig":null,"attributes":[{"value":"/ Cannot convert Hexa to utf8","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/escapei.rs","byte_start":12632,"byte_end":12663,"line_start":18,"line_end":18,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":598},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/escapei.rs","byte_start":12743,"byte_end":12761,"line_start":21,"line_end":21,"column_start":5,"column_end":23},"name":"InvalidHexadecimal","qualname":"::escapei::EscapeError::InvalidHexadecimal","value":"EscapeError::InvalidHexadecimal(char)","parent":{"krate":0,"index":585},"children":[],"decl_id":null,"docs":" Character is not a valid hexadecimal value\n","sig":null,"attributes":[{"value":"/ Character is not a valid hexadecimal value","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/escapei.rs","byte_start":12692,"byte_end":12738,"line_start":20,"line_end":20,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":601},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/escapei.rs","byte_start":12812,"byte_end":12826,"line_start":23,"line_end":23,"column_start":5,"column_end":19},"name":"TooLongDecimal","qualname":"::escapei::EscapeError::TooLongDecimal","value":"EscapeError::TooLongDecimal","parent":{"krate":0,"index":585},"children":[],"decl_id":null,"docs":" Cannot convert decimal to hexa\n","sig":null,"attributes":[{"value":"/ Cannot convert decimal to hexa","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/escapei.rs","byte_start":12773,"byte_end":12807,"line_start":22,"line_end":22,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":603},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/escapei.rs","byte_start":12879,"byte_end":12893,"line_start":25,"line_end":25,"column_start":5,"column_end":19},"name":"InvalidDecimal","qualname":"::escapei::EscapeError::InvalidDecimal","value":"EscapeError::InvalidDecimal(char)","parent":{"krate":0,"index":585},"children":[],"decl_id":null,"docs":" Character is not a valid decimal value\n","sig":null,"attributes":[{"value":"/ Character is not a valid decimal value","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/escapei.rs","byte_start":12832,"byte_end":12874,"line_start":24,"line_end":24,"column_start":5,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":585},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/escapei.rs","byte_start":12280,"byte_end":12291,"line_start":8,"line_end":8,"column_start":10,"column_end":21},"name":"EscapeError","qualname":"::escapei::EscapeError","value":"pub enum EscapeError {\n    EntityWithNull(::std::ops::Range<usize>),\n    UnrecognizedSymbol(::std::ops::Range<usize>,\n            ::std::result::Result<String, ::std::string::FromUtf8Error>),\n    UnterminatedEntity(::std::ops::Range<usize>),\n    TooLongHexadecimal,\n    InvalidHexadecimal(char),\n    TooLongDecimal,\n    InvalidDecimal(char),\n}","parent":null,"children":[{"krate":0,"index":586},{"krate":0,"index":589},{"krate":0,"index":593},{"krate":0,"index":596},{"krate":0,"index":598},{"krate":0,"index":601},{"krate":0,"index":603}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":36},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/escapei.rs","byte_start":14568,"byte_end":14574,"line_start":69,"line_end":69,"column_start":8,"column_end":14},"name":"escape","qualname":"::escapei::escape","value":"pub fn escape(&[u8]) -> Cow<, [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Escapes a `&[u8]` and replaces all xml special characters (<, >, &, ', \") with their\n corresponding xml escaped value.\n","sig":null,"attributes":[{"value":"/ Escapes a `&[u8]` and replaces all xml special characters (<, >, &, ', \") with their","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/escapei.rs","byte_start":14435,"byte_end":14523,"line_start":67,"line_end":67,"column_start":1,"column_end":89}},{"value":"/ corresponding xml escaped value.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/escapei.rs","byte_start":14524,"byte_end":14560,"line_start":68,"line_end":68,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":39},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/escapei.rs","byte_start":15907,"byte_end":15915,"line_start":110,"line_end":110,"column_start":8,"column_end":16},"name":"unescape","qualname":"::escapei::unescape","value":"pub fn unescape(&[u8]) -> Result<Cow<, [u8]>, EscapeError>","parent":null,"children":[],"decl_id":null,"docs":" Unescape a `&[u8]` and replaces all xml escaped characters ('&...;') into their corresponding\n value\n","sig":null,"attributes":[{"value":"/ Unescape a `&[u8]` and replaces all xml escaped characters ('&...;') into their corresponding","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/escapei.rs","byte_start":15792,"byte_end":15889,"line_start":108,"line_end":108,"column_start":1,"column_end":98}},{"value":"/ value","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/escapei.rs","byte_start":15890,"byte_end":15899,"line_start":109,"line_end":109,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":40},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/escapei.rs","byte_start":16253,"byte_end":16266,"line_start":120,"line_end":120,"column_start":8,"column_end":21},"name":"unescape_with","qualname":"::escapei::unescape_with","value":"pub fn unescape_with<'a>(&'a [u8], &HashMap<Vec<u8>, Vec<u8>>)\n-> Result<Cow, EscapeError>","parent":null,"children":[],"decl_id":null,"docs":" Unescape a `&[u8]` and replaces all xml escaped characters ('&...;') into their corresponding\n value, using a dictionnary of custom entities.","sig":null,"attributes":[{"value":"/ Unescape a `&[u8]` and replaces all xml escaped characters ('&...;') into their corresponding","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/escapei.rs","byte_start":15994,"byte_end":16091,"line_start":114,"line_end":114,"column_start":1,"column_end":98}},{"value":"/ value, using a dictionnary of custom entities.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/escapei.rs","byte_start":16092,"byte_end":16142,"line_start":115,"line_end":115,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/escapei.rs","byte_start":16143,"byte_end":16146,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ # Pre-condition","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/escapei.rs","byte_start":16147,"byte_end":16166,"line_start":117,"line_end":117,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/escapei.rs","byte_start":16167,"byte_end":16170,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ The keys and values of `custom_entities`, if any, must be valid UTF-8.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/escapei.rs","byte_start":16171,"byte_end":16245,"line_start":119,"line_end":119,"column_start":1,"column_end":75}}]},{"kind":"Mod","id":{"krate":0,"index":49},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":4500,"byte_end":4506,"line_start":127,"line_end":127,"column_start":9,"column_end":15},"name":"escape","qualname":"::escape","value":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":54},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":61},{"krate":0,"index":64}],"decl_id":null,"docs":" Manage xml character escapes\n","sig":null,"attributes":[{"value":"/ Manage xml character escapes","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":4513,"byte_end":4545,"line_start":128,"line_end":128,"column_start":5,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":67},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"events","qualname":"::events","value":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":155},{"krate":0,"index":158},{"krate":0,"index":161},{"krate":0,"index":164},{"krate":0,"index":167},{"krate":0,"index":170},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":177},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":184},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":191},{"krate":0,"index":194},{"krate":0,"index":197},{"krate":0,"index":631},{"krate":0,"index":635},{"krate":0,"index":200},{"krate":0,"index":241},{"krate":0,"index":638},{"krate":0,"index":641},{"krate":0,"index":644},{"krate":0,"index":247},{"krate":0,"index":647},{"krate":0,"index":650},{"krate":0,"index":258},{"krate":0,"index":266},{"krate":0,"index":653},{"krate":0,"index":656},{"krate":0,"index":272},{"krate":0,"index":301},{"krate":0,"index":659},{"krate":0,"index":690},{"krate":0,"index":693},{"krate":0,"index":307},{"krate":0,"index":310},{"krate":0,"index":314},{"krate":0,"index":318},{"krate":0,"index":322},{"krate":0,"index":326},{"krate":0,"index":330}],"decl_id":null,"docs":" Defines zero-copy XML events used throughout this library.\n","sig":null,"attributes":[{"value":"/ Defines zero-copy XML events used throughout this library.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":235727,"byte_end":235789,"line_start":1,"line_end":1,"column_start":1,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":68},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"attributes","qualname":"::events::attributes","value":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":80},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":87},{"krate":0,"index":90},{"krate":0,"index":93},{"krate":0,"index":96},{"krate":0,"index":99},{"krate":0,"index":608},{"krate":0,"index":615},{"krate":0,"index":102},{"krate":0,"index":618},{"krate":0,"index":622},{"krate":0,"index":625},{"krate":0,"index":627},{"krate":0,"index":107},{"krate":0,"index":126},{"krate":0,"index":132},{"krate":0,"index":135},{"krate":0,"index":138}],"decl_id":null,"docs":" Xml Attributes module","sig":null,"attributes":[{"value":"/ Xml Attributes module","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":266595,"byte_end":266620,"line_start":1,"line_end":1,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":266621,"byte_end":266624,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Provides an iterator over attributes key/value pairs","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":266625,"byte_end":266681,"line_start":3,"line_end":3,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":608},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":267177,"byte_end":267187,"line_start":20,"line_end":20,"column_start":12,"column_end":22},"name":"Attributes","qualname":"::events::attributes::Attributes","value":"Attributes {  }","parent":null,"children":[{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614}],"decl_id":null,"docs":" Iterator over XML attributes.","sig":null,"attributes":[{"value":"/ Iterator over XML attributes.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":266881,"byte_end":266914,"line_start":13,"line_end":13,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":266915,"byte_end":266918,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Yields `Result<Attribute>`. An `Err` will be yielded if an attribute is malformed or duplicated.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":266919,"byte_end":267019,"line_start":15,"line_end":15,"column_start":1,"column_end":101}},{"value":"/ The duplicate check can be turned off by calling [`with_checks(false)`].","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":267020,"byte_end":267096,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":267097,"byte_end":267100,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`with_checks(false)`]: #method.with_checks","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":267101,"byte_end":267148,"line_start":18,"line_end":18,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":267725,"byte_end":267728,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<Attributes>::new","value":"pub fn new(&'a [u8], usize) -> Attributes","parent":null,"children":[],"decl_id":null,"docs":" Creates a new attribute iterator from a buffer.\n","sig":null,"attributes":[{"value":"/ Creates a new attribute iterator from a buffer.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":267662,"byte_end":267713,"line_start":35,"line_end":35,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":268054,"byte_end":268058,"line_start":47,"line_end":47,"column_start":12,"column_end":16},"name":"html","qualname":"<Attributes>::html","value":"pub fn html(&'a [u8], usize) -> Attributes","parent":null,"children":[],"decl_id":null,"docs":" Creates a new attribute iterator from a buffer, allowing HTML attribute syntax.\n","sig":null,"attributes":[{"value":"/ Creates a new attribute iterator from a buffer, allowing HTML attribute syntax.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":267959,"byte_end":268042,"line_start":46,"line_end":46,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":268564,"byte_end":268575,"line_start":63,"line_end":63,"column_start":12,"column_end":23},"name":"with_checks","qualname":"<Attributes>::with_checks","value":"pub fn with_checks(&mut Self, bool) -> &mut Attributes","parent":null,"children":[],"decl_id":null,"docs":" Changes whether attributes should be checked for uniqueness.","sig":null,"attributes":[{"value":"/ Changes whether attributes should be checked for uniqueness.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":268288,"byte_end":268352,"line_start":57,"line_end":57,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":268357,"byte_end":268360,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ The XML specification requires attribute keys in the same element to be unique. This check","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":268365,"byte_end":268459,"line_start":59,"line_end":59,"column_start":5,"column_end":99}},{"value":"/ can be disabled to improve performance slightly.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":268464,"byte_end":268516,"line_start":60,"line_end":60,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":268521,"byte_end":268524,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ (`true` by default)","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":268529,"byte_end":268552,"line_start":62,"line_end":62,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":618},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":269107,"byte_end":269116,"line_start":78,"line_end":78,"column_start":12,"column_end":21},"name":"Attribute","qualname":"::events::attributes::Attribute","value":"Attribute { key, value }","parent":null,"children":[{"krate":0,"index":620},{"krate":0,"index":621}],"decl_id":null,"docs":" A struct representing a key/value XML attribute.","sig":null,"attributes":[{"value":"/ A struct representing a key/value XML attribute.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":268677,"byte_end":268729,"line_start":69,"line_end":69,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":268730,"byte_end":268733,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ Field `value` stores raw bytes, possibly containing escape-sequences. Most users will likely","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":268734,"byte_end":268830,"line_start":71,"line_end":71,"column_start":1,"column_end":97}},{"value":"/ want to access the value using one of the [`unescaped_value`] and [`unescape_and_decode_value`]","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":268831,"byte_end":268930,"line_start":72,"line_end":72,"column_start":1,"column_end":100}},{"value":"/ functions.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":268931,"byte_end":268945,"line_start":73,"line_end":73,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":268946,"byte_end":268949,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ [`unescaped_value`]: #method.unescaped_value","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":268950,"byte_end":268998,"line_start":75,"line_end":75,"column_start":1,"column_end":49}},{"value":"/ [`unescape_and_decode_value`]: #method.unescape_and_decode_value","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":268999,"byte_end":269067,"line_start":76,"line_end":76,"column_start":1,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":620},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":269359,"byte_end":269362,"line_start":84,"line_end":84,"column_start":9,"column_end":12},"name":"key","qualname":"::events::attributes::Attribute::key","value":"&'a [u8]","parent":{"krate":0,"index":618},"children":[],"decl_id":null,"docs":" The key to uniquely define the attribute.","sig":null,"attributes":[{"value":"/ The key to uniquely define the attribute.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":269127,"byte_end":269172,"line_start":79,"line_end":79,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":269177,"byte_end":269180,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ If [`Attributes::with_checks`] is turned off, the key might not be unique.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":269185,"byte_end":269263,"line_start":81,"line_end":81,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":269268,"byte_end":269271,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ [`Attributes::with_checks`]: struct.Attributes.html#method.with_checks","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":269276,"byte_end":269350,"line_start":83,"line_end":83,"column_start":5,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":621},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":269422,"byte_end":269427,"line_start":86,"line_end":86,"column_start":9,"column_end":14},"name":"value","qualname":"::events::attributes::Attribute::value","value":"std::borrow::Cow<'a, [u8]>","parent":{"krate":0,"index":618},"children":[],"decl_id":null,"docs":" The raw value of the attribute.\n","sig":null,"attributes":[{"value":"/ The raw value of the attribute.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":269378,"byte_end":269413,"line_start":85,"line_end":85,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":269878,"byte_end":269893,"line_start":98,"line_end":98,"column_start":12,"column_end":27},"name":"unescaped_value","qualname":"<Attribute>::unescaped_value","value":"pub fn unescaped_value(&Self) -> Result<Cow<, [u8]>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the unescaped value.","sig":null,"attributes":[{"value":"/ Returns the unescaped value.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":269476,"byte_end":269508,"line_start":90,"line_end":90,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":269513,"byte_end":269516,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ This is normally the value you are interested in. Escape sequences such as `&gt;` are","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":269521,"byte_end":269610,"line_start":92,"line_end":92,"column_start":5,"column_end":94}},{"value":"/ replaced with their unescaped equivalents such as `>`.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":269615,"byte_end":269673,"line_start":93,"line_end":93,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":269678,"byte_end":269681,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ This will allocate if the value contains any escape sequences.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":269686,"byte_end":269752,"line_start":95,"line_end":95,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":269757,"byte_end":269760,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ See also [`unescaped_value_with_custom_entities()`](#method.unescaped_value_with_custom_entities)","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":269765,"byte_end":269866,"line_start":97,"line_end":97,"column_start":5,"column_end":106}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":270543,"byte_end":270579,"line_start":115,"line_end":115,"column_start":12,"column_end":48},"name":"unescaped_value_with_custom_entities","qualname":"<Attribute>::unescaped_value_with_custom_entities","value":"pub fn unescaped_value_with_custom_entities(&Self, &HashMap<Vec<u8>, Vec<u8>>)\n-> Result<Cow<, [u8]>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the unescaped value, using custom entities.","sig":null,"attributes":[{"value":"/ Returns the unescaped value, using custom entities.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":269975,"byte_end":270030,"line_start":102,"line_end":102,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":270035,"byte_end":270038,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ This is normally the value you are interested in. Escape sequences such as `&gt;` are","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":270043,"byte_end":270132,"line_start":104,"line_end":104,"column_start":5,"column_end":94}},{"value":"/ replaced with their unescaped equivalents such as `>`.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":270137,"byte_end":270195,"line_start":105,"line_end":105,"column_start":5,"column_end":63}},{"value":"/ Additional entities can be provided in `custom_entities`.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":270200,"byte_end":270261,"line_start":106,"line_end":106,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":270266,"byte_end":270269,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ This will allocate if the value contains any escape sequences.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":270274,"byte_end":270340,"line_start":108,"line_end":108,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":270345,"byte_end":270348,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ See also [`unescaped_value()`](#method.unescaped_value)","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":270353,"byte_end":270412,"line_start":110,"line_end":110,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":270417,"byte_end":270420,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ # Pre-condition","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":270425,"byte_end":270444,"line_start":112,"line_end":112,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":270449,"byte_end":270452,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ The keys and values of `custom_entities`, if any, must be valid UTF-8.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":270457,"byte_end":270531,"line_start":114,"line_end":114,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":271489,"byte_end":271514,"line_start":139,"line_end":139,"column_start":12,"column_end":37},"name":"unescape_and_decode_value","qualname":"<Attribute>::unescape_and_decode_value","value":"pub fn unescape_and_decode_value<B: BufRead>(&Self, &Reader<B>)\n-> Result<String>","parent":null,"children":[],"decl_id":null,"docs":" Decode then unescapes the value","sig":null,"attributes":[{"value":"/ Decode then unescapes the value","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":270966,"byte_end":271001,"line_start":129,"line_end":129,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":271006,"byte_end":271009,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ This allocates a `String` in all cases. For performance reasons it might be a better idea to","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":271014,"byte_end":271110,"line_start":131,"line_end":131,"column_start":5,"column_end":101}},{"value":"/ instead use one of:","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":271115,"byte_end":271138,"line_start":132,"line_end":132,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":271143,"byte_end":271146,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ * [`Reader::decode()`], as it only allocates when the decoding can't be performed otherwise.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":271151,"byte_end":271247,"line_start":134,"line_end":134,"column_start":5,"column_end":101}},{"value":"/ * [`unescaped_value()`], as it doesn't allocate when no escape sequences are used.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":271252,"byte_end":271338,"line_start":135,"line_end":135,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":271343,"byte_end":271346,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ [`unescaped_value()`]: #method.unescaped_value","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":271351,"byte_end":271401,"line_start":137,"line_end":137,"column_start":5,"column_end":55}},{"value":"/ [`Reader::decode()`]: ../../reader/struct.Reader.html#method.decode","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":271406,"byte_end":271477,"line_start":138,"line_end":138,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":272346,"byte_end":272392,"line_start":157,"line_end":157,"column_start":12,"column_end":58},"name":"unescape_and_decode_value_with_custom_entities","qualname":"<Attribute>::unescape_and_decode_value_with_custom_entities","value":"pub fn unescape_and_decode_value_with_custom_entities<B: BufRead>(&Self,\n&Reader<B>, &HashMap<Vec<u8>, Vec<u8>>) -> Result<String>","parent":null,"children":[],"decl_id":null,"docs":" Decode then unescapes the value with custom entities","sig":null,"attributes":[{"value":"/ Decode then unescapes the value with custom entities","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":271641,"byte_end":271697,"line_start":143,"line_end":143,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":271702,"byte_end":271705,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ This allocates a `String` in all cases. For performance reasons it might be a better idea to","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":271710,"byte_end":271806,"line_start":145,"line_end":145,"column_start":5,"column_end":101}},{"value":"/ instead use one of:","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":271811,"byte_end":271834,"line_start":146,"line_end":146,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":271839,"byte_end":271842,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ * [`Reader::decode()`], as it only allocates when the decoding can't be performed otherwise.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":271847,"byte_end":271943,"line_start":148,"line_end":148,"column_start":5,"column_end":101}},{"value":"/ * [`unescaped_value()`], as it doesn't allocate when no escape sequences are used.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":271948,"byte_end":272034,"line_start":149,"line_end":149,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":272039,"byte_end":272042,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ [`unescaped_value_with_custom_entities()`]: #method.unescaped_value_with_custom_entities","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":272047,"byte_end":272139,"line_start":151,"line_end":151,"column_start":5,"column_end":97}},{"value":"/ [`Reader::decode()`]: ../../reader/struct.Reader.html#method.decode","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":272144,"byte_end":272215,"line_start":152,"line_end":152,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":272220,"byte_end":272223,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ # Pre-condition","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":272228,"byte_end":272247,"line_start":154,"line_end":154,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":272252,"byte_end":272255,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ The keys and values of `custom_entities`, if any, must be valid UTF-8.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":272260,"byte_end":272334,"line_start":156,"line_end":156,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":273992,"byte_end":274023,"line_start":198,"line_end":198,"column_start":12,"column_end":43},"name":"unescape_and_decode_without_bom","qualname":"<Attribute>::unescape_and_decode_without_bom","value":"pub fn unescape_and_decode_without_bom<B: BufRead>(&Self, &mut Reader<B>)\n-> Result<String>","parent":null,"children":[],"decl_id":null,"docs":" helper method to unescape then decode self using the reader encoding\n but without BOM (Byte order mark)","sig":null,"attributes":[{"value":"/ helper method to unescape then decode self using the reader encoding","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":273649,"byte_end":273721,"line_start":190,"line_end":190,"column_start":5,"column_end":77}},{"value":"/ but without BOM (Byte order mark)","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":273726,"byte_end":273763,"line_start":191,"line_end":191,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":273768,"byte_end":273771,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ for performance reasons (could avoid allocating a `String`),","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":273776,"byte_end":273840,"line_start":193,"line_end":193,"column_start":5,"column_end":69}},{"value":"/ it might be wiser to manually use","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":273845,"byte_end":273882,"line_start":194,"line_end":194,"column_start":5,"column_end":42}},{"value":"/ 1. BytesText::unescaped()","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":273887,"byte_end":273916,"line_start":195,"line_end":195,"column_start":5,"column_end":34}},{"value":"/ 2. Reader::decode(...)","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":273921,"byte_end":273947,"line_start":196,"line_end":196,"column_start":5,"column_end":31}},{"value":"cfg(feature = \"encoding\")","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":273952,"byte_end":273980,"line_start":197,"line_end":197,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":275201,"byte_end":275253,"line_start":232,"line_end":232,"column_start":12,"column_end":64},"name":"unescape_and_decode_without_bom_with_custom_entities","qualname":"<Attribute>::unescape_and_decode_without_bom_with_custom_entities","value":"pub fn unescape_and_decode_without_bom_with_custom_entities<B: BufRead>(&Self,\n&mut Reader<B>, &HashMap<Vec<u8>, Vec<u8>>) -> Result<String>","parent":null,"children":[],"decl_id":null,"docs":" helper method to unescape then decode self using the reader encoding with custom entities\n but without BOM (Byte order mark)","sig":null,"attributes":[{"value":"/ helper method to unescape then decode self using the reader encoding with custom entities","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":274718,"byte_end":274811,"line_start":220,"line_end":220,"column_start":5,"column_end":98}},{"value":"/ but without BOM (Byte order mark)","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":274816,"byte_end":274853,"line_start":221,"line_end":221,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":274858,"byte_end":274861,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ for performance reasons (could avoid allocating a `String`),","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":274866,"byte_end":274930,"line_start":223,"line_end":223,"column_start":5,"column_end":69}},{"value":"/ it might be wiser to manually use","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":274935,"byte_end":274972,"line_start":224,"line_end":224,"column_start":5,"column_end":42}},{"value":"/ 1. BytesText::unescaped()","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":274977,"byte_end":275006,"line_start":225,"line_end":225,"column_start":5,"column_end":34}},{"value":"/ 2. Reader::decode(...)","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":275011,"byte_end":275037,"line_start":226,"line_end":226,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":275042,"byte_end":275045,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Pre-condition","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":275050,"byte_end":275069,"line_start":228,"line_end":228,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":275074,"byte_end":275077,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ The keys and values of `custom_entities`, if any, must be valid UTF-8.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":275082,"byte_end":275156,"line_start":230,"line_end":230,"column_start":5,"column_end":79}},{"value":"cfg(feature = \"encoding\")","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":275161,"byte_end":275189,"line_start":231,"line_end":231,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":631},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":236580,"byte_end":236590,"line_start":32,"line_end":32,"column_start":12,"column_end":22},"name":"BytesStart","qualname":"::events::BytesStart","value":"BytesStart {  }","parent":null,"children":[{"krate":0,"index":633},{"krate":0,"index":634}],"decl_id":null,"docs":" Opening tag data (`Event::Start`), with optional attributes.","sig":null,"attributes":[{"value":"/ Opening tag data (`Event::Start`), with optional attributes.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":236138,"byte_end":236202,"line_start":20,"line_end":20,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":236203,"byte_end":236206,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ `<name attr=\"value\">`.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":236207,"byte_end":236233,"line_start":22,"line_end":22,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":236234,"byte_end":236237,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ The name can be accessed using the [`name`], [`local_name`] or [`unescaped`] methods. An","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":236238,"byte_end":236330,"line_start":24,"line_end":24,"column_start":1,"column_end":93}},{"value":"/ iterator over the attributes is returned by the [`attributes`] method.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":236331,"byte_end":236405,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":236406,"byte_end":236409,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ [`name`]: #method.name","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":236410,"byte_end":236436,"line_start":27,"line_end":27,"column_start":1,"column_end":27}},{"value":"/ [`local_name`]: #method.local_name","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":236437,"byte_end":236475,"line_start":28,"line_end":28,"column_start":1,"column_end":39}},{"value":"/ [`unescaped`]: #method.unescaped","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":236476,"byte_end":236512,"line_start":29,"line_end":29,"column_start":1,"column_end":37}},{"value":"/ [`attributes`]: #method.attributes","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":236513,"byte_end":236551,"line_start":30,"line_end":30,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":237009,"byte_end":237017,"line_start":46,"line_end":46,"column_start":12,"column_end":20},"name":"borrowed","qualname":"<BytesStart>::borrowed","value":"pub fn borrowed(&'a [u8], usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesStart` from the given content (name + attributes).","sig":null,"attributes":[{"value":"/ Creates a new `BytesStart` from the given content (name + attributes).","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":236810,"byte_end":236884,"line_start":40,"line_end":40,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":236889,"byte_end":236892,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":236897,"byte_end":236910,"line_start":42,"line_end":42,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":236915,"byte_end":236918,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ `&content[..name_len]` is not checked to be a valid name","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":236923,"byte_end":236983,"line_start":44,"line_end":44,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":236988,"byte_end":236997,"line_start":45,"line_end":45,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":237333,"byte_end":237346,"line_start":59,"line_end":59,"column_start":12,"column_end":25},"name":"borrowed_name","qualname":"<BytesStart>::borrowed_name","value":"pub fn borrowed_name(&'a [u8]) -> BytesStart","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesStart` from the given name.","sig":null,"attributes":[{"value":"/ Creates a new `BytesStart` from the given name.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":237169,"byte_end":237220,"line_start":53,"line_end":53,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":237225,"byte_end":237228,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":237233,"byte_end":237246,"line_start":55,"line_end":55,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":237251,"byte_end":237254,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ `&content` is not checked to be a valid name","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":237259,"byte_end":237307,"line_start":57,"line_end":57,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":237312,"byte_end":237321,"line_start":58,"line_end":58,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":237569,"byte_end":237574,"line_start":67,"line_end":67,"column_start":12,"column_end":17},"name":"owned","qualname":"<BytesStart>::owned","value":"pub fn owned<C: Into<Vec<u8>>>(C, usize) -> BytesStart","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesStart` from the given content (name + attributes)","sig":null,"attributes":[{"value":"/ Creates a new `BytesStart` from the given content (name + attributes)","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":237435,"byte_end":237508,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":237513,"byte_end":237516,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Owns its contents.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":237521,"byte_end":237543,"line_start":65,"line_end":65,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":237548,"byte_end":237557,"line_start":66,"line_end":66,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":237867,"byte_end":237877,"line_start":78,"line_end":78,"column_start":12,"column_end":22},"name":"owned_name","qualname":"<BytesStart>::owned_name","value":"pub fn owned_name<C: Into<Vec<u8>>>(C) -> BytesStart","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesStart` from the given name","sig":null,"attributes":[{"value":"/ Creates a new `BytesStart` from the given name","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":237756,"byte_end":237806,"line_start":74,"line_end":74,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":237811,"byte_end":237814,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Owns its contents.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":237819,"byte_end":237841,"line_start":76,"line_end":76,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":237846,"byte_end":237855,"line_start":77,"line_end":77,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":238137,"byte_end":238147,"line_start":87,"line_end":87,"column_start":12,"column_end":22},"name":"into_owned","qualname":"<BytesStart>::into_owned","value":"pub fn into_owned(Self) -> BytesStart","parent":null,"children":[],"decl_id":null,"docs":" Converts the event into an owned event.\n","sig":null,"attributes":[{"value":"/ Converts the event into an owned event.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":238082,"byte_end":238125,"line_start":86,"line_end":86,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":238336,"byte_end":238344,"line_start":92,"line_end":92,"column_start":12,"column_end":20},"name":"to_owned","qualname":"<BytesStart>::to_owned","value":"pub fn to_owned(&Self) -> BytesStart","parent":null,"children":[],"decl_id":null,"docs":" Converts the event into an owned event without taking ownership of Event\n","sig":null,"attributes":[{"value":"/ Converts the event into an owned event without taking ownership of Event","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":238248,"byte_end":238324,"line_start":91,"line_end":91,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":239164,"byte_end":239175,"line_start":120,"line_end":120,"column_start":12,"column_end":23},"name":"to_borrowed","qualname":"<BytesStart>::to_borrowed","value":"pub fn to_borrowed(&Self) -> BytesStart","parent":null,"children":[],"decl_id":null,"docs":" Converts the event into a borrowed event. Most useful when paired with [`to_end`].","sig":null,"attributes":[{"value":"/ Converts the event into a borrowed event. Most useful when paired with [`to_end`].","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":238444,"byte_end":238530,"line_start":96,"line_end":96,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":238535,"byte_end":238538,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":238543,"byte_end":238556,"line_start":98,"line_end":98,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":238561,"byte_end":238564,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":238569,"byte_end":238576,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"/ # use quick_xml::{Error, Writer};","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":238581,"byte_end":238618,"line_start":101,"line_end":101,"column_start":5,"column_end":42}},{"value":"/ use quick_xml::events::{BytesStart, Event};","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":238623,"byte_end":238670,"line_start":102,"line_end":102,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":238675,"byte_end":238678,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ struct SomeStruct<'a> {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":238683,"byte_end":238710,"line_start":104,"line_end":104,"column_start":5,"column_end":32}},{"value":"/     attrs: BytesStart<'a>,","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":238715,"byte_end":238745,"line_start":105,"line_end":105,"column_start":5,"column_end":35}},{"value":"/     // ...","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":238750,"byte_end":238764,"line_start":106,"line_end":106,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":238769,"byte_end":238774,"line_start":107,"line_end":107,"column_start":5,"column_end":10}},{"value":"/ # impl<'a> SomeStruct<'a> {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":238779,"byte_end":238810,"line_start":108,"line_end":108,"column_start":5,"column_end":36}},{"value":"/ # fn example(&self) -> Result<(), Error> {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":238815,"byte_end":238861,"line_start":109,"line_end":109,"column_start":5,"column_end":51}},{"value":"/ # let mut writer = Writer::new(Vec::new());","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":238866,"byte_end":238913,"line_start":110,"line_end":110,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":238918,"byte_end":238921,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ writer.write_event(Event::Start(self.attrs.to_borrowed()))?;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":238926,"byte_end":238990,"line_start":112,"line_end":112,"column_start":5,"column_end":69}},{"value":"/ // ...","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":238995,"byte_end":239005,"line_start":113,"line_end":113,"column_start":5,"column_end":15}},{"value":"/ writer.write_event(Event::End(self.attrs.to_end()))?;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":239010,"byte_end":239067,"line_start":114,"line_end":114,"column_start":5,"column_end":62}},{"value":"/ # Ok(())","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":239072,"byte_end":239084,"line_start":115,"line_end":115,"column_start":5,"column_end":17}},{"value":"/ # }}","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":239089,"byte_end":239097,"line_start":116,"line_end":116,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":239102,"byte_end":239109,"line_start":117,"line_end":117,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":239114,"byte_end":239117,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ [`to_end`]: #method.to_end","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":239122,"byte_end":239152,"line_start":119,"line_end":119,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":239309,"byte_end":239315,"line_start":125,"line_end":125,"column_start":12,"column_end":18},"name":"to_end","qualname":"<BytesStart>::to_end","value":"pub fn to_end(&Self) -> BytesEnd","parent":null,"children":[],"decl_id":null,"docs":" Creates new paired close tag\n","sig":null,"attributes":[{"value":"/ Creates new paired close tag","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":239265,"byte_end":239297,"line_start":124,"line_end":124,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":239643,"byte_end":239658,"line_start":134,"line_end":134,"column_start":12,"column_end":27},"name":"with_attributes","qualname":"<BytesStart>::with_attributes","value":"pub fn with_attributes<'b, I>(Self, I) -> Self where I: IntoIterator,\nI::Item: Into<Attribute>","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self` and yield a new `BytesStart` with additional attributes from an iterator.","sig":null,"attributes":[{"value":"/ Consumes `self` and yield a new `BytesStart` with additional attributes from an iterator.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":239388,"byte_end":239481,"line_start":129,"line_end":129,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":239486,"byte_end":239489,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ The yielded items must be convertible to [`Attribute`] using `Into`.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":239494,"byte_end":239566,"line_start":131,"line_end":131,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":239571,"byte_end":239574,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ [`Attribute`]: attributes/struct.Attributes.html","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":239579,"byte_end":239631,"line_start":133,"line_end":133,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":239921,"byte_end":239925,"line_start":145,"line_end":145,"column_start":12,"column_end":16},"name":"name","qualname":"<BytesStart>::name","value":"pub fn name(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Gets the undecoded raw tag name as a `&[u8]`.\n","sig":null,"attributes":[{"value":"/ Gets the undecoded raw tag name as a `&[u8]`.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":239846,"byte_end":239895,"line_start":143,"line_end":143,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":239900,"byte_end":239909,"line_start":144,"line_end":144,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":240195,"byte_end":240205,"line_start":153,"line_end":153,"column_start":12,"column_end":22},"name":"local_name","qualname":"<BytesStart>::local_name","value":"pub fn local_name(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Gets the undecoded raw local tag name (excluding namespace) as a `&[u8]`.","sig":null,"attributes":[{"value":"/ Gets the undecoded raw local tag name (excluding namespace) as a `&[u8]`.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":239990,"byte_end":240067,"line_start":149,"line_end":149,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":240072,"byte_end":240075,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ All content up to and including the first `:` character is removed from the tag name.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":240080,"byte_end":240169,"line_start":151,"line_end":151,"column_start":5,"column_end":94}},{"value":"inline","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":240174,"byte_end":240183,"line_start":152,"line_end":152,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":240613,"byte_end":240622,"line_start":165,"line_end":165,"column_start":12,"column_end":21},"name":"unescaped","qualname":"<BytesStart>::unescaped","value":"pub fn unescaped(&Self) -> Result<Cow<, [u8]>>","parent":null,"children":[],"decl_id":null,"docs":" Gets the unescaped tag name.","sig":null,"attributes":[{"value":"/ Gets the unescaped tag name.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":240335,"byte_end":240367,"line_start":158,"line_end":158,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":240372,"byte_end":240375,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ XML escape sequences like \"`&lt;`\" will be replaced by their unescaped characters like","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":240380,"byte_end":240470,"line_start":160,"line_end":160,"column_start":5,"column_end":95}},{"value":"/ \"`<`\".","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":240475,"byte_end":240485,"line_start":161,"line_end":161,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":240490,"byte_end":240493,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ See also [`unescaped_with_custom_entities()`](#method.unescaped_with_custom_entities)","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":240498,"byte_end":240587,"line_start":163,"line_end":163,"column_start":5,"column_end":94}},{"value":"inline","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":240592,"byte_end":240601,"line_start":164,"line_end":164,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":241142,"byte_end":241172,"line_start":181,"line_end":181,"column_start":12,"column_end":42},"name":"unescaped_with_custom_entities","qualname":"<BytesStart>::unescaped_with_custom_entities","value":"pub fn unescaped_with_custom_entities<'s>(&'s Self,\n&HashMap<Vec<u8>, Vec<u8>>) -> Result<Cow>","parent":null,"children":[],"decl_id":null,"docs":" Gets the unescaped tag name, using custom entities.","sig":null,"attributes":[{"value":"/ Gets the unescaped tag name, using custom entities.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":240698,"byte_end":240753,"line_start":169,"line_end":169,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":240758,"byte_end":240761,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ XML escape sequences like \"`&lt;`\" will be replaced by their unescaped characters like","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":240766,"byte_end":240856,"line_start":171,"line_end":171,"column_start":5,"column_end":95}},{"value":"/ \"`<`\".","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":240861,"byte_end":240871,"line_start":172,"line_end":172,"column_start":5,"column_end":15}},{"value":"/ Additional entities can be provided in `custom_entities`.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":240876,"byte_end":240937,"line_start":173,"line_end":173,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":240942,"byte_end":240945,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ # Pre-condition","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":240950,"byte_end":240969,"line_start":175,"line_end":175,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":240974,"byte_end":240977,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ The keys and values of `custom_entities`, if any, must be valid UTF-8.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":240982,"byte_end":241056,"line_start":177,"line_end":177,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":241061,"byte_end":241064,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ See also [`unescaped()`](#method.unescaped)","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":241069,"byte_end":241116,"line_start":179,"line_end":179,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":241121,"byte_end":241130,"line_start":180,"line_end":180,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":241649,"byte_end":241659,"line_start":197,"line_end":197,"column_start":12,"column_end":22},"name":"attributes","qualname":"<BytesStart>::attributes","value":"pub fn attributes(&Self) -> Attributes","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the attributes of this tag.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the attributes of this tag.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":241581,"byte_end":241637,"line_start":196,"line_end":196,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":241846,"byte_end":241861,"line_start":202,"line_end":202,"column_start":12,"column_end":27},"name":"html_attributes","qualname":"<BytesStart>::html_attributes","value":"pub fn html_attributes(&Self) -> Attributes","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the HTML-like attributes of this tag (no mandatory quotes or `=`).\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the HTML-like attributes of this tag (no mandatory quotes or `=`).","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":241739,"byte_end":241834,"line_start":201,"line_end":201,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":242116,"byte_end":242130,"line_start":209,"line_end":209,"column_start":12,"column_end":26},"name":"attributes_raw","qualname":"<BytesStart>::attributes_raw","value":"pub fn attributes_raw(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Gets the undecoded raw string with the attributes of this tag as a `&[u8]`,\n including the whitespace after the tag name if there is any.\n","sig":null,"attributes":[{"value":"/ Gets the undecoded raw string with the attributes of this tag as a `&[u8]`,","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":241942,"byte_end":242021,"line_start":206,"line_end":206,"column_start":5,"column_end":84}},{"value":"/ including the whitespace after the tag name if there is any.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":242026,"byte_end":242090,"line_start":207,"line_end":207,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":242095,"byte_end":242104,"line_start":208,"line_end":208,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":242417,"byte_end":242434,"line_start":218,"line_end":218,"column_start":12,"column_end":29},"name":"extend_attributes","qualname":"<BytesStart>::extend_attributes","value":"pub fn extend_attributes<'b, I>(&mut Self, I) -> &mut BytesStart where\nI: IntoIterator, I::Item: Into<Attribute>","parent":null,"children":[],"decl_id":null,"docs":" Add additional attributes to this tag using an iterator.","sig":null,"attributes":[{"value":"/ Add additional attributes to this tag using an iterator.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":242195,"byte_end":242255,"line_start":213,"line_end":213,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":242260,"byte_end":242263,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ The yielded items must be convertible to [`Attribute`] using `Into`.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":242268,"byte_end":242340,"line_start":215,"line_end":215,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":242345,"byte_end":242348,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ [`Attribute`]: attributes/struct.Attributes.html","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":242353,"byte_end":242405,"line_start":217,"line_end":217,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":243208,"byte_end":243227,"line_start":240,"line_end":240,"column_start":12,"column_end":31},"name":"unescape_and_decode","qualname":"<BytesStart>::unescape_and_decode","value":"pub fn unescape_and_decode<B: BufRead>(&Self, &Reader<B>) -> Result<String>","parent":null,"children":[],"decl_id":null,"docs":" Returns the unescaped and decoded string value.","sig":null,"attributes":[{"value":"/ Returns the unescaped and decoded string value.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":242676,"byte_end":242727,"line_start":229,"line_end":229,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":242732,"byte_end":242735,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ This allocates a `String` in all cases. For performance reasons it might be a better idea to","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":242740,"byte_end":242836,"line_start":231,"line_end":231,"column_start":5,"column_end":101}},{"value":"/ instead use one of:","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":242841,"byte_end":242864,"line_start":232,"line_end":232,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":242869,"byte_end":242872,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ * [`unescaped()`], as it doesn't allocate when no escape sequences are used.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":242877,"byte_end":242957,"line_start":234,"line_end":234,"column_start":5,"column_end":85}},{"value":"/ * [`Reader::decode()`], as it only allocates when the decoding can't be performed otherwise.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":242962,"byte_end":243058,"line_start":235,"line_end":235,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":243063,"byte_end":243066,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ [`unescaped()`]: #method.unescaped","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":243071,"byte_end":243109,"line_start":237,"line_end":237,"column_start":5,"column_end":43}},{"value":"/ [`Reader::decode()`]: ../reader/struct.Reader.html#method.decode","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":243114,"byte_end":243182,"line_start":238,"line_end":238,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":243187,"byte_end":243196,"line_start":239,"line_end":239,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":244104,"byte_end":244144,"line_start":259,"line_end":259,"column_start":12,"column_end":52},"name":"unescape_and_decode_with_custom_entities","qualname":"<BytesStart>::unescape_and_decode_with_custom_entities","value":"pub fn unescape_and_decode_with_custom_entities<B: BufRead>(&Self, &Reader<B>,\n&HashMap<Vec<u8>, Vec<u8>>) -> Result<String>","parent":null,"children":[],"decl_id":null,"docs":" Returns the unescaped and decoded string value with custom entities.","sig":null,"attributes":[{"value":"/ Returns the unescaped and decoded string value with custom entities.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":243369,"byte_end":243441,"line_start":244,"line_end":244,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":243446,"byte_end":243449,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ This allocates a `String` in all cases. For performance reasons it might be a better idea to","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":243454,"byte_end":243550,"line_start":246,"line_end":246,"column_start":5,"column_end":101}},{"value":"/ instead use one of:","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":243555,"byte_end":243578,"line_start":247,"line_end":247,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":243583,"byte_end":243586,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ * [`unescaped_with_custom_entities()`], as it doesn't allocate when no escape sequences are used.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":243591,"byte_end":243692,"line_start":249,"line_end":249,"column_start":5,"column_end":106}},{"value":"/ * [`Reader::decode()`], as it only allocates when the decoding can't be performed otherwise.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":243697,"byte_end":243793,"line_start":250,"line_end":250,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":243798,"byte_end":243801,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ [`unescaped_with_custom_entities()`]: #method.unescaped_with_custom_entities","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":243806,"byte_end":243886,"line_start":252,"line_end":252,"column_start":5,"column_end":85}},{"value":"/ [`Reader::decode()`]: ../reader/struct.Reader.html#method.decode","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":243891,"byte_end":243959,"line_start":253,"line_end":253,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":243964,"byte_end":243967,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ # Pre-condition","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":243972,"byte_end":243991,"line_start":255,"line_end":255,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":243996,"byte_end":243999,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ The keys and values of `custom_entities`, if any, must be valid UTF-8.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":244004,"byte_end":244078,"line_start":257,"line_end":257,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":244083,"byte_end":244092,"line_start":258,"line_end":258,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":245433,"byte_end":245447,"line_start":294,"line_end":294,"column_start":12,"column_end":26},"name":"push_attribute","qualname":"<BytesStart>::push_attribute","value":"pub fn push_attribute<'b, A: Into<Attribute>>(&mut Self, A)","parent":null,"children":[],"decl_id":null,"docs":" Adds an attribute to this element.\n","sig":null,"attributes":[{"value":"/ Adds an attribute to this element.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":245383,"byte_end":245421,"line_start":293,"line_end":293,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":245893,"byte_end":245901,"line_start":309,"line_end":309,"column_start":12,"column_end":20},"name":"set_name","qualname":"<BytesStart>::set_name","value":"pub fn set_name(&mut Self, &[u8]) -> &mut BytesStart","parent":null,"children":[],"decl_id":null,"docs":" Edit the name of the BytesStart in-place","sig":null,"attributes":[{"value":"/ Edit the name of the BytesStart in-place","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":245754,"byte_end":245798,"line_start":304,"line_end":304,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":245803,"byte_end":245806,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":245811,"byte_end":245824,"line_start":306,"line_end":306,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":245829,"byte_end":245832,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ `name` is not checked to be a valid name","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":245837,"byte_end":245881,"line_start":308,"line_end":308,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":246167,"byte_end":246183,"line_start":317,"line_end":317,"column_start":12,"column_end":28},"name":"clear_attributes","qualname":"<BytesStart>::clear_attributes","value":"pub fn clear_attributes(&mut Self) -> &mut BytesStart","parent":null,"children":[],"decl_id":null,"docs":" Remove all attributes from the ByteStart\n","sig":null,"attributes":[{"value":"/ Remove all attributes from the ByteStart","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":246111,"byte_end":246155,"line_start":316,"line_end":316,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":638},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":246776,"byte_end":246785,"line_start":337,"line_end":337,"column_start":12,"column_end":21},"name":"BytesDecl","qualname":"::events::BytesDecl","value":"BytesDecl {  }","parent":null,"children":[{"krate":0,"index":640}],"decl_id":null,"docs":" An XML declaration (`Event::Decl`).","sig":null,"attributes":[{"value":"/ An XML declaration (`Event::Decl`).","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":246602,"byte_end":246641,"line_start":333,"line_end":333,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":246642,"byte_end":246645,"line_start":334,"line_end":334,"column_start":1,"column_end":4}},{"value":"/ [W3C XML 1.1 Prolog and Document Type Declaration](http://w3.org/TR/xml11/#sec-prolog-dtd)","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":246646,"byte_end":246740,"line_start":335,"line_end":335,"column_start":1,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":246910,"byte_end":246920,"line_start":343,"line_end":343,"column_start":12,"column_end":22},"name":"from_start","qualname":"<BytesDecl>::from_start","value":"pub fn from_start(BytesStart) -> BytesDecl","parent":null,"children":[],"decl_id":null,"docs":" Creates a `BytesDecl` from a `BytesStart`\n","sig":null,"attributes":[{"value":"/ Creates a `BytesDecl` from a `BytesStart`","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":246853,"byte_end":246898,"line_start":342,"line_end":342,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":247070,"byte_end":247077,"line_start":348,"line_end":348,"column_start":12,"column_end":19},"name":"version","qualname":"<BytesDecl>::version","value":"pub fn version(&Self) -> Result<Cow<, [u8]>>","parent":null,"children":[],"decl_id":null,"docs":" Gets xml version, including quotes (' or \")\n","sig":null,"attributes":[{"value":"/ Gets xml version, including quotes (' or \")","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":247011,"byte_end":247058,"line_start":347,"line_end":347,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":247707,"byte_end":247715,"line_start":365,"line_end":365,"column_start":12,"column_end":20},"name":"encoding","qualname":"<BytesDecl>::encoding","value":"pub fn encoding(&Self) -> Option<Result<Cow<, [u8]>>>","parent":null,"children":[],"decl_id":null,"docs":" Gets xml encoding, including quotes (' or \")\n","sig":null,"attributes":[{"value":"/ Gets xml encoding, including quotes (' or \")","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":247647,"byte_end":247695,"line_start":364,"line_end":364,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":248144,"byte_end":248154,"line_start":380,"line_end":380,"column_start":12,"column_end":22},"name":"standalone","qualname":"<BytesDecl>::standalone","value":"pub fn standalone(&Self) -> Option<Result<Cow<, [u8]>>>","parent":null,"children":[],"decl_id":null,"docs":" Gets xml standalone, including quotes (' or \")\n","sig":null,"attributes":[{"value":"/ Gets xml standalone, including quotes (' or \")","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":248082,"byte_end":248132,"line_start":379,"line_end":379,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":249027,"byte_end":249030,"line_start":401,"line_end":401,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesDecl>::new","value":"pub fn new(&[u8], Option<&[u8]>, Option<&[u8]>) -> BytesDecl","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `XmlDecl` from the (mandatory) _version_ (should be `1.0` or `1.1`),\n the optional _encoding_ (e.g., `UTF-8`) and the optional _standalone_ (`yes` or `no`)\n attribute.","sig":null,"attributes":[{"value":"/ Constructs a new `XmlDecl` from the (mandatory) _version_ (should be `1.0` or `1.1`),","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":248523,"byte_end":248612,"line_start":394,"line_end":394,"column_start":5,"column_end":94}},{"value":"/ the optional _encoding_ (e.g., `UTF-8`) and the optional _standalone_ (`yes` or `no`)","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":248617,"byte_end":248706,"line_start":395,"line_end":395,"column_start":5,"column_end":94}},{"value":"/ attribute.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":248711,"byte_end":248725,"line_start":396,"line_end":396,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":248730,"byte_end":248733,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ Does not escape any of its inputs. Always uses double quotes to wrap the attribute values.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":248738,"byte_end":248832,"line_start":398,"line_end":398,"column_start":5,"column_end":99}},{"value":"/ The caller is responsible for escaping attribute values. Shouldn't usually be relevant since","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":248837,"byte_end":248933,"line_start":399,"line_end":399,"column_start":5,"column_end":101}},{"value":"/ the double quote character is not allowed in any of the attribute values.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":248938,"byte_end":249015,"line_start":400,"line_end":400,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":250285,"byte_end":250292,"line_start":443,"line_end":443,"column_start":12,"column_end":19},"name":"encoder","qualname":"<BytesDecl>::encoder","value":"pub fn encoder(&Self) -> Option<&'static Encoding>","parent":null,"children":[],"decl_id":null,"docs":" Gets the decoder struct\n","sig":null,"attributes":[{"value":"/ Gets the decoder struct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":250210,"byte_end":250237,"line_start":441,"line_end":441,"column_start":5,"column_end":32}},{"value":"cfg(feature = \"encoding_rs\")","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":250242,"byte_end":250273,"line_start":442,"line_end":442,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":250507,"byte_end":250517,"line_start":450,"line_end":450,"column_start":12,"column_end":22},"name":"into_owned","qualname":"<BytesDecl>::into_owned","value":"pub fn into_owned(Self) -> BytesDecl","parent":null,"children":[],"decl_id":null,"docs":" Converts the event into an owned event.\n","sig":null,"attributes":[{"value":"/ Converts the event into an owned event.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":250452,"byte_end":250495,"line_start":449,"line_end":449,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":647},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":250706,"byte_end":250714,"line_start":459,"line_end":459,"column_start":12,"column_end":20},"name":"BytesEnd","qualname":"::events::BytesEnd","value":"BytesEnd {  }","parent":null,"children":[{"krate":0,"index":649}],"decl_id":null,"docs":" A struct to manage `Event::End` events\n","sig":null,"attributes":[{"value":"/ A struct to manage `Event::End` events","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":250635,"byte_end":250677,"line_start":457,"line_end":457,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":250849,"byte_end":250857,"line_start":466,"line_end":466,"column_start":12,"column_end":20},"name":"borrowed","qualname":"<BytesEnd>::borrowed","value":"pub fn borrowed(&'a [u8]) -> BytesEnd","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesEnd` borrowing a slice\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesEnd` borrowing a slice","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":250777,"byte_end":250823,"line_start":464,"line_end":464,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":250828,"byte_end":250837,"line_start":465,"line_end":465,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":251041,"byte_end":251046,"line_start":474,"line_end":474,"column_start":12,"column_end":17},"name":"owned","qualname":"<BytesEnd>::owned","value":"pub fn owned(Vec<u8>) -> BytesEnd","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesEnd` owning its name\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesEnd` owning its name","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":250971,"byte_end":251015,"line_start":472,"line_end":472,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":251020,"byte_end":251029,"line_start":473,"line_end":473,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":251216,"byte_end":251226,"line_start":481,"line_end":481,"column_start":12,"column_end":22},"name":"into_owned","qualname":"<BytesEnd>::into_owned","value":"pub fn into_owned(Self) -> BytesEnd","parent":null,"children":[],"decl_id":null,"docs":" Converts the event into an owned event.\n","sig":null,"attributes":[{"value":"/ Converts the event into an owned event.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":251161,"byte_end":251204,"line_start":480,"line_end":480,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":251406,"byte_end":251410,"line_start":489,"line_end":489,"column_start":12,"column_end":16},"name":"name","qualname":"<BytesEnd>::name","value":"pub fn name(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Gets `BytesEnd` event name\n","sig":null,"attributes":[{"value":"/ Gets `BytesEnd` event name","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":251350,"byte_end":251380,"line_start":487,"line_end":487,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":251385,"byte_end":251394,"line_start":488,"line_end":488,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":251689,"byte_end":251699,"line_start":497,"line_end":497,"column_start":12,"column_end":22},"name":"local_name","qualname":"<BytesEnd>::local_name","value":"pub fn local_name(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" local name (excluding namespace) as &[u8] (without eventual attributes)\n returns the name() with any leading namespace removed (all content up to\n and including the first ':' character)\n","sig":null,"attributes":[{"value":"/ local name (excluding namespace) as &[u8] (without eventual attributes)","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":251460,"byte_end":251535,"line_start":493,"line_end":493,"column_start":5,"column_end":80}},{"value":"/ returns the name() with any leading namespace removed (all content up to","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":251540,"byte_end":251616,"line_start":494,"line_end":494,"column_start":5,"column_end":81}},{"value":"/ and including the first ':' character)","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":251621,"byte_end":251663,"line_start":495,"line_end":495,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":251668,"byte_end":251677,"line_start":496,"line_end":496,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":653},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":252249,"byte_end":252258,"line_start":518,"line_end":518,"column_start":12,"column_end":21},"name":"BytesText","qualname":"::events::BytesText","value":"BytesText {  }","parent":null,"children":[{"krate":0,"index":655}],"decl_id":null,"docs":" Data from various events (most notably, `Event::Text`).\n","sig":null,"attributes":[{"value":"/ Data from various events (most notably, `Event::Text`).","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":252161,"byte_end":252220,"line_start":516,"line_end":516,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":252460,"byte_end":252472,"line_start":526,"line_end":526,"column_start":12,"column_end":24},"name":"from_escaped","qualname":"<BytesText>::from_escaped","value":"pub fn from_escaped<C: Into<Cow>>(C) -> BytesText","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesText` from an escaped byte sequence.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesText` from an escaped byte sequence.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":252374,"byte_end":252434,"line_start":524,"line_end":524,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":252439,"byte_end":252448,"line_start":525,"line_end":525,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":252740,"byte_end":252750,"line_start":535,"line_end":535,"column_start":12,"column_end":22},"name":"from_plain","qualname":"<BytesText>::from_plain","value":"pub fn from_plain(&'a [u8]) -> BytesText","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesText` from a byte sequence. The byte sequence is\n expected not to be escaped.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesText` from a byte sequence. The byte sequence is","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":252606,"byte_end":252678,"line_start":532,"line_end":532,"column_start":5,"column_end":77}},{"value":"/ expected not to be escaped.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":252683,"byte_end":252714,"line_start":533,"line_end":533,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":252719,"byte_end":252728,"line_start":534,"line_end":534,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":252947,"byte_end":252963,"line_start":543,"line_end":543,"column_start":12,"column_end":28},"name":"from_escaped_str","qualname":"<BytesText>::from_escaped_str","value":"pub fn from_escaped_str<C: Into<Cow>>(C) -> BytesText","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesText` from an escaped string.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesText` from an escaped string.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":252868,"byte_end":252921,"line_start":541,"line_end":541,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":252926,"byte_end":252935,"line_start":542,"line_end":542,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":253328,"byte_end":253342,"line_start":553,"line_end":553,"column_start":12,"column_end":26},"name":"from_plain_str","qualname":"<BytesText>::from_plain_str","value":"pub fn from_plain_str(&'a str) -> BytesText","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesText` from a string. The string is expected not to\n be escaped.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesText` from a string. The string is expected not to","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":253208,"byte_end":253282,"line_start":550,"line_end":550,"column_start":5,"column_end":79}},{"value":"/ be escaped.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":253287,"byte_end":253302,"line_start":551,"line_end":551,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":253307,"byte_end":253316,"line_start":552,"line_end":552,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":253550,"byte_end":253560,"line_start":560,"line_end":560,"column_start":12,"column_end":22},"name":"into_owned","qualname":"<BytesText>::into_owned","value":"pub fn into_owned(Self) -> BytesText","parent":null,"children":[],"decl_id":null,"docs":" Ensures that all data is owned to extend the object's lifetime if\n necessary.\n","sig":null,"attributes":[{"value":"/ Ensures that all data is owned to extend the object's lifetime if","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":253436,"byte_end":253505,"line_start":557,"line_end":557,"column_start":5,"column_end":74}},{"value":"/ necessary.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":253510,"byte_end":253524,"line_start":558,"line_end":558,"column_start":5,"column_end":19}},{"value":"inline","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":253529,"byte_end":253538,"line_start":559,"line_end":559,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":254210,"byte_end":254219,"line_start":579,"line_end":579,"column_start":12,"column_end":21},"name":"unescaped","qualname":"<BytesText>::unescaped","value":"pub fn unescaped(&Self) -> Result<Cow<, [u8]>>","parent":null,"children":[],"decl_id":null,"docs":" gets escaped content","sig":null,"attributes":[{"value":"/ gets escaped content","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":253888,"byte_end":253912,"line_start":573,"line_end":573,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":253917,"byte_end":253920,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ Searches for '&' into content and try to escape the coded character if possible","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":253925,"byte_end":254008,"line_start":575,"line_end":575,"column_start":5,"column_end":88}},{"value":"/ returns Malformed error with index within element if '&' is not followed by ';'","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":254013,"byte_end":254096,"line_start":576,"line_end":576,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":254101,"byte_end":254104,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ See also [`unescaped_with_custom_entities()`](#method.unescaped_with_custom_entities)","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":254109,"byte_end":254198,"line_start":578,"line_end":578,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":254781,"byte_end":254811,"line_start":594,"line_end":594,"column_start":12,"column_end":42},"name":"unescaped_with_custom_entities","qualname":"<BytesText>::unescaped_with_custom_entities","value":"pub fn unescaped_with_custom_entities<'s>(&'s Self,\n&HashMap<Vec<u8>, Vec<u8>>) -> Result<Cow>","parent":null,"children":[],"decl_id":null,"docs":" gets escaped content with custom entities","sig":null,"attributes":[{"value":"/ gets escaped content with custom entities","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":254295,"byte_end":254340,"line_start":583,"line_end":583,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":254345,"byte_end":254348,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ Searches for '&' into content and try to escape the coded character if possible","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":254353,"byte_end":254436,"line_start":585,"line_end":585,"column_start":5,"column_end":88}},{"value":"/ returns Malformed error with index within element if '&' is not followed by ';'","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":254441,"byte_end":254524,"line_start":586,"line_end":586,"column_start":5,"column_end":88}},{"value":"/ Additional entities can be provided in `custom_entities`.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":254529,"byte_end":254590,"line_start":587,"line_end":587,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":254595,"byte_end":254598,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ # Pre-condition","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":254603,"byte_end":254622,"line_start":589,"line_end":589,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":254627,"byte_end":254630,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ The keys and values of `custom_entities`, if any, must be valid UTF-8.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":254635,"byte_end":254709,"line_start":591,"line_end":591,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":254714,"byte_end":254717,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ See also [`unescaped()`](#method.unescaped)","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":254722,"byte_end":254769,"line_start":593,"line_end":593,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":255543,"byte_end":255574,"line_start":616,"line_end":616,"column_start":12,"column_end":43},"name":"unescape_and_decode_without_bom","qualname":"<BytesText>::unescape_and_decode_without_bom","value":"pub fn unescape_and_decode_without_bom<B: BufRead>(&Self, &mut Reader<B>)\n-> Result<String>","parent":null,"children":[],"decl_id":null,"docs":" helper method to unescape then decode self using the reader encoding\n but without BOM (Byte order mark)","sig":null,"attributes":[{"value":"/ helper method to unescape then decode self using the reader encoding","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":255200,"byte_end":255272,"line_start":608,"line_end":608,"column_start":5,"column_end":77}},{"value":"/ but without BOM (Byte order mark)","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":255277,"byte_end":255314,"line_start":609,"line_end":609,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":255319,"byte_end":255322,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ for performance reasons (could avoid allocating a `String`),","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":255327,"byte_end":255391,"line_start":611,"line_end":611,"column_start":5,"column_end":69}},{"value":"/ it might be wiser to manually use","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":255396,"byte_end":255433,"line_start":612,"line_end":612,"column_start":5,"column_end":42}},{"value":"/ 1. BytesText::unescaped()","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":255438,"byte_end":255467,"line_start":613,"line_end":613,"column_start":5,"column_end":34}},{"value":"/ 2. Reader::decode(...)","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":255472,"byte_end":255498,"line_start":614,"line_end":614,"column_start":5,"column_end":31}},{"value":"cfg(feature = \"encoding\")","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":255503,"byte_end":255531,"line_start":615,"line_end":615,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":256752,"byte_end":256804,"line_start":650,"line_end":650,"column_start":12,"column_end":64},"name":"unescape_and_decode_without_bom_with_custom_entities","qualname":"<BytesText>::unescape_and_decode_without_bom_with_custom_entities","value":"pub fn unescape_and_decode_without_bom_with_custom_entities<B: BufRead>(&Self,\n&mut Reader<B>, &HashMap<Vec<u8>, Vec<u8>>) -> Result<String>","parent":null,"children":[],"decl_id":null,"docs":" helper method to unescape then decode self using the reader encoding with custom entities\n but without BOM (Byte order mark)","sig":null,"attributes":[{"value":"/ helper method to unescape then decode self using the reader encoding with custom entities","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":256269,"byte_end":256362,"line_start":638,"line_end":638,"column_start":5,"column_end":98}},{"value":"/ but without BOM (Byte order mark)","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":256367,"byte_end":256404,"line_start":639,"line_end":639,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":256409,"byte_end":256412,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ for performance reasons (could avoid allocating a `String`),","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":256417,"byte_end":256481,"line_start":641,"line_end":641,"column_start":5,"column_end":69}},{"value":"/ it might be wiser to manually use","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":256486,"byte_end":256523,"line_start":642,"line_end":642,"column_start":5,"column_end":42}},{"value":"/ 1. BytesText::unescaped()","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":256528,"byte_end":256557,"line_start":643,"line_end":643,"column_start":5,"column_end":34}},{"value":"/ 2. Reader::decode(...)","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":256562,"byte_end":256588,"line_start":644,"line_end":644,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":256593,"byte_end":256596,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ # Pre-condition","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":256601,"byte_end":256620,"line_start":646,"line_end":646,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":256625,"byte_end":256628,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ The keys and values of `custom_entities`, if any, must be valid UTF-8.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":256633,"byte_end":256707,"line_start":648,"line_end":648,"column_start":5,"column_end":79}},{"value":"cfg(feature = \"encoding\")","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":256712,"byte_end":256740,"line_start":649,"line_end":649,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":259054,"byte_end":259073,"line_start":708,"line_end":708,"column_start":12,"column_end":31},"name":"unescape_and_decode","qualname":"<BytesText>::unescape_and_decode","value":"pub fn unescape_and_decode<B: BufRead>(&Self, &Reader<B>) -> Result<String>","parent":null,"children":[],"decl_id":null,"docs":" helper method to unescape then decode self using the reader encoding","sig":null,"attributes":[{"value":"/ helper method to unescape then decode self using the reader encoding","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":258786,"byte_end":258858,"line_start":702,"line_end":702,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":258863,"byte_end":258866,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ for performance reasons (could avoid allocating a `String`),","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":258871,"byte_end":258935,"line_start":704,"line_end":704,"column_start":5,"column_end":69}},{"value":"/ it might be wiser to manually use","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":258940,"byte_end":258977,"line_start":705,"line_end":705,"column_start":5,"column_end":42}},{"value":"/ 1. BytesText::unescaped()","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":258982,"byte_end":259011,"line_start":706,"line_end":706,"column_start":5,"column_end":34}},{"value":"/ 2. Reader::decode(...)","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":259016,"byte_end":259042,"line_start":707,"line_end":707,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":259623,"byte_end":259663,"line_start":722,"line_end":722,"column_start":12,"column_end":52},"name":"unescape_and_decode_with_custom_entities","qualname":"<BytesText>::unescape_and_decode_with_custom_entities","value":"pub fn unescape_and_decode_with_custom_entities<B: BufRead>(&Self, &Reader<B>,\n&HashMap<Vec<u8>, Vec<u8>>) -> Result<String>","parent":null,"children":[],"decl_id":null,"docs":" helper method to unescape then decode self using the reader encoding with custom entities","sig":null,"attributes":[{"value":"/ helper method to unescape then decode self using the reader encoding with custom entities","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":259215,"byte_end":259308,"line_start":712,"line_end":712,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":259313,"byte_end":259316,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ for performance reasons (could avoid allocating a `String`),","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":259321,"byte_end":259385,"line_start":714,"line_end":714,"column_start":5,"column_end":69}},{"value":"/ it might be wiser to manually use","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":259390,"byte_end":259427,"line_start":715,"line_end":715,"column_start":5,"column_end":42}},{"value":"/ 1. BytesText::unescaped()","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":259432,"byte_end":259461,"line_start":716,"line_end":716,"column_start":5,"column_end":34}},{"value":"/ 2. Reader::decode(...)","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":259466,"byte_end":259492,"line_start":717,"line_end":717,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":259497,"byte_end":259500,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ # Pre-condition","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":259505,"byte_end":259524,"line_start":719,"line_end":719,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":259529,"byte_end":259532,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ The keys and values of `custom_entities`, if any, must be valid UTF-8.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":259537,"byte_end":259611,"line_start":721,"line_end":721,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":260911,"byte_end":260918,"line_start":755,"line_end":755,"column_start":12,"column_end":19},"name":"escaped","qualname":"<BytesText>::escaped","value":"pub fn escaped(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Gets escaped content.\n","sig":null,"attributes":[{"value":"/ Gets escaped content.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":260874,"byte_end":260899,"line_start":754,"line_end":754,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":661},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":261493,"byte_end":261498,"line_start":776,"line_end":776,"column_start":5,"column_end":10},"name":"Start","qualname":"::events::Event::Start","value":"Event::Start(BytesStart)","parent":{"krate":0,"index":659},"children":[],"decl_id":null,"docs":" Start tag (with attributes) `<tag attr=\"value\">`.\n","sig":null,"attributes":[{"value":"/ Start tag (with attributes) `<tag attr=\"value\">`.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":261435,"byte_end":261488,"line_start":775,"line_end":775,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":664},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":261546,"byte_end":261549,"line_start":778,"line_end":778,"column_start":5,"column_end":8},"name":"End","qualname":"::events::Event::End","value":"Event::End(BytesEnd)","parent":{"krate":0,"index":659},"children":[],"decl_id":null,"docs":" End tag `</tag>`.\n","sig":null,"attributes":[{"value":"/ End tag `</tag>`.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":261520,"byte_end":261541,"line_start":777,"line_end":777,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":667},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":261637,"byte_end":261642,"line_start":780,"line_end":780,"column_start":5,"column_end":10},"name":"Empty","qualname":"::events::Event::Empty","value":"Event::Empty(BytesStart)","parent":{"krate":0,"index":659},"children":[],"decl_id":null,"docs":" Empty element tag (with attributes) `<tag attr=\"value\" />`.\n","sig":null,"attributes":[{"value":"/ Empty element tag (with attributes) `<tag attr=\"value\" />`.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":261569,"byte_end":261632,"line_start":779,"line_end":779,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":670},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":261722,"byte_end":261726,"line_start":782,"line_end":782,"column_start":5,"column_end":9},"name":"Text","qualname":"::events::Event::Text","value":"Event::Text(BytesText)","parent":{"krate":0,"index":659},"children":[],"decl_id":null,"docs":" Character data between `Start` and `End` element.\n","sig":null,"attributes":[{"value":"/ Character data between `Start` and `End` element.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":261664,"byte_end":261717,"line_start":781,"line_end":781,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":673},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":261779,"byte_end":261786,"line_start":784,"line_end":784,"column_start":5,"column_end":12},"name":"Comment","qualname":"::events::Event::Comment","value":"Event::Comment(BytesText)","parent":{"krate":0,"index":659},"children":[],"decl_id":null,"docs":" Comment `<!-- ... -->`.\n","sig":null,"attributes":[{"value":"/ Comment `<!-- ... -->`.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":261747,"byte_end":261774,"line_start":783,"line_end":783,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":676},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":261840,"byte_end":261845,"line_start":786,"line_end":786,"column_start":5,"column_end":10},"name":"CData","qualname":"::events::Event::CData","value":"Event::CData(BytesText)","parent":{"krate":0,"index":659},"children":[],"decl_id":null,"docs":" CData `<![CDATA[...]]>`.\n","sig":null,"attributes":[{"value":"/ CData `<![CDATA[...]]>`.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":261807,"byte_end":261835,"line_start":785,"line_end":785,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":679},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":261905,"byte_end":261909,"line_start":788,"line_end":788,"column_start":5,"column_end":9},"name":"Decl","qualname":"::events::Event::Decl","value":"Event::Decl(BytesDecl)","parent":{"krate":0,"index":659},"children":[],"decl_id":null,"docs":" XML declaration `<?xml ...?>`.\n","sig":null,"attributes":[{"value":"/ XML declaration `<?xml ...?>`.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":261866,"byte_end":261900,"line_start":787,"line_end":787,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":682},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":261972,"byte_end":261974,"line_start":790,"line_end":790,"column_start":5,"column_end":7},"name":"PI","qualname":"::events::Event::PI","value":"Event::PI(BytesText)","parent":{"krate":0,"index":659},"children":[],"decl_id":null,"docs":" Processing instruction `<?...?>`.\n","sig":null,"attributes":[{"value":"/ Processing instruction `<?...?>`.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":261930,"byte_end":261967,"line_start":789,"line_end":789,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":685},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":262028,"byte_end":262035,"line_start":792,"line_end":792,"column_start":5,"column_end":12},"name":"DocType","qualname":"::events::Event::DocType","value":"Event::DocType(BytesText)","parent":{"krate":0,"index":659},"children":[],"decl_id":null,"docs":" Doctype `<!DOCTYPE...>`.\n","sig":null,"attributes":[{"value":"/ Doctype `<!DOCTYPE...>`.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":261995,"byte_end":262023,"line_start":791,"line_end":791,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":688},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":262085,"byte_end":262088,"line_start":794,"line_end":794,"column_start":5,"column_end":8},"name":"Eof","qualname":"::events::Event::Eof","value":"Event::Eof","parent":{"krate":0,"index":659},"children":[],"decl_id":null,"docs":" End of XML document.\n","sig":null,"attributes":[{"value":"/ End of XML document.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":262056,"byte_end":262080,"line_start":793,"line_end":793,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":659},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":261419,"byte_end":261424,"line_start":774,"line_end":774,"column_start":10,"column_end":15},"name":"Event","qualname":"::events::Event","value":"pub enum Event<'a> {\n    Start(BytesStart),\n    End(BytesEnd),\n    Empty(BytesStart),\n    Text(BytesText),\n    Comment(BytesText),\n    CData(BytesText),\n    Decl(BytesDecl),\n    PI(BytesText),\n    DocType(BytesText),\n    Eof,\n}","parent":null,"children":[{"krate":0,"index":661},{"krate":0,"index":664},{"krate":0,"index":667},{"krate":0,"index":670},{"krate":0,"index":673},{"krate":0,"index":676},{"krate":0,"index":679},{"krate":0,"index":682},{"krate":0,"index":685},{"krate":0,"index":688}],"decl_id":null,"docs":" Event emitted by [`Reader::read_event`].","sig":null,"attributes":[{"value":"/ Event emitted by [`Reader::read_event`].","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":261262,"byte_end":261306,"line_start":770,"line_end":770,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":261307,"byte_end":261310,"line_start":771,"line_end":771,"column_start":1,"column_end":4}},{"value":"/ [`Reader::read_event`]: ../reader/struct.Reader.html#method.read_event","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":261311,"byte_end":261385,"line_start":772,"line_end":772,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":262274,"byte_end":262284,"line_start":800,"line_end":800,"column_start":12,"column_end":22},"name":"into_owned","qualname":"<Event>::into_owned","value":"pub fn into_owned(Self) -> Event","parent":null,"children":[],"decl_id":null,"docs":" Converts the event to an owned version, untied to the lifetime of\n buffer used when reading but incurring a new, seperate allocation.\n","sig":null,"attributes":[{"value":"/ Converts the event to an owned version, untied to the lifetime of","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":262118,"byte_end":262187,"line_start":798,"line_end":798,"column_start":5,"column_end":74}},{"value":"/ buffer used when reading but incurring a new, seperate allocation.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":262192,"byte_end":262262,"line_start":799,"line_end":799,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":707},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":286811,"byte_end":286817,"line_start":66,"line_end":66,"column_start":12,"column_end":18},"name":"Reader","qualname":"::reader::Reader","value":"Reader {  }","parent":null,"children":[{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":722}],"decl_id":null,"docs":" A low level encoding-agnostic XML event reader.","sig":null,"attributes":[{"value":"/ A low level encoding-agnostic XML event reader.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":285541,"byte_end":285592,"line_start":27,"line_end":27,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":285593,"byte_end":285596,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Consumes a `BufRead` and streams XML `Event`s.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":285597,"byte_end":285647,"line_start":29,"line_end":29,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":285648,"byte_end":285651,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":285652,"byte_end":285666,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":285667,"byte_end":285670,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":285671,"byte_end":285678,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ use quick_xml::Reader;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":285679,"byte_end":285705,"line_start":34,"line_end":34,"column_start":1,"column_end":27}},{"value":"/ use quick_xml::events::Event;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":285706,"byte_end":285739,"line_start":35,"line_end":35,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":285740,"byte_end":285743,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ let xml = r#\"<tag1 att1 = \"test\">","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":285744,"byte_end":285781,"line_start":37,"line_end":37,"column_start":1,"column_end":38}},{"value":"/                 <tag2><!--Test comment-->Test</tag2>","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":285782,"byte_end":285838,"line_start":38,"line_end":38,"column_start":1,"column_end":57}},{"value":"/                 <tag2>Test 2</tag2>","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":285839,"byte_end":285878,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"/             </tag1>\"#;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":285879,"byte_end":285905,"line_start":40,"line_end":40,"column_start":1,"column_end":27}},{"value":"/ let mut reader = Reader::from_str(xml);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":285906,"byte_end":285949,"line_start":41,"line_end":41,"column_start":1,"column_end":44}},{"value":"/ reader.trim_text(true);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":285950,"byte_end":285977,"line_start":42,"line_end":42,"column_start":1,"column_end":28}},{"value":"/ let mut count = 0;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":285978,"byte_end":286000,"line_start":43,"line_end":43,"column_start":1,"column_end":23}},{"value":"/ let mut txt = Vec::new();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":286001,"byte_end":286030,"line_start":44,"line_end":44,"column_start":1,"column_end":30}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":286031,"byte_end":286060,"line_start":45,"line_end":45,"column_start":1,"column_end":30}},{"value":"/ loop {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":286061,"byte_end":286071,"line_start":46,"line_end":46,"column_start":1,"column_end":11}},{"value":"/     match reader.read_event(&mut buf) {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":286072,"byte_end":286115,"line_start":47,"line_end":47,"column_start":1,"column_end":44}},{"value":"/         Ok(Event::Start(ref e)) => {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":286116,"byte_end":286156,"line_start":48,"line_end":48,"column_start":1,"column_end":41}},{"value":"/             match e.name() {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":286157,"byte_end":286189,"line_start":49,"line_end":49,"column_start":1,"column_end":33}},{"value":"/                 b\"tag1\" => println!(\"attributes values: {:?}\",","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":286190,"byte_end":286256,"line_start":50,"line_end":50,"column_start":1,"column_end":67}},{"value":"/                                     e.attributes().map(|a| a.unwrap().value)","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":286257,"byte_end":286337,"line_start":51,"line_end":51,"column_start":1,"column_end":81}},{"value":"/                                     .collect::<Vec<_>>()),","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":286338,"byte_end":286400,"line_start":52,"line_end":52,"column_start":1,"column_end":63}},{"value":"/                 b\"tag2\" => count += 1,","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":286401,"byte_end":286443,"line_start":53,"line_end":53,"column_start":1,"column_end":43}},{"value":"/                 _ => (),","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":286444,"byte_end":286472,"line_start":54,"line_end":54,"column_start":1,"column_end":29}},{"value":"/             }","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":286473,"byte_end":286490,"line_start":55,"line_end":55,"column_start":1,"column_end":18}},{"value":"/         },","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":286491,"byte_end":286505,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/         Ok(Event::Text(e)) => txt.push(e.unescape_and_decode(&reader).unwrap()),","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":286506,"byte_end":286590,"line_start":57,"line_end":57,"column_start":1,"column_end":85}},{"value":"/         Err(e) => panic!(\"Error at position {}: {:?}\", reader.buffer_position(), e),","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":286591,"byte_end":286679,"line_start":58,"line_end":58,"column_start":1,"column_end":89}},{"value":"/         Ok(Event::Eof) => break,","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":286680,"byte_end":286716,"line_start":59,"line_end":59,"column_start":1,"column_end":37}},{"value":"/         _ => (),","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":286717,"byte_end":286737,"line_start":60,"line_end":60,"column_start":1,"column_end":21}},{"value":"/     }","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":286738,"byte_end":286747,"line_start":61,"line_end":61,"column_start":1,"column_end":10}},{"value":"/     buf.clear();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":286748,"byte_end":286768,"line_start":62,"line_end":62,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":286769,"byte_end":286774,"line_start":63,"line_end":63,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":286775,"byte_end":286782,"line_start":64,"line_end":64,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":288191,"byte_end":288202,"line_start":102,"line_end":102,"column_start":12,"column_end":23},"name":"from_reader","qualname":"<Reader<B>>::from_reader","value":"pub fn from_reader(B) -> Reader<B>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Reader` that reads from a reader implementing `BufRead`.\n","sig":null,"attributes":[{"value":"/ Creates a `Reader` that reads from a reader implementing `BufRead`.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":288108,"byte_end":288179,"line_start":101,"line_end":101,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":289471,"byte_end":289492,"line_start":134,"line_end":134,"column_start":12,"column_end":33},"name":"expand_empty_elements","qualname":"<Reader<B>>::expand_empty_elements","value":"pub fn expand_empty_elements(&mut Self, bool) -> &mut Reader<B>","parent":null,"children":[],"decl_id":null,"docs":" Changes whether empty elements should be split into an `Open` and a `Close` event.","sig":null,"attributes":[{"value":"/ Changes whether empty elements should be split into an `Open` and a `Close` event.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":288888,"byte_end":288974,"line_start":123,"line_end":123,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":288979,"byte_end":288982,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, all [`Empty`] events produced by a self-closing tag like `<tag/>` are","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":288987,"byte_end":289080,"line_start":125,"line_end":125,"column_start":5,"column_end":98}},{"value":"/ expanded into a [`Start`] event followed by a [`End`] event. When set to `false` (the","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":289085,"byte_end":289174,"line_start":126,"line_end":126,"column_start":5,"column_end":94}},{"value":"/ default), those tags are represented by an [`Empty`] event instead.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":289179,"byte_end":289250,"line_start":127,"line_end":127,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":289255,"byte_end":289258,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ (`false` by default)","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":289263,"byte_end":289287,"line_start":129,"line_end":129,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":289292,"byte_end":289295,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ [`Empty`]: events/enum.Event.html#variant.Empty","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":289300,"byte_end":289351,"line_start":131,"line_end":131,"column_start":5,"column_end":56}},{"value":"/ [`Start`]: events/enum.Event.html#variant.Start","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":289356,"byte_end":289407,"line_start":132,"line_end":132,"column_start":5,"column_end":56}},{"value":"/ [`End`]: events/enum.Event.html#variant.End","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":289412,"byte_end":289459,"line_start":133,"line_end":133,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":289914,"byte_end":289923,"line_start":147,"line_end":147,"column_start":12,"column_end":21},"name":"trim_text","qualname":"<Reader<B>>::trim_text","value":"pub fn trim_text(&mut Self, bool) -> &mut Reader<B>","parent":null,"children":[],"decl_id":null,"docs":" Changes whether whitespace before and after character data should be removed.","sig":null,"attributes":[{"value":"/ Changes whether whitespace before and after character data should be removed.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":289601,"byte_end":289682,"line_start":139,"line_end":139,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":289687,"byte_end":289690,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, all [`Text`] events are trimmed. If they are empty, no event will be","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":289695,"byte_end":289787,"line_start":141,"line_end":141,"column_start":5,"column_end":97}},{"value":"/ pushed.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":289792,"byte_end":289803,"line_start":142,"line_end":142,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":289808,"byte_end":289811,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ (`false` by default)","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":289816,"byte_end":289840,"line_start":144,"line_end":144,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":289845,"byte_end":289848,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ [`Text`]: events/enum.Event.html#variant.Text","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":289853,"byte_end":289902,"line_start":146,"line_end":146,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":290328,"byte_end":290341,"line_start":160,"line_end":160,"column_start":12,"column_end":25},"name":"trim_text_end","qualname":"<Reader<B>>::trim_text_end","value":"pub fn trim_text_end(&mut Self, bool) -> &mut Reader<B>","parent":null,"children":[],"decl_id":null,"docs":" Changes whether whitespace after character data should be removed.","sig":null,"attributes":[{"value":"/ Changes whether whitespace after character data should be removed.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":290060,"byte_end":290130,"line_start":153,"line_end":153,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":290135,"byte_end":290138,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, trailing whitespace is trimmed in [`Text`] events.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":290143,"byte_end":290217,"line_start":155,"line_end":155,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":290222,"byte_end":290225,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ (`false` by default)","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":290230,"byte_end":290254,"line_start":157,"line_end":157,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":290259,"byte_end":290262,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ [`Text`]: events/enum.Event.html#variant.Text","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":290267,"byte_end":290316,"line_start":159,"line_end":159,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":290954,"byte_end":290987,"line_start":176,"line_end":176,"column_start":12,"column_end":45},"name":"trim_markup_names_in_closing_tags","qualname":"<Reader<B>>::trim_markup_names_in_closing_tags","value":"pub fn trim_markup_names_in_closing_tags(&mut Self, bool) -> &mut Reader<B>","parent":null,"children":[],"decl_id":null,"docs":" Changes whether trailing whitespaces after the markup name are trimmed in closing tags\n `</a >`.","sig":null,"attributes":[{"value":"/ Changes whether trailing whitespaces after the markup name are trimmed in closing tags","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":290442,"byte_end":290532,"line_start":165,"line_end":165,"column_start":5,"column_end":95}},{"value":"/ `</a >`.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":290537,"byte_end":290549,"line_start":166,"line_end":166,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":290554,"byte_end":290557,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ If true the emitted [`End`] event is stripped of trailing whitespace after the markup name.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":290562,"byte_end":290657,"line_start":168,"line_end":168,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":290662,"byte_end":290665,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ Note that if set to `false` and `check_end_names` is true the comparison of markup names is","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":290670,"byte_end":290765,"line_start":170,"line_end":170,"column_start":5,"column_end":100}},{"value":"/ going to fail erronously if a closing tag contains trailing whitespaces.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":290770,"byte_end":290846,"line_start":171,"line_end":171,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":290851,"byte_end":290854,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ (`true` by default)","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":290859,"byte_end":290882,"line_start":173,"line_end":173,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":290887,"byte_end":290890,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ [`End`]: events/enum.Event.html#variant.End","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":290895,"byte_end":290942,"line_start":175,"line_end":175,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":291712,"byte_end":291727,"line_start":194,"line_end":194,"column_start":12,"column_end":27},"name":"check_end_names","qualname":"<Reader<B>>::check_end_names","value":"pub fn check_end_names(&mut Self, bool) -> &mut Reader<B>","parent":null,"children":[],"decl_id":null,"docs":" Changes whether mismatched closing tag names should be detected.","sig":null,"attributes":[{"value":"/ Changes whether mismatched closing tag names should be detected.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":291108,"byte_end":291176,"line_start":181,"line_end":181,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":291181,"byte_end":291184,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ When set to `false`, it won't check if a closing tag matches the corresponding opening tag.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":291189,"byte_end":291284,"line_start":183,"line_end":183,"column_start":5,"column_end":100}},{"value":"/ For example, `<mytag></different_tag>` will be permitted.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":291289,"byte_end":291350,"line_start":184,"line_end":184,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":291355,"byte_end":291358,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ If the XML is known to be sane (already processed, etc.) this saves extra time.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":291363,"byte_end":291446,"line_start":186,"line_end":186,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":291451,"byte_end":291454,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ Note that the emitted [`End`] event will not be modified if this is disabled, ie. it will","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":291459,"byte_end":291552,"line_start":188,"line_end":188,"column_start":5,"column_end":98}},{"value":"/ contain the data of the mismatched end tag.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":291557,"byte_end":291604,"line_start":189,"line_end":189,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":291609,"byte_end":291612,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ (`true` by default)","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":291617,"byte_end":291640,"line_start":191,"line_end":191,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":291645,"byte_end":291648,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ [`End`]: events/enum.Event.html#variant.End","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":291653,"byte_end":291700,"line_start":193,"line_end":193,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":292315,"byte_end":292329,"line_start":209,"line_end":209,"column_start":12,"column_end":26},"name":"check_comments","qualname":"<Reader<B>>::check_comments","value":"pub fn check_comments(&mut Self, bool) -> &mut Reader<B>","parent":null,"children":[],"decl_id":null,"docs":" Changes whether comments should be validated.","sig":null,"attributes":[{"value":"/ Changes whether comments should be validated.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":291830,"byte_end":291879,"line_start":199,"line_end":199,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":291884,"byte_end":291887,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, every [`Comment`] event will be checked for not containing `--`, which","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":291892,"byte_end":291986,"line_start":201,"line_end":201,"column_start":5,"column_end":99}},{"value":"/ is not allowed in XML comments. Most of the time we don't want comments at all so we don't","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":291991,"byte_end":292085,"line_start":202,"line_end":202,"column_start":5,"column_end":99}},{"value":"/ really care about comment correctness, thus the default value is `false` to improve","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":292090,"byte_end":292177,"line_start":203,"line_end":203,"column_start":5,"column_end":92}},{"value":"/ performance.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":292182,"byte_end":292198,"line_start":204,"line_end":204,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":292203,"byte_end":292206,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ (`false` by default)","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":292211,"byte_end":292235,"line_start":206,"line_end":206,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":292240,"byte_end":292243,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ [`Comment`]: events/enum.Event.html#variant.Comment","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":292248,"byte_end":292303,"line_start":208,"line_end":208,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":292542,"byte_end":292557,"line_start":217,"line_end":217,"column_start":12,"column_end":27},"name":"buffer_position","qualname":"<Reader<B>>::buffer_position","value":"pub fn buffer_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Gets the current byte position in the input data.","sig":null,"attributes":[{"value":"/ Gets the current byte position in the input data.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":292431,"byte_end":292484,"line_start":214,"line_end":214,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":292489,"byte_end":292492,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ Useful when debugging errors.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":292497,"byte_end":292530,"line_start":216,"line_end":216,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":306364,"byte_end":306374,"line_start":546,"line_end":546,"column_start":12,"column_end":22},"name":"read_event","qualname":"<Reader<B>>::read_event","value":"pub fn read_event<'a, 'b>(&'a mut Self, &'b mut Vec<u8>) -> Result<Event>","parent":null,"children":[],"decl_id":null,"docs":" Reads the next `Event`.","sig":null,"attributes":[{"value":"/ Reads the next `Event`.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":304681,"byte_end":304708,"line_start":503,"line_end":503,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":304713,"byte_end":304716,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ This is the main entry point for reading XML `Event`s.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":304721,"byte_end":304779,"line_start":505,"line_end":505,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":304784,"byte_end":304787,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ `Event`s borrow `buf` and can be converted to own their data if needed (uses `Cow`","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":304792,"byte_end":304878,"line_start":507,"line_end":507,"column_start":5,"column_end":91}},{"value":"/ internally).","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":304883,"byte_end":304899,"line_start":508,"line_end":508,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":304904,"byte_end":304907,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ Having the possibility to control the internal buffers gives you some additional benefits","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":304912,"byte_end":305005,"line_start":510,"line_end":510,"column_start":5,"column_end":98}},{"value":"/ such as:","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":305010,"byte_end":305022,"line_start":511,"line_end":511,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":305027,"byte_end":305030,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ - Reduce the number of allocations by reusing the same buffer. For constrained systems,","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":305035,"byte_end":305126,"line_start":513,"line_end":513,"column_start":5,"column_end":96}},{"value":"/   you can call `buf.clear()` once you are done with processing the event (typically at the","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":305131,"byte_end":305225,"line_start":514,"line_end":514,"column_start":5,"column_end":99}},{"value":"/   end of your loop).","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":305230,"byte_end":305254,"line_start":515,"line_end":515,"column_start":5,"column_end":29}},{"value":"/ - Reserve the buffer length if you know the file size (using `Vec::with_capacity`).","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":305259,"byte_end":305346,"line_start":516,"line_end":516,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":305351,"byte_end":305354,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":305359,"byte_end":305373,"line_start":518,"line_end":518,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":305378,"byte_end":305381,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":305386,"byte_end":305393,"line_start":520,"line_end":520,"column_start":5,"column_end":12}},{"value":"/ use quick_xml::Reader;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":305398,"byte_end":305424,"line_start":521,"line_end":521,"column_start":5,"column_end":31}},{"value":"/ use quick_xml::events::Event;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":305429,"byte_end":305462,"line_start":522,"line_end":522,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":305467,"byte_end":305470,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ let xml = r#\"<tag1 att1 = \"test\">","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":305475,"byte_end":305512,"line_start":524,"line_end":524,"column_start":5,"column_end":42}},{"value":"/                 <tag2><!--Test comment-->Test</tag2>","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":305517,"byte_end":305573,"line_start":525,"line_end":525,"column_start":5,"column_end":61}},{"value":"/                 <tag2>Test 2</tag2>","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":305578,"byte_end":305617,"line_start":526,"line_end":526,"column_start":5,"column_end":44}},{"value":"/             </tag1>\"#;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":305622,"byte_end":305648,"line_start":527,"line_end":527,"column_start":5,"column_end":31}},{"value":"/ let mut reader = Reader::from_str(xml);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":305653,"byte_end":305696,"line_start":528,"line_end":528,"column_start":5,"column_end":48}},{"value":"/ reader.trim_text(true);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":305701,"byte_end":305728,"line_start":529,"line_end":529,"column_start":5,"column_end":32}},{"value":"/ let mut count = 0;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":305733,"byte_end":305755,"line_start":530,"line_end":530,"column_start":5,"column_end":27}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":305760,"byte_end":305789,"line_start":531,"line_end":531,"column_start":5,"column_end":34}},{"value":"/ let mut txt = Vec::new();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":305794,"byte_end":305823,"line_start":532,"line_end":532,"column_start":5,"column_end":34}},{"value":"/ loop {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":305828,"byte_end":305838,"line_start":533,"line_end":533,"column_start":5,"column_end":15}},{"value":"/     match reader.read_event(&mut buf) {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":305843,"byte_end":305886,"line_start":534,"line_end":534,"column_start":5,"column_end":48}},{"value":"/         Ok(Event::Start(ref e)) => count += 1,","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":305891,"byte_end":305941,"line_start":535,"line_end":535,"column_start":5,"column_end":55}},{"value":"/         Ok(Event::Text(e)) => txt.push(e.unescape_and_decode(&reader).expect(\"Error!\")),","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":305946,"byte_end":306038,"line_start":536,"line_end":536,"column_start":5,"column_end":97}},{"value":"/         Err(e) => panic!(\"Error at position {}: {:?}\", reader.buffer_position(), e),","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":306043,"byte_end":306131,"line_start":537,"line_end":537,"column_start":5,"column_end":93}},{"value":"/         Ok(Event::Eof) => break,","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":306136,"byte_end":306172,"line_start":538,"line_end":538,"column_start":5,"column_end":41}},{"value":"/         _ => (),","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":306177,"byte_end":306197,"line_start":539,"line_end":539,"column_start":5,"column_end":25}},{"value":"/     }","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":306202,"byte_end":306211,"line_start":540,"line_end":540,"column_start":5,"column_end":14}},{"value":"/     buf.clear();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":306216,"byte_end":306236,"line_start":541,"line_end":541,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":306241,"byte_end":306246,"line_start":542,"line_end":542,"column_start":5,"column_end":10}},{"value":"/ println!(\"Found {} start events\", count);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":306251,"byte_end":306296,"line_start":543,"line_end":543,"column_start":5,"column_end":50}},{"value":"/ println!(\"Text events: {:?}\", txt);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":306301,"byte_end":306340,"line_start":544,"line_end":544,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":306345,"byte_end":306352,"line_start":545,"line_end":545,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":437},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":307346,"byte_end":307361,"line_start":568,"line_end":568,"column_start":12,"column_end":27},"name":"event_namespace","qualname":"<Reader<B>>::event_namespace","value":"pub fn event_namespace<'a, 'b, 'c>(&'a Self, &'b [u8], &'c [u8])\n-> (Option<&'c [u8]>, &'b [u8])","parent":null,"children":[],"decl_id":null,"docs":" Resolves a potentially qualified **event name** into (namespace name, local name).","sig":null,"attributes":[{"value":"/ Resolves a potentially qualified **event name** into (namespace name, local name).","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":306877,"byte_end":306963,"line_start":560,"line_end":560,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":306968,"byte_end":306971,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ *Qualified* attribute names have the form `prefix:local-name` where the`prefix` is defined","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":306976,"byte_end":307070,"line_start":562,"line_end":562,"column_start":5,"column_end":99}},{"value":"/ on any containing XML element via `xmlns:prefix=\"the:namespace:uri\"`. The namespace prefix","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":307075,"byte_end":307169,"line_start":563,"line_end":563,"column_start":5,"column_end":99}},{"value":"/ can be defined on the same element as the attribute in question.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":307174,"byte_end":307242,"line_start":564,"line_end":564,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":307247,"byte_end":307250,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ *Unqualified* event inherits the current *default namespace*.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":307255,"byte_end":307320,"line_start":566,"line_end":566,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":307325,"byte_end":307334,"line_start":567,"line_end":567,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":441},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":308081,"byte_end":308100,"line_start":585,"line_end":585,"column_start":12,"column_end":31},"name":"attribute_namespace","qualname":"<Reader<B>>::attribute_namespace","value":"pub fn attribute_namespace<'a, 'b, 'c>(&'a Self, &'b [u8], &'c [u8])\n-> (Option<&'c [u8]>, &'b [u8])","parent":null,"children":[],"decl_id":null,"docs":" Resolves a potentially qualified **attribute name** into (namespace name, local name).","sig":null,"attributes":[{"value":"/ Resolves a potentially qualified **attribute name** into (namespace name, local name).","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":307590,"byte_end":307680,"line_start":577,"line_end":577,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":307685,"byte_end":307688,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ *Qualified* attribute names have the form `prefix:local-name` where the`prefix` is defined","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":307693,"byte_end":307787,"line_start":579,"line_end":579,"column_start":5,"column_end":99}},{"value":"/ on any containing XML element via `xmlns:prefix=\"the:namespace:uri\"`. The namespace prefix","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":307792,"byte_end":307886,"line_start":580,"line_end":580,"column_start":5,"column_end":99}},{"value":"/ can be defined on the same element as the attribute in question.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":307891,"byte_end":307959,"line_start":581,"line_end":581,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":307964,"byte_end":307967,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ *Unqualified* attribute names do *not* inherit the current *default namespace*.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":307972,"byte_end":308055,"line_start":583,"line_end":583,"column_start":5,"column_end":88}},{"value":"inline","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":308060,"byte_end":308069,"line_start":584,"line_end":584,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":445},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":310028,"byte_end":310049,"line_start":636,"line_end":636,"column_start":12,"column_end":33},"name":"read_namespaced_event","qualname":"<Reader<B>>::read_namespaced_event","value":"pub fn read_namespaced_event<'a, 'b,\n'c>(&'a mut Self, &'b mut Vec<u8>, &'c mut Vec<u8>)\n-> Result<(Option<&'c [u8]>, Event)>","parent":null,"children":[],"decl_id":null,"docs":" Reads the next event and resolves its namespace (if applicable).","sig":null,"attributes":[{"value":"/ Reads the next event and resolves its namespace (if applicable).","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":308330,"byte_end":308398,"line_start":594,"line_end":594,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":308403,"byte_end":308406,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":308411,"byte_end":308425,"line_start":596,"line_end":596,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":308430,"byte_end":308433,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":308438,"byte_end":308445,"line_start":598,"line_end":598,"column_start":5,"column_end":12}},{"value":"/ use std::str::from_utf8;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":308450,"byte_end":308478,"line_start":599,"line_end":599,"column_start":5,"column_end":33}},{"value":"/ use quick_xml::Reader;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":308483,"byte_end":308509,"line_start":600,"line_end":600,"column_start":5,"column_end":31}},{"value":"/ use quick_xml::events::Event;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":308514,"byte_end":308547,"line_start":601,"line_end":601,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":308552,"byte_end":308555,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ let xml = r#\"<x:tag1 xmlns:x=\"www.xxxx\" xmlns:y=\"www.yyyy\" att1 = \"test\">","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":308560,"byte_end":308637,"line_start":603,"line_end":603,"column_start":5,"column_end":82}},{"value":"/                 <y:tag2><!--Test comment-->Test</y:tag2>","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":308642,"byte_end":308702,"line_start":604,"line_end":604,"column_start":5,"column_end":65}},{"value":"/                 <y:tag2>Test 2</y:tag2>","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":308707,"byte_end":308750,"line_start":605,"line_end":605,"column_start":5,"column_end":48}},{"value":"/             </x:tag1>\"#;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":308755,"byte_end":308783,"line_start":606,"line_end":606,"column_start":5,"column_end":33}},{"value":"/ let mut reader = Reader::from_str(xml);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":308788,"byte_end":308831,"line_start":607,"line_end":607,"column_start":5,"column_end":48}},{"value":"/ reader.trim_text(true);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":308836,"byte_end":308863,"line_start":608,"line_end":608,"column_start":5,"column_end":32}},{"value":"/ let mut count = 0;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":308868,"byte_end":308890,"line_start":609,"line_end":609,"column_start":5,"column_end":27}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":308895,"byte_end":308924,"line_start":610,"line_end":610,"column_start":5,"column_end":34}},{"value":"/ let mut ns_buf = Vec::new();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":308929,"byte_end":308961,"line_start":611,"line_end":611,"column_start":5,"column_end":37}},{"value":"/ let mut txt = Vec::new();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":308966,"byte_end":308995,"line_start":612,"line_end":612,"column_start":5,"column_end":34}},{"value":"/ loop {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":309000,"byte_end":309010,"line_start":613,"line_end":613,"column_start":5,"column_end":15}},{"value":"/     match reader.read_namespaced_event(&mut buf, &mut ns_buf) {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":309015,"byte_end":309082,"line_start":614,"line_end":614,"column_start":5,"column_end":72}},{"value":"/         Ok((ref ns, Event::Start(ref e))) => {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":309087,"byte_end":309137,"line_start":615,"line_end":615,"column_start":5,"column_end":55}},{"value":"/             count += 1;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":309142,"byte_end":309169,"line_start":616,"line_end":616,"column_start":5,"column_end":32}},{"value":"/             match (*ns, e.local_name()) {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":309174,"byte_end":309219,"line_start":617,"line_end":617,"column_start":5,"column_end":50}},{"value":"/                 (Some(b\"www.xxxx\"), b\"tag1\") => (),","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":309224,"byte_end":309279,"line_start":618,"line_end":618,"column_start":5,"column_end":60}},{"value":"/                 (Some(b\"www.yyyy\"), b\"tag2\") => (),","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":309284,"byte_end":309339,"line_start":619,"line_end":619,"column_start":5,"column_end":60}},{"value":"/                 (ns, n) => panic!(\"Namespace and local name mismatch\"),","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":309344,"byte_end":309419,"line_start":620,"line_end":620,"column_start":5,"column_end":80}},{"value":"/             }","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":309424,"byte_end":309441,"line_start":621,"line_end":621,"column_start":5,"column_end":22}},{"value":"/             println!(\"Resolved namespace: {:?}\", ns.and_then(|ns| from_utf8(ns).ok()));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":309446,"byte_end":309537,"line_start":622,"line_end":622,"column_start":5,"column_end":96}},{"value":"/         }","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":309542,"byte_end":309555,"line_start":623,"line_end":623,"column_start":5,"column_end":18}},{"value":"/         Ok((_, Event::Text(e))) => {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":309560,"byte_end":309600,"line_start":624,"line_end":624,"column_start":5,"column_end":45}},{"value":"/             txt.push(e.unescape_and_decode(&reader).expect(\"Error!\"))","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":309605,"byte_end":309678,"line_start":625,"line_end":625,"column_start":5,"column_end":78}},{"value":"/         },","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":309683,"byte_end":309697,"line_start":626,"line_end":626,"column_start":5,"column_end":19}},{"value":"/         Err(e) => panic!(\"Error at position {}: {:?}\", reader.buffer_position(), e),","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":309702,"byte_end":309790,"line_start":627,"line_end":627,"column_start":5,"column_end":93}},{"value":"/         Ok((_, Event::Eof)) => break,","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":309795,"byte_end":309836,"line_start":628,"line_end":628,"column_start":5,"column_end":46}},{"value":"/         _ => (),","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":309841,"byte_end":309861,"line_start":629,"line_end":629,"column_start":5,"column_end":25}},{"value":"/     }","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":309866,"byte_end":309875,"line_start":630,"line_end":630,"column_start":5,"column_end":14}},{"value":"/     buf.clear();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":309880,"byte_end":309900,"line_start":631,"line_end":631,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":309905,"byte_end":309910,"line_start":632,"line_end":632,"column_start":5,"column_end":10}},{"value":"/ println!(\"Found {} start events\", count);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":309915,"byte_end":309960,"line_start":633,"line_end":633,"column_start":5,"column_end":50}},{"value":"/ println!(\"Text events: {:?}\", txt);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":309965,"byte_end":310004,"line_start":634,"line_end":634,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":310009,"byte_end":310016,"line_start":635,"line_end":635,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":449},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":312354,"byte_end":312362,"line_start":691,"line_end":691,"column_start":12,"column_end":20},"name":"encoding","qualname":"<Reader<B>>::encoding","value":"pub fn encoding(&Self) -> &'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Reader`s encoding.","sig":null,"attributes":[{"value":"/ Returns the `Reader`s encoding.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":312093,"byte_end":312128,"line_start":683,"line_end":683,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":312133,"byte_end":312136,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ The used encoding may change after parsing the XML declaration.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":312141,"byte_end":312208,"line_start":685,"line_end":685,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":312213,"byte_end":312216,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ This encoding will be used by [`decode`].","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":312221,"byte_end":312266,"line_start":687,"line_end":687,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":312271,"byte_end":312274,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ [`decode`]: #method.decode","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":312279,"byte_end":312309,"line_start":689,"line_end":689,"column_start":5,"column_end":35}},{"value":"cfg(feature = \"encoding\")","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":312314,"byte_end":312342,"line_start":690,"line_end":690,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":312757,"byte_end":312763,"line_start":703,"line_end":703,"column_start":12,"column_end":18},"name":"decode","qualname":"<Reader<B>>::decode","value":"pub fn decode<'b, 'c>(&'b Self, &'c [u8]) -> Cow","parent":null,"children":[],"decl_id":null,"docs":" Decodes a slice using the encoding specified in the XML declaration.","sig":null,"attributes":[{"value":"/ Decodes a slice using the encoding specified in the XML declaration.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":312426,"byte_end":312498,"line_start":695,"line_end":695,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":312503,"byte_end":312506,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ Decode `bytes` with BOM sniffing and with malformed sequences replaced with the","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":312511,"byte_end":312594,"line_start":697,"line_end":697,"column_start":5,"column_end":88}},{"value":"/ `U+FFFD REPLACEMENT CHARACTER`.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":312599,"byte_end":312634,"line_start":698,"line_end":698,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":312639,"byte_end":312642,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ If no encoding is specified, defaults to UTF-8.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":312647,"byte_end":312698,"line_start":700,"line_end":700,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":312703,"byte_end":312712,"line_start":701,"line_end":701,"column_start":5,"column_end":14}},{"value":"cfg(feature = \"encoding\")","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":312717,"byte_end":312745,"line_start":702,"line_end":702,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":453},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":313876,"byte_end":313894,"line_start":733,"line_end":733,"column_start":12,"column_end":30},"name":"decode_without_bom","qualname":"<Reader<B>>::decode_without_bom","value":"pub fn decode_without_bom<'b, 'c>(&'b mut Self, &'c [u8]) -> Cow","parent":null,"children":[],"decl_id":null,"docs":" Decodes a slice using without BOM (Byte order mark) the encoding specified in the XML declaration.","sig":null,"attributes":[{"value":"/ Decodes a slice using without BOM (Byte order mark) the encoding specified in the XML declaration.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":313521,"byte_end":313623,"line_start":725,"line_end":725,"column_start":5,"column_end":107}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":313628,"byte_end":313631,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/ Decode `bytes` without BOM and with malformed sequences replaced with the","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":313636,"byte_end":313713,"line_start":727,"line_end":727,"column_start":5,"column_end":82}},{"value":"/ `U+FFFD REPLACEMENT CHARACTER`.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":313718,"byte_end":313753,"line_start":728,"line_end":728,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":313758,"byte_end":313761,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ If no encoding is specified, defaults to UTF-8.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":313766,"byte_end":313817,"line_start":730,"line_end":730,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":313822,"byte_end":313831,"line_start":731,"line_end":731,"column_start":5,"column_end":14}},{"value":"cfg(feature = \"encoding\")","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":313836,"byte_end":313864,"line_start":732,"line_end":732,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":315145,"byte_end":315152,"line_start":768,"line_end":768,"column_start":12,"column_end":19},"name":"decoder","qualname":"<Reader<B>>::decoder","value":"pub fn decoder(&Self) -> Decoder","parent":null,"children":[],"decl_id":null,"docs":" Get utf8 decoder\n","sig":null,"attributes":[{"value":"/ Get utf8 decoder","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":315080,"byte_end":315100,"line_start":766,"line_end":766,"column_start":5,"column_end":25}},{"value":"cfg(feature = \"encoding\")","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":315105,"byte_end":315133,"line_start":767,"line_end":767,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":315510,"byte_end":315521,"line_start":783,"line_end":783,"column_start":12,"column_end":23},"name":"read_to_end","qualname":"<Reader<B>>::read_to_end","value":"pub fn read_to_end<K: AsRef<[u8]>>(&mut Self, K, &mut Vec<u8>) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Reads until end element is found","sig":null,"attributes":[{"value":"/ Reads until end element is found","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":315374,"byte_end":315410,"line_start":780,"line_end":780,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":315415,"byte_end":315418,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ Manages nested cases where parent and child elements have the same name","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":315423,"byte_end":315498,"line_start":782,"line_end":782,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":317474,"byte_end":317483,"line_start":839,"line_end":839,"column_start":12,"column_end":21},"name":"read_text","qualname":"<Reader<B>>::read_text","value":"pub fn read_text<K: AsRef<[u8]>>(&mut Self, K, &mut Vec<u8>) -> Result<String>","parent":null,"children":[],"decl_id":null,"docs":" Reads optional text between start and end tags.","sig":null,"attributes":[{"value":"/ Reads optional text between start and end tags.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":316260,"byte_end":316311,"line_start":805,"line_end":805,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":316316,"byte_end":316319,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ If the next event is a [`Text`] event, returns the decoded and unescaped content as a","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":316324,"byte_end":316413,"line_start":807,"line_end":807,"column_start":5,"column_end":94}},{"value":"/ `String`. If the next event is an [`End`] event, returns the empty string. In all other","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":316418,"byte_end":316509,"line_start":808,"line_end":808,"column_start":5,"column_end":96}},{"value":"/ cases, returns an error.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":316514,"byte_end":316542,"line_start":809,"line_end":809,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":316547,"byte_end":316550,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ Any text will be decoded using the XML encoding specified in the XML declaration (or UTF-8","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":316555,"byte_end":316649,"line_start":811,"line_end":811,"column_start":5,"column_end":99}},{"value":"/ if none is specified).","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":316654,"byte_end":316680,"line_start":812,"line_end":812,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":316685,"byte_end":316688,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":316693,"byte_end":316707,"line_start":814,"line_end":814,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":316712,"byte_end":316715,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":316720,"byte_end":316727,"line_start":816,"line_end":816,"column_start":5,"column_end":12}},{"value":"/ use quick_xml::Reader;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":316732,"byte_end":316758,"line_start":817,"line_end":817,"column_start":5,"column_end":31}},{"value":"/ use quick_xml::events::Event;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":316763,"byte_end":316796,"line_start":818,"line_end":818,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":316801,"byte_end":316804,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ let mut xml = Reader::from_reader(b\"","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":316809,"byte_end":316849,"line_start":820,"line_end":820,"column_start":5,"column_end":45}},{"value":"/     <a>&lt;b&gt;</a>","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":316854,"byte_end":316878,"line_start":821,"line_end":821,"column_start":5,"column_end":29}},{"value":"/     <a></a>","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":316883,"byte_end":316898,"line_start":822,"line_end":822,"column_start":5,"column_end":20}},{"value":"/ \" as &[u8]);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":316903,"byte_end":316919,"line_start":823,"line_end":823,"column_start":5,"column_end":21}},{"value":"/ xml.trim_text(true);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":316924,"byte_end":316948,"line_start":824,"line_end":824,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":316953,"byte_end":316956,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ let expected = [\"<b>\", \"\"];","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":316961,"byte_end":316992,"line_start":826,"line_end":826,"column_start":5,"column_end":36}},{"value":"/ for &content in expected.iter() {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":316997,"byte_end":317034,"line_start":827,"line_end":827,"column_start":5,"column_end":42}},{"value":"/     match xml.read_event(&mut Vec::new()) {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":317039,"byte_end":317086,"line_start":828,"line_end":828,"column_start":5,"column_end":52}},{"value":"/         Ok(Event::Start(ref e)) => {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":317091,"byte_end":317131,"line_start":829,"line_end":829,"column_start":5,"column_end":45}},{"value":"/             assert_eq!(&xml.read_text(e.name(), &mut Vec::new()).unwrap(), content);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":317136,"byte_end":317224,"line_start":830,"line_end":830,"column_start":5,"column_end":93}},{"value":"/         },","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":317229,"byte_end":317243,"line_start":831,"line_end":831,"column_start":5,"column_end":19}},{"value":"/         e => panic!(\"Expecting Start event, found {:?}\", e),","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":317248,"byte_end":317312,"line_start":832,"line_end":832,"column_start":5,"column_end":69}},{"value":"/     }","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":317317,"byte_end":317326,"line_start":833,"line_end":833,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":317331,"byte_end":317336,"line_start":834,"line_end":834,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":317341,"byte_end":317348,"line_start":835,"line_end":835,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":317353,"byte_end":317356,"line_start":836,"line_end":836,"column_start":5,"column_end":8}},{"value":"/ [`Text`]: events/enum.Event.html#variant.Text","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":317361,"byte_end":317410,"line_start":837,"line_end":837,"column_start":5,"column_end":54}},{"value":"/ [`End`]: events/enum.Event.html#variant.End","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":317415,"byte_end":317462,"line_start":838,"line_end":838,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":319782,"byte_end":319804,"line_start":903,"line_end":903,"column_start":12,"column_end":34},"name":"into_underlying_reader","qualname":"<Reader<B>>::into_underlying_reader","value":"pub fn into_underlying_reader(Self) -> B","parent":null,"children":[],"decl_id":null,"docs":" Consumes `Reader` returning the underlying reader","sig":null,"attributes":[{"value":"/ Consumes `Reader` returning the underlying reader","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":317998,"byte_end":318051,"line_start":851,"line_end":851,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":318056,"byte_end":318059,"line_start":852,"line_end":852,"column_start":5,"column_end":8}},{"value":"/ Can be used to compute line and column of a parsing error position","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":318064,"byte_end":318134,"line_start":853,"line_end":853,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":318139,"byte_end":318142,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":318147,"byte_end":318161,"line_start":855,"line_end":855,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":318166,"byte_end":318169,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":318174,"byte_end":318181,"line_start":857,"line_end":857,"column_start":5,"column_end":12}},{"value":"/ use std::{str, io::Cursor};","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":318186,"byte_end":318217,"line_start":858,"line_end":858,"column_start":5,"column_end":36}},{"value":"/ use quick_xml::Reader;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":318222,"byte_end":318248,"line_start":859,"line_end":859,"column_start":5,"column_end":31}},{"value":"/ use quick_xml::events::Event;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":318253,"byte_end":318286,"line_start":860,"line_end":860,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":318291,"byte_end":318294,"line_start":861,"line_end":861,"column_start":5,"column_end":8}},{"value":"/ let xml = r#\"<tag1 att1 = \"test\">","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":318299,"byte_end":318336,"line_start":862,"line_end":862,"column_start":5,"column_end":42}},{"value":"/                 <tag2><!--Test comment-->Test</tag2>","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":318341,"byte_end":318397,"line_start":863,"line_end":863,"column_start":5,"column_end":61}},{"value":"/                 <tag3>Test 2</tag3>","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":318402,"byte_end":318441,"line_start":864,"line_end":864,"column_start":5,"column_end":44}},{"value":"/             </tag1>\"#;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":318446,"byte_end":318472,"line_start":865,"line_end":865,"column_start":5,"column_end":31}},{"value":"/ let mut reader = Reader::from_reader(Cursor::new(xml.as_bytes()));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":318477,"byte_end":318547,"line_start":866,"line_end":866,"column_start":5,"column_end":75}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":318552,"byte_end":318581,"line_start":867,"line_end":867,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":318586,"byte_end":318589,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ fn into_line_and_column(reader: Reader<Cursor<&[u8]>>) -> (usize, usize) {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":318594,"byte_end":318672,"line_start":869,"line_end":869,"column_start":5,"column_end":83}},{"value":"/     let end_pos = reader.buffer_position();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":318677,"byte_end":318724,"line_start":870,"line_end":870,"column_start":5,"column_end":52}},{"value":"/     let mut cursor = reader.into_underlying_reader();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":318729,"byte_end":318786,"line_start":871,"line_end":871,"column_start":5,"column_end":62}},{"value":"/     let s = String::from_utf8(cursor.into_inner()[0..end_pos].to_owned())","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":318791,"byte_end":318868,"line_start":872,"line_end":872,"column_start":5,"column_end":82}},{"value":"/         .expect(\"can't make a string\");","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":318873,"byte_end":318916,"line_start":873,"line_end":873,"column_start":5,"column_end":48}},{"value":"/     let mut line = 1;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":318921,"byte_end":318946,"line_start":874,"line_end":874,"column_start":5,"column_end":30}},{"value":"/     let mut column = 0;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":318951,"byte_end":318978,"line_start":875,"line_end":875,"column_start":5,"column_end":32}},{"value":"/     for c in s.chars() {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":318983,"byte_end":319011,"line_start":876,"line_end":876,"column_start":5,"column_end":33}},{"value":"/         if c == '\\n' {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":319016,"byte_end":319042,"line_start":877,"line_end":877,"column_start":5,"column_end":31}},{"value":"/             line += 1;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":319047,"byte_end":319073,"line_start":878,"line_end":878,"column_start":5,"column_end":31}},{"value":"/             column = 0;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":319078,"byte_end":319105,"line_start":879,"line_end":879,"column_start":5,"column_end":32}},{"value":"/         } else {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":319110,"byte_end":319130,"line_start":880,"line_end":880,"column_start":5,"column_end":25}},{"value":"/             column += 1;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":319135,"byte_end":319163,"line_start":881,"line_end":881,"column_start":5,"column_end":33}},{"value":"/         }","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":319168,"byte_end":319181,"line_start":882,"line_end":882,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":319186,"byte_end":319195,"line_start":883,"line_end":883,"column_start":5,"column_end":14}},{"value":"/     (line, column)","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":319200,"byte_end":319222,"line_start":884,"line_end":884,"column_start":5,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":319227,"byte_end":319232,"line_start":885,"line_end":885,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":319237,"byte_end":319240,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ loop {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":319245,"byte_end":319255,"line_start":887,"line_end":887,"column_start":5,"column_end":15}},{"value":"/     match reader.read_event(&mut buf) {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":319260,"byte_end":319303,"line_start":888,"line_end":888,"column_start":5,"column_end":48}},{"value":"/         Ok(Event::Start(ref e)) => match e.name() {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":319308,"byte_end":319363,"line_start":889,"line_end":889,"column_start":5,"column_end":60}},{"value":"/             b\"tag1\" | b\"tag2\" => (),","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":319368,"byte_end":319408,"line_start":890,"line_end":890,"column_start":5,"column_end":45}},{"value":"/             tag => {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":319413,"byte_end":319437,"line_start":891,"line_end":891,"column_start":5,"column_end":29}},{"value":"/                 assert_eq!(b\"tag3\", tag);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":319442,"byte_end":319487,"line_start":892,"line_end":892,"column_start":5,"column_end":50}},{"value":"/                 assert_eq!((3, 22), into_line_and_column(reader));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":319492,"byte_end":319562,"line_start":893,"line_end":893,"column_start":5,"column_end":75}},{"value":"/                 break;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":319567,"byte_end":319593,"line_start":894,"line_end":894,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":319598,"byte_end":319615,"line_start":895,"line_end":895,"column_start":5,"column_end":22}},{"value":"/         },","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":319620,"byte_end":319634,"line_start":896,"line_end":896,"column_start":5,"column_end":19}},{"value":"/         Ok(Event::Eof) => unreachable!(),","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":319639,"byte_end":319684,"line_start":897,"line_end":897,"column_start":5,"column_end":50}},{"value":"/         _ => (),","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":319689,"byte_end":319709,"line_start":898,"line_end":898,"column_start":5,"column_end":25}},{"value":"/     }","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":319714,"byte_end":319723,"line_start":899,"line_end":899,"column_start":5,"column_end":14}},{"value":"/     buf.clear();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":319728,"byte_end":319748,"line_start":900,"line_end":900,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":319753,"byte_end":319758,"line_start":901,"line_end":901,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":319763,"byte_end":319770,"line_start":902,"line_end":902,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":319937,"byte_end":319946,"line_start":910,"line_end":910,"column_start":12,"column_end":21},"name":"from_file","qualname":"<Reader<BufReader<File>>>::from_file","value":"pub fn from_file<P: AsRef<Path>>(P) -> Result<Reader<BufReader<File>>>","parent":null,"children":[],"decl_id":null,"docs":" Creates an XML reader from a file path.\n","sig":null,"attributes":[{"value":"/ Creates an XML reader from a file path.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":319882,"byte_end":319925,"line_start":909,"line_end":909,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":467},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":320248,"byte_end":320256,"line_start":919,"line_end":919,"column_start":12,"column_end":20},"name":"from_str","qualname":"<Reader<&'a [u8]>>::from_str","value":"pub fn from_str(&'a str) -> Reader<&'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Creates an XML reader from a string slice.\n","sig":null,"attributes":[{"value":"/ Creates an XML reader from a string slice.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":320190,"byte_end":320236,"line_start":918,"line_end":918,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":755},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":331363,"byte_end":331370,"line_start":1234,"line_end":1234,"column_start":12,"column_end":19},"name":"Decoder","qualname":"::reader::Decoder","value":"Decoder {  }","parent":null,"children":[{"krate":0,"index":756}],"decl_id":null,"docs":" Utf8 Decoder\n","sig":null,"attributes":[{"value":"/ Utf8 Decoder","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":331283,"byte_end":331299,"line_start":1231,"line_end":1231,"column_start":1,"column_end":17}},{"value":"cfg(feature = \"encoding\")","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":331300,"byte_end":331328,"line_start":1232,"line_end":1232,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":331626,"byte_end":331632,"line_start":1245,"line_end":1245,"column_start":12,"column_end":18},"name":"decode","qualname":"<Decoder>::decode","value":"pub fn decode<'c>(&Self, &'c [u8]) -> Cow","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"encoding\")","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":331586,"byte_end":331614,"line_start":1244,"line_end":1244,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":760},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":335255,"byte_end":335261,"line_start":60,"line_end":60,"column_start":12,"column_end":18},"name":"Writer","qualname":"::writer::Writer","value":"Writer {  }","parent":null,"children":[{"krate":0,"index":762},{"krate":0,"index":763}],"decl_id":null,"docs":" XML writer.","sig":null,"attributes":[{"value":"/ XML writer.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":333285,"byte_end":333300,"line_start":8,"line_end":8,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":333301,"byte_end":333304,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Writes XML `Event`s to a `Write` implementor.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":333305,"byte_end":333354,"line_start":10,"line_end":10,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":333355,"byte_end":333358,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":333359,"byte_end":333373,"line_start":12,"line_end":12,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":333374,"byte_end":333377,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":333378,"byte_end":333389,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/ # extern crate quick_xml;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":333390,"byte_end":333419,"line_start":15,"line_end":15,"column_start":1,"column_end":30}},{"value":"/ # fn main() {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":333420,"byte_end":333437,"line_start":16,"line_end":16,"column_start":1,"column_end":18}},{"value":"/ use quick_xml::{Reader, Writer};","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":333438,"byte_end":333474,"line_start":17,"line_end":17,"column_start":1,"column_end":37}},{"value":"/ use quick_xml::events::{Event, BytesEnd, BytesStart};","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":333475,"byte_end":333532,"line_start":18,"line_end":18,"column_start":1,"column_end":58}},{"value":"/ use std::io::Cursor;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":333533,"byte_end":333557,"line_start":19,"line_end":19,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":333558,"byte_end":333561,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ let xml = r#\"<this_tag k1=\"v1\" k2=\"v2\"><child>text</child></this_tag>\"#;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":333562,"byte_end":333638,"line_start":21,"line_end":21,"column_start":1,"column_end":77}},{"value":"/ let mut reader = Reader::from_str(xml);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":333639,"byte_end":333682,"line_start":22,"line_end":22,"column_start":1,"column_end":44}},{"value":"/ reader.trim_text(true);","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":333683,"byte_end":333710,"line_start":23,"line_end":23,"column_start":1,"column_end":28}},{"value":"/ let mut writer = Writer::new(Cursor::new(Vec::new()));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":333711,"byte_end":333769,"line_start":24,"line_end":24,"column_start":1,"column_end":59}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":333770,"byte_end":333799,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ loop {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":333800,"byte_end":333810,"line_start":26,"line_end":26,"column_start":1,"column_end":11}},{"value":"/     match reader.read_event(&mut buf) {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":333811,"byte_end":333854,"line_start":27,"line_end":27,"column_start":1,"column_end":44}},{"value":"/         Ok(Event::Start(ref e)) if e.name() == b\"this_tag\" => {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":333855,"byte_end":333922,"line_start":28,"line_end":28,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":333923,"byte_end":333926,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/             // crates a new element ... alternatively we could reuse `e` by calling","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":333927,"byte_end":334014,"line_start":30,"line_end":30,"column_start":1,"column_end":88}},{"value":"/             // `e.into_owned()`","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":334015,"byte_end":334050,"line_start":31,"line_end":31,"column_start":1,"column_end":36}},{"value":"/             let mut elem = BytesStart::owned(b\"my_elem\".to_vec(), \"my_elem\".len());","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":334051,"byte_end":334138,"line_start":32,"line_end":32,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":334139,"byte_end":334142,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/             // collect existing attributes","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":334143,"byte_end":334189,"line_start":34,"line_end":34,"column_start":1,"column_end":47}},{"value":"/             elem.extend_attributes(e.attributes().map(|attr| attr.unwrap()));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":334190,"byte_end":334271,"line_start":35,"line_end":35,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":334272,"byte_end":334275,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/             // copy existing attributes, adds a new my-key=\"some value\" attribute","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":334276,"byte_end":334361,"line_start":37,"line_end":37,"column_start":1,"column_end":86}},{"value":"/             elem.push_attribute((\"my-key\", \"some value\"));","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":334362,"byte_end":334424,"line_start":38,"line_end":38,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":334425,"byte_end":334428,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/             // writes the event to the writer","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":334429,"byte_end":334478,"line_start":40,"line_end":40,"column_start":1,"column_end":50}},{"value":"/             assert!(writer.write_event(Event::Start(elem)).is_ok());","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":334479,"byte_end":334551,"line_start":41,"line_end":41,"column_start":1,"column_end":73}},{"value":"/         },","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":334552,"byte_end":334566,"line_start":42,"line_end":42,"column_start":1,"column_end":15}},{"value":"/         Ok(Event::End(ref e)) if e.name() == b\"this_tag\" => {","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":334567,"byte_end":334632,"line_start":43,"line_end":43,"column_start":1,"column_end":66}},{"value":"/             assert!(writer.write_event(Event::End(BytesEnd::borrowed(b\"my_elem\"))).is_ok());","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":334633,"byte_end":334729,"line_start":44,"line_end":44,"column_start":1,"column_end":97}},{"value":"/         },","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":334730,"byte_end":334744,"line_start":45,"line_end":45,"column_start":1,"column_end":15}},{"value":"/         Ok(Event::Eof) => break,","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":334745,"byte_end":334781,"line_start":46,"line_end":46,"column_start":1,"column_end":37}},{"value":"/         // we can either move or borrow the event to write, depending on your use-case","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":334782,"byte_end":334872,"line_start":47,"line_end":47,"column_start":1,"column_end":91}},{"value":"/         Ok(e) => assert!(writer.write_event(&e).is_ok()),","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":334873,"byte_end":334934,"line_start":48,"line_end":48,"column_start":1,"column_end":62}},{"value":"/         Err(e) => panic!(\"{}\", e),","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":334935,"byte_end":334973,"line_start":49,"line_end":49,"column_start":1,"column_end":39}},{"value":"/     }","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":334974,"byte_end":334983,"line_start":50,"line_end":50,"column_start":1,"column_end":10}},{"value":"/     buf.clear();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":334984,"byte_end":335004,"line_start":51,"line_end":51,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":335005,"byte_end":335010,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":335011,"byte_end":335014,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ let result = writer.into_inner().into_inner();","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":335015,"byte_end":335065,"line_start":54,"line_end":54,"column_start":1,"column_end":51}},{"value":"/ let expected = r#\"<my_elem k1=\"v1\" k2=\"v2\" my-key=\"some value\"><child>text</child></my_elem>\"#;","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":335066,"byte_end":335165,"line_start":55,"line_end":55,"column_start":1,"column_end":100}},{"value":"/ assert_eq!(result, expected.as_bytes());","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":335166,"byte_end":335210,"line_start":56,"line_end":56,"column_start":1,"column_end":45}},{"value":"/ # }","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":335211,"byte_end":335218,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":335219,"byte_end":335226,"line_start":58,"line_end":58,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":517},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":335435,"byte_end":335438,"line_start":68,"line_end":68,"column_start":12,"column_end":15},"name":"new","qualname":"<Writer<W>>::new","value":"pub fn new(W) -> Writer<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a Writer from a generic Write\n","sig":null,"attributes":[{"value":"/ Creates a Writer from a generic Write","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":335382,"byte_end":335423,"line_start":67,"line_end":67,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":518},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":335643,"byte_end":335658,"line_start":76,"line_end":76,"column_start":12,"column_end":27},"name":"new_with_indent","qualname":"<Writer<W>>::new_with_indent","value":"pub fn new_with_indent(W, u8, usize) -> Writer<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a Writer with configured whitespace indents from a generic Write\n","sig":null,"attributes":[{"value":"/ Creates a Writer with configured whitespace indents from a generic Write","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":335555,"byte_end":335631,"line_start":75,"line_end":75,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":519},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":335928,"byte_end":335938,"line_start":84,"line_end":84,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Writer<W>>::into_inner","value":"pub fn into_inner(Self) -> W","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Writer`, returning the underlying writer.\n","sig":null,"attributes":[{"value":"/ Consumes this `Writer`, returning the underlying writer.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":335856,"byte_end":335916,"line_start":83,"line_end":83,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":520},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":336034,"byte_end":336039,"line_start":89,"line_end":89,"column_start":12,"column_end":17},"name":"inner","qualname":"<Writer<W>>::inner","value":"pub fn inner(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Get inner writer, keeping ownership\n","sig":null,"attributes":[{"value":"/ Get inner writer, keeping ownership","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":335983,"byte_end":336022,"line_start":88,"line_end":88,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":521},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":336163,"byte_end":336174,"line_start":94,"line_end":94,"column_start":12,"column_end":23},"name":"write_event","qualname":"<Writer<W>>::write_event","value":"pub fn write_event<'a, E: AsRef<Event>>(&mut Self, E) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Writes the given event to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Writes the given event to the underlying writer.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":336099,"byte_end":336151,"line_start":93,"line_end":93,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":524},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":337722,"byte_end":337727,"line_start":135,"line_end":135,"column_start":12,"column_end":17},"name":"write","qualname":"<Writer<W>>::write","value":"pub fn write(&mut Self, &[u8]) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Writes bytes\n","sig":null,"attributes":[{"value":"/ Writes bytes","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":337680,"byte_end":337696,"line_start":133,"line_end":133,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":337701,"byte_end":337710,"line_start":134,"line_end":134,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":526},"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":338851,"byte_end":338863,"line_start":164,"line_end":164,"column_start":12,"column_end":24},"name":"write_indent","qualname":"<Writer<W>>::write_indent","value":"pub fn write_indent(&mut Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Manually write a newline and indentation at the proper level.","sig":null,"attributes":[{"value":"/ Manually write a newline and indentation at the proper level.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":338348,"byte_end":338413,"line_start":155,"line_end":155,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":338418,"byte_end":338421,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This can be used when the heuristic to line break and indent after any [Event] apart","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":338426,"byte_end":338514,"line_start":157,"line_end":157,"column_start":5,"column_end":93}},{"value":"/ from [Text] fails such as when a [Start] occurs directly after [Text].","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":338519,"byte_end":338593,"line_start":158,"line_end":158,"column_start":5,"column_end":79}},{"value":"/ This method will do nothing if `Writer` was not constructed with `new_with_indent`.","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":338598,"byte_end":338685,"line_start":159,"line_end":159,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":338690,"byte_end":338693,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ [Event]: events/enum.Event.html","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":338698,"byte_end":338733,"line_start":161,"line_end":161,"column_start":5,"column_end":40}},{"value":"/ [Text]: events/enum.Event.html#variant.Text","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":338738,"byte_end":338785,"line_start":162,"line_end":162,"column_start":5,"column_end":52}},{"value":"/ [Start]: events/enum.Event.html#variant.Start","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":338790,"byte_end":338839,"line_start":163,"line_end":163,"column_start":5,"column_end":54}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":5962,"byte_end":5967,"line_start":39,"line_end":39,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":7}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":6158,"byte_end":6163,"line_start":47,"line_end":47,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":9}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":6519,"byte_end":6524,"line_start":60,"line_end":60,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":13}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":8519,"byte_end":8524,"line_start":109,"line_end":109,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":15}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/escapei.rs","byte_start":12931,"byte_end":12942,"line_start":28,"line_end":28,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/escapei.rs","byte_start":14134,"byte_end":14145,"line_start":56,"line_end":56,"column_start":28,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":267641,"byte_end":267651,"line_start":34,"line_end":34,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":269456,"byte_end":269465,"line_start":89,"line_end":89,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":114},{"krate":0,"index":116},{"krate":0,"index":119},{"krate":0,"index":121},{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":277274,"byte_end":277283,"line_start":285,"line_end":285,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":277643,"byte_end":277652,"line_start":297,"line_end":297,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":278258,"byte_end":278267,"line_start":317,"line_end":317,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":278853,"byte_end":278863,"line_start":337,"line_end":337,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":236789,"byte_end":236799,"line_start":39,"line_end":39,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":206},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":221},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":229},{"krate":0,"index":231},{"krate":0,"index":233},{"krate":0,"index":236},{"krate":0,"index":239},{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":246322,"byte_end":246332,"line_start":323,"line_end":323,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":246833,"byte_end":246842,"line_start":341,"line_end":341,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":250758,"byte_end":250766,"line_start":463,"line_end":463,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":251912,"byte_end":251920,"line_start":506,"line_end":506,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":252354,"byte_end":252363,"line_start":523,"line_end":523,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":274},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":284},{"krate":0,"index":286},{"krate":0,"index":288},{"krate":0,"index":290},{"krate":0,"index":293},{"krate":0,"index":295},{"krate":0,"index":297},{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":261005,"byte_end":261014,"line_start":760,"line_end":760,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":262102,"byte_end":262107,"line_start":797,"line_end":797,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":262951,"byte_end":262961,"line_start":816,"line_end":816,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":312},{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":263070,"byte_end":263079,"line_start":823,"line_end":823,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":316},{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":263192,"byte_end":263200,"line_start":830,"line_end":830,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":320},{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":263310,"byte_end":263319,"line_start":837,"line_end":837,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":324},{"krate":0,"index":325}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":263432,"byte_end":263437,"line_start":844,"line_end":844,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":328},{"krate":0,"index":329}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":263940,"byte_end":263945,"line_start":861,"line_end":861,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":288092,"byte_end":288098,"line_start":100,"line_end":100,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":412},{"krate":0,"index":415},{"krate":0,"index":420},{"krate":0,"index":426},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":434},{"krate":0,"index":437},{"krate":0,"index":441},{"krate":0,"index":445},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":453},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":459},{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":319852,"byte_end":319858,"line_start":908,"line_end":908,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":463}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":320167,"byte_end":320173,"line_start":917,"line_end":917,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":467}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":325689,"byte_end":325698,"line_start":1078,"line_end":1078,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":474},{"krate":0,"index":477}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":327229,"byte_end":327249,"line_start":1120,"line_end":1120,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":480},{"krate":0,"index":486},{"krate":0,"index":489},{"krate":0,"index":490}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":331414,"byte_end":331421,"line_start":1238,"line_end":1238,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":497}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":335366,"byte_end":335372,"line_start":66,"line_end":66,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":339314,"byte_end":339325,"line_start":184,"line_end":184,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":530}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":4668,"byte_end":4674,"line_start":132,"line_end":132,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":67}},{"kind":"Mod","span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":235799,"byte_end":235809,"line_start":3,"line_end":3,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":68}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":5962,"byte_end":5967,"line_start":39,"line_end":39,"column_start":33,"column_end":38},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":544},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":6158,"byte_end":6163,"line_start":47,"line_end":47,"column_start":38,"column_end":43},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":544},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":6519,"byte_end":6524,"line_start":60,"line_end":60,"column_start":28,"column_end":33},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":544},"to":{"krate":2,"index":9687}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":8519,"byte_end":8524,"line_start":109,"line_end":109,"column_start":28,"column_end":33},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":544},"to":{"krate":1,"index":2546}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/escapei.rs","byte_start":12931,"byte_end":12942,"line_start":28,"line_end":28,"column_start":28,"column_end":39},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":585},"to":{"krate":2,"index":9687}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/escapei.rs","byte_start":14134,"byte_end":14145,"line_start":56,"line_end":56,"column_start":28,"column_end":39},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":585},"to":{"krate":1,"index":2546}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":267641,"byte_end":267651,"line_start":34,"line_end":34,"column_start":10,"column_end":20},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":608},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":269456,"byte_end":269465,"line_start":89,"line_end":89,"column_start":10,"column_end":19},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":618},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":277274,"byte_end":277283,"line_start":285,"line_end":285,"column_start":30,"column_end":39},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":618},"to":{"krate":2,"index":9680}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":277643,"byte_end":277652,"line_start":297,"line_end":297,"column_start":41,"column_end":50},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":618},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":278258,"byte_end":278267,"line_start":317,"line_end":317,"column_start":39,"column_end":48},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":618},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":278853,"byte_end":278863,"line_start":337,"line_end":337,"column_start":23,"column_end":33},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":608},"to":{"krate":2,"index":7978}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":236789,"byte_end":236799,"line_start":39,"line_end":39,"column_start":10,"column_end":20},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":631},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":246322,"byte_end":246332,"line_start":323,"line_end":323,"column_start":30,"column_end":40},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":631},"to":{"krate":2,"index":9680}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":246833,"byte_end":246842,"line_start":341,"line_end":341,"column_start":10,"column_end":19},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":638},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":250758,"byte_end":250766,"line_start":463,"line_end":463,"column_start":10,"column_end":18},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":647},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":251912,"byte_end":251920,"line_start":506,"line_end":506,"column_start":30,"column_end":38},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":647},"to":{"krate":2,"index":9680}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":252354,"byte_end":252363,"line_start":523,"line_end":523,"column_start":10,"column_end":19},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":653},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":261005,"byte_end":261014,"line_start":760,"line_end":760,"column_start":30,"column_end":39},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":653},"to":{"krate":2,"index":9680}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":262102,"byte_end":262107,"line_start":797,"line_end":797,"column_start":10,"column_end":15},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":659},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":262951,"byte_end":262961,"line_start":816,"line_end":816,"column_start":20,"column_end":30},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":631},"to":{"krate":2,"index":3276}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":263070,"byte_end":263079,"line_start":823,"line_end":823,"column_start":20,"column_end":29},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":638},"to":{"krate":2,"index":3276}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":263192,"byte_end":263200,"line_start":830,"line_end":830,"column_start":20,"column_end":28},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":647},"to":{"krate":2,"index":3276}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":263310,"byte_end":263319,"line_start":837,"line_end":837,"column_start":20,"column_end":29},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":653},"to":{"krate":2,"index":3276}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":263432,"byte_end":263437,"line_start":844,"line_end":844,"column_start":20,"column_end":25},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":659},"to":{"krate":2,"index":3276}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":263940,"byte_end":263945,"line_start":861,"line_end":861,"column_start":31,"column_end":36},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":659},"to":{"krate":2,"index":2954}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":288092,"byte_end":288098,"line_start":100,"line_end":100,"column_start":18,"column_end":24},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":707},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":319852,"byte_end":319858,"line_start":908,"line_end":908,"column_start":6,"column_end":12},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":707},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":320167,"byte_end":320173,"line_start":917,"line_end":917,"column_start":10,"column_end":16},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":707},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":325689,"byte_end":325698,"line_start":1078,"line_end":1078,"column_start":6,"column_end":15},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":736},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":327229,"byte_end":327249,"line_start":1120,"line_end":1120,"column_start":6,"column_end":26},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":745},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":331414,"byte_end":331421,"line_start":1238,"line_end":1238,"column_start":6,"column_end":13},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":755},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":335366,"byte_end":335372,"line_start":66,"line_end":66,"column_start":16,"column_end":22},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":760},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Seb/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":339314,"byte_end":339325,"line_start":184,"line_end":184,"column_start":6,"column_end":17},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":767},"to":{"krate":4294967295,"index":4294967295}}]}